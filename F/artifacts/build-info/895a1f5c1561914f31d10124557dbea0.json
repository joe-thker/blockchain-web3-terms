{
	"id": "895a1f5c1561914f31d10124557dbea0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"F/DynamicCRFractionalStablecoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ninterface IPriceOracle {\n    function getPrice() external view returns (uint256); // scaled to 1e8\n}\n\ninterface IGovToken {\n    function transferFrom(address, address, uint256) external returns (bool);\n    function transfer(address, uint256) external returns (bool);\n}\n\ncontract DynamicCRFractionalStablecoin is ERC20, Ownable {\n    uint256 public collateralRatio = 7500; // scaled to 10000 = 100%\n    uint256 public constant RATIO_SCALE = 1e4;\n    uint256 public constant PRICE_TARGET = 1e8; // $1.00 in 1e8\n\n    address public govToken;\n    IPriceOracle public priceOracle;\n\n    constructor(address _govToken, address _oracle)\n        ERC20(\"DynamicFUSD\", \"dFUSD\")\n        Ownable(msg.sender)\n    {\n        govToken = _govToken;\n        priceOracle = IPriceOracle(_oracle);\n    }\n\n    function updateCR() public {\n        uint256 price = priceOracle.getPrice();\n        if (price > PRICE_TARGET) {\n            // FUSD > $1 → reduce CR\n            if (collateralRatio > 5000) {\n                collateralRatio -= 100;\n            }\n        } else if (price < PRICE_TARGET) {\n            // FUSD < $1 → increase CR\n            if (collateralRatio < 9500) {\n                collateralRatio += 100;\n            }\n        }\n    }\n\n    function mint() external payable {\n        require(msg.value > 0, \"Send ETH\");\n        updateCR();\n\n        uint256 totalValue = msg.value * PRICE_TARGET / 1e18; // ETH to USD\n        uint256 ethValue = (totalValue * collateralRatio) / RATIO_SCALE;\n        uint256 fraValue = totalValue - ethValue;\n        uint256 fraAmount = (fraValue * 1e18) / PRICE_TARGET;\n\n        require(\n            IGovToken(govToken).transferFrom(msg.sender, address(this), fraAmount),\n            \"FRA transfer failed\"\n        );\n\n        _mint(msg.sender, totalValue);\n    }\n\n    function burn(uint256 amount) external {\n        _burn(msg.sender, amount);\n        updateCR();\n\n        uint256 ethValue = (amount * collateralRatio) / RATIO_SCALE;\n        uint256 fraValue = amount - ethValue;\n\n        uint256 ethToSend = (ethValue * 1e18) / PRICE_TARGET;\n        uint256 fraToSend = (fraValue * 1e18) / PRICE_TARGET;\n\n        require(address(this).balance >= ethToSend, \"Not enough ETH\");\n        require(IGovToken(govToken).transfer(msg.sender, fraToSend), \"FRA transfer failed\");\n\n        payable(msg.sender).transfer(ethToSend);\n    }\n\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"F/DynamicCRFractionalStablecoin.sol": {
				"DynamicCRFractionalStablecoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_govToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PRICE_TARGET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RATIO_SCALE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "govToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOracle",
							"outputs": [
								{
									"internalType": "contract IPriceOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCR",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"F/DynamicCRFractionalStablecoin.sol\":438:2557  contract DynamicCRFractionalStablecoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"F/DynamicCRFractionalStablecoin.sol\":534:538  7500 */\n  0x1d4c\n    /* \"F/DynamicCRFractionalStablecoin.sol\":501:538  uint256 public collateralRatio = 7500 */\n  0x06\n  sstore\n    /* \"F/DynamicCRFractionalStablecoin.sol\":749:949  constructor(address _govToken, address _oracle)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"F/DynamicCRFractionalStablecoin.sol\":851:861  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x44796e616d696346555344000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x6446555344000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"F/DynamicCRFractionalStablecoin.sol\":888:897  _govToken */\n  dup2\n    /* \"F/DynamicCRFractionalStablecoin.sol\":877:885  govToken */\n  0x07\n  0x00\n    /* \"F/DynamicCRFractionalStablecoin.sol\":877:897  govToken = _govToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"F/DynamicCRFractionalStablecoin.sol\":934:941  _oracle */\n  dup1\n    /* \"F/DynamicCRFractionalStablecoin.sol\":907:918  priceOracle */\n  0x08\n  0x00\n    /* \"F/DynamicCRFractionalStablecoin.sol\":907:942  priceOracle = IPriceOracle(_oracle) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"F/DynamicCRFractionalStablecoin.sol\":749:949  constructor(address _govToken, address _oracle)... */\n  pop\n  pop\n    /* \"F/DynamicCRFractionalStablecoin.sol\":438:2557  contract DynamicCRFractionalStablecoin is ERC20, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":949:1068   */\ntag_61:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_63\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_64\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_26\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_27:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_28:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_29:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_30:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_69:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_71\n  tag_29\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2065:2149   */\ntag_70:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_31:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_32:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_33:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_34:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_76\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2780:2819   */\n  tag_77\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_35:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_36:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_37:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_81\n    /* \"#utility.yul\":3169:3203   */\n  tag_82\n    /* \"#utility.yul\":3178:3202   */\n  tag_83\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_35\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3169:3203   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3151:3204   */\n  tag_35\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_38:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_39:\n    /* \"#utility.yul\":3407:3446   */\n  tag_86\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_37\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3468:3559   */\n  tag_87\n    /* \"#utility.yul\":3517:3558   */\n  tag_88\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_34\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_40:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3638:3639   */\n  0x00\n    /* \"#utility.yul\":3631:3639   */\n  swap1\n  pop\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_41:\n    /* \"#utility.yul\":3728:3760   */\n  tag_91\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3769:3834   */\n  tag_92\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_39\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_42:\n    /* \"#utility.yul\":3906:4026   */\ntag_94:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_97\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_41\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_43:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_100\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4257:4286   */\n  tag_101\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_102:\n    /* \"#utility.yul\":4484:4564   */\n  tag_103\n    /* \"#utility.yul\":4540:4562   */\n  tag_104\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_42\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_99:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_44:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_45:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_107\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_44\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_46:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_109\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_45\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_111\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_27\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_113\n  tag_28\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5389:5445   */\ntag_112:\n    /* \"#utility.yul\":5469:5507   */\n  tag_114\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_30\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5554:5621   */\n  tag_115\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_43\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_118:\n    /* \"#utility.yul\":6495:6562   */\n  tag_119\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_46\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_116)\n    /* \"#utility.yul\":5716:6334   */\ntag_117:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_120\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_31\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_121:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_125\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_45\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_124:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_116:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_47:\n    /* \"#utility.yul\":6672:6696   */\n  tag_127\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_24\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_14:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_129\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_47\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"F/DynamicCRFractionalStablecoin.sol\":438:2557  contract DynamicCRFractionalStablecoin is ERC20, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"F/DynamicCRFractionalStablecoin.sol\":438:2557  contract DynamicCRFractionalStablecoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb4eae1cb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb4eae1cb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc752b47e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd9c37512\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x73d49515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2630c12f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x05268cff\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"F/DynamicCRFractionalStablecoin.sol\":682:705  address public govToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1404:1957  function mint() external payable {... */\n    tag_6:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/DynamicCRFractionalStablecoin.sol\":711:742  IPriceOracle public priceOracle */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1963:2520  function burn(uint256 amount) external {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":617:659  uint256 public constant PRICE_TARGET = 1e8 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      revert(0x00, 0x00)\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/DynamicCRFractionalStablecoin.sol\":501:538  uint256 public collateralRatio = 7500 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      revert(0x00, 0x00)\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/DynamicCRFractionalStablecoin.sol\":955:1398  function updateCR() public {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      stop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":570:611  uint256 public constant RATIO_SCALE = 1e4 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      revert(0x00, 0x00)\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      revert(0x00, 0x00)\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":682:705  address public govToken */\n    tag_30:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_122\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1404:1957  function mint() external payable {... */\n    tag_46:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1467:1468  0 */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1455:1464  msg.value */\n      callvalue\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1455:1468  msg.value > 0 */\n      gt\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1447:1481  require(msg.value > 0, \"Send ETH\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1491:1501  updateCR() */\n      tag_136\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1491:1499  updateCR */\n      tag_105\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1491:1501  updateCR() */\n      jump\t// in\n    tag_136:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1512:1530  uint256 totalValue */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1560:1564  1e18 */\n      0x0de0b6b3a7640000\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1533:1542  msg.value */\n      callvalue\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1533:1557  msg.value * PRICE_TARGET */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1533:1564  msg.value * PRICE_TARGET / 1e18 */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1512:1564  uint256 totalValue = msg.value * PRICE_TARGET / 1e18 */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1588:1604  uint256 ethValue */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":608:611  1e4 */\n      0x2710\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1621:1636  collateralRatio */\n      sload(0x06)\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1608:1618  totalValue */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1608:1636  totalValue * collateralRatio */\n      tag_141\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_141:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1607:1651  (totalValue * collateralRatio) / RATIO_SCALE */\n      tag_142\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_142:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1588:1651  uint256 ethValue = (totalValue * collateralRatio) / RATIO_SCALE */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1661:1677  uint256 fraValue */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1693:1701  ethValue */\n      dup2\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1680:1690  totalValue */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1680:1701  totalValue - ethValue */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1661:1701  uint256 fraValue = totalValue - ethValue */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1711:1728  uint256 fraAmount */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1743:1747  1e18 */\n      0x0de0b6b3a7640000\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1732:1740  fraValue */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1732:1747  fraValue * 1e18 */\n      tag_145\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_145:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1731:1763  (fraValue * 1e18) / PRICE_TARGET */\n      tag_146\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_146:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1711:1763  uint256 fraAmount = (fraValue * 1e18) / PRICE_TARGET */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1805:1813  govToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1795:1827  IGovToken(govToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1828:1838  msg.sender */\n      caller\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1848:1852  this */\n      address\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1855:1864  fraAmount */\n      dup5\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1795:1865  IGovToken(govToken).transferFrom(msg.sender, address(this), fraAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1774:1910  require(... */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1921:1950  _mint(msg.sender, totalValue) */\n      tag_156\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1927:1937  msg.sender */\n      caller\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1939:1949  totalValue */\n      dup6\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1921:1926  _mint */\n      tag_157\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1921:1950  _mint(msg.sender, totalValue) */\n      jump\t// in\n    tag_156:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1437:1957  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1404:1957  function mint() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":711:742  IPriceOracle public priceOracle */\n    tag_60:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1963:2520  function burn(uint256 amount) external {... */\n    tag_72:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2012:2037  _burn(msg.sender, amount) */\n      tag_167\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2018:2028  msg.sender */\n      caller\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2030:2036  amount */\n      dup3\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2012:2017  _burn */\n      tag_168\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2012:2037  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_167:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2047:2057  updateCR() */\n      tag_169\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2047:2055  updateCR */\n      tag_105\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2047:2057  updateCR() */\n      jump\t// in\n    tag_169:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2068:2084  uint256 ethValue */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":608:611  1e4 */\n      0x2710\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2097:2112  collateralRatio */\n      sload(0x06)\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2088:2094  amount */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2088:2112  amount * collateralRatio */\n      tag_170\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_170:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2087:2127  (amount * collateralRatio) / RATIO_SCALE */\n      tag_171\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_171:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2068:2127  uint256 ethValue = (amount * collateralRatio) / RATIO_SCALE */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2137:2153  uint256 fraValue */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2165:2173  ethValue */\n      dup2\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2156:2162  amount */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2156:2173  amount - ethValue */\n      tag_172\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_172:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2137:2173  uint256 fraValue = amount - ethValue */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2184:2201  uint256 ethToSend */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2216:2220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2205:2213  ethValue */\n      dup5\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2205:2220  ethValue * 1e18 */\n      tag_173\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_173:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2204:2236  (ethValue * 1e18) / PRICE_TARGET */\n      tag_174\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_174:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2184:2236  uint256 ethToSend = (ethValue * 1e18) / PRICE_TARGET */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2246:2263  uint256 fraToSend */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2278:2282  1e18 */\n      0x0de0b6b3a7640000\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2267:2275  fraValue */\n      dup5\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2267:2282  fraValue * 1e18 */\n      tag_175\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_175:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2266:2298  (fraValue * 1e18) / PRICE_TARGET */\n      tag_176\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_176:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2246:2298  uint256 fraToSend = (fraValue * 1e18) / PRICE_TARGET */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2342:2351  ethToSend */\n      dup2\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2317:2338  address(this).balance */\n      selfbalance\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2317:2351  address(this).balance >= ethToSend */\n      lt\n      iszero\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2309:2370  require(address(this).balance >= ethToSend, \"Not enough ETH\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2398:2406  govToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2388:2416  IGovToken(govToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2417:2427  msg.sender */\n      caller\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2429:2438  fraToSend */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2388:2439  IGovToken(govToken).transfer(msg.sender, fraToSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_184:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2380:2463  require(IGovToken(govToken).transfer(msg.sender, fraToSend), \"FRA transfer failed\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_155\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2482:2492  msg.sender */\n      caller\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2474:2502  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2474:2513  payable(msg.sender).transfer(ethToSend) */\n      0x08fc\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2503:2512  ethToSend */\n      dup4\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2474:2513  payable(msg.sender).transfer(ethToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":2002:2520  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1963:2520  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":617:659  uint256 public constant PRICE_TARGET = 1e8 */\n    tag_84:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":617:659  uint256 public constant PRICE_TARGET = 1e8 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_122\n      jump\t// in\n    tag_198:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_122\n      jump\t// in\n    tag_199:\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_201\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_200)\n    tag_201:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_202:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_202\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":501:538  uint256 public collateralRatio = 7500 */\n    tag_101:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":955:1398  function updateCR() public {... */\n    tag_105:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":992:1005  uint256 price */\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1008:1019  priceOracle */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1008:1028  priceOracle.getPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x98d5fdca\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1008:1030  priceOracle.getPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":992:1030  uint256 price = priceOracle.getPrice() */\n      swap1\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1044:1049  price */\n      dup2\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1044:1064  price > PRICE_TARGET */\n      gt\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1040:1392  if (price > PRICE_TARGET) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1141:1145  5000 */\n      0x1388\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1123:1138  collateralRatio */\n      sload(0x06)\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1123:1145  collateralRatio > 5000 */\n      gt\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1119:1202  if (collateralRatio > 5000) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1184:1187  100 */\n      0x64\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1165:1180  collateralRatio */\n      0x06\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1165:1187  collateralRatio -= 100 */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_213:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1119:1202  if (collateralRatio > 5000) {... */\n    tag_212:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1040:1392  if (price > PRICE_TARGET) {... */\n      jump(tag_214)\n    tag_211:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":656:659  1e8 */\n      0x05f5e100\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1222:1227  price */\n      dup2\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1222:1242  price < PRICE_TARGET */\n      lt\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1218:1392  if (price < PRICE_TARGET) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1321:1325  9500 */\n      0x251c\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1303:1318  collateralRatio */\n      sload(0x06)\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1303:1325  collateralRatio < 9500 */\n      lt\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1299:1382  if (collateralRatio < 9500) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1364:1367  100 */\n      0x64\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1345:1360  collateralRatio */\n      0x06\n      0x00\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1345:1367  collateralRatio += 100 */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1299:1382  if (collateralRatio < 9500) {... */\n    tag_216:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1218:1392  if (price < PRICE_TARGET) {... */\n    tag_215:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":1040:1392  if (price > PRICE_TARGET) {... */\n    tag_214:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":982:1398  {... */\n      pop\n        /* \"F/DynamicCRFractionalStablecoin.sol\":955:1398  function updateCR() public {... */\n      jump\t// out\n        /* \"F/DynamicCRFractionalStablecoin.sol\":570:611  uint256 public constant RATIO_SCALE = 1e4 */\n    tag_108:\n        /* \"F/DynamicCRFractionalStablecoin.sol\":608:611  1e4 */\n      0x2710\n        /* \"F/DynamicCRFractionalStablecoin.sol\":570:611  uint256 public constant RATIO_SCALE = 1e4 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_268\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_268:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_269)\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_273)\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_275:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_276:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_316\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_275\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_277:\n        /* \"#utility.yul\":328:352   */\n      tag_318\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_276\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_32:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_320\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_277\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:692   */\n    tag_278:\n        /* \"#utility.yul\":645:651   */\n      0x00\n        /* \"#utility.yul\":679:684   */\n      dup2\n        /* \"#utility.yul\":673:685   */\n      mload\n        /* \"#utility.yul\":663:685   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:867   */\n    tag_279:\n        /* \"#utility.yul\":782:793   */\n      0x00\n        /* \"#utility.yul\":816:822   */\n      dup3\n        /* \"#utility.yul\":811:814   */\n      dup3\n        /* \"#utility.yul\":804:823   */\n      mstore\n        /* \"#utility.yul\":856:860   */\n      0x20\n        /* \"#utility.yul\":851:854   */\n      dup3\n        /* \"#utility.yul\":847:861   */\n      add\n        /* \"#utility.yul\":832:861   */\n      swap1\n      pop\n        /* \"#utility.yul\":698:867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":873:1012   */\n    tag_280:\n        /* \"#utility.yul\":962:968   */\n      dup3\n        /* \"#utility.yul\":957:960   */\n      dup2\n        /* \"#utility.yul\":952:955   */\n      dup4\n        /* \"#utility.yul\":946:969   */\n      mcopy\n        /* \"#utility.yul\":1003:1004   */\n      0x00\n        /* \"#utility.yul\":994:1000   */\n      dup4\n        /* \"#utility.yul\":989:992   */\n      dup4\n        /* \"#utility.yul\":985:1001   */\n      add\n        /* \"#utility.yul\":978:1005   */\n      mstore\n        /* \"#utility.yul\":873:1012   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1018:1120   */\n    tag_281:\n        /* \"#utility.yul\":1059:1065   */\n      0x00\n        /* \"#utility.yul\":1110:1112   */\n      0x1f\n        /* \"#utility.yul\":1106:1113   */\n      not\n        /* \"#utility.yul\":1101:1103   */\n      0x1f\n        /* \"#utility.yul\":1094:1099   */\n      dup4\n        /* \"#utility.yul\":1090:1104   */\n      add\n        /* \"#utility.yul\":1086:1114   */\n      and\n        /* \"#utility.yul\":1076:1114   */\n      swap1\n      pop\n        /* \"#utility.yul\":1018:1120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1503   */\n    tag_282:\n        /* \"#utility.yul\":1214:1217   */\n      0x00\n        /* \"#utility.yul\":1242:1281   */\n      tag_326\n        /* \"#utility.yul\":1275:1280   */\n      dup3\n        /* \"#utility.yul\":1242:1281   */\n      tag_278\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1297:1368   */\n      tag_327\n        /* \"#utility.yul\":1361:1367   */\n      dup2\n        /* \"#utility.yul\":1356:1359   */\n      dup6\n        /* \"#utility.yul\":1297:1368   */\n      tag_279\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1290:1368   */\n      swap4\n      pop\n        /* \"#utility.yul\":1377:1442   */\n      tag_328\n        /* \"#utility.yul\":1435:1441   */\n      dup2\n        /* \"#utility.yul\":1430:1433   */\n      dup6\n        /* \"#utility.yul\":1423:1427   */\n      0x20\n        /* \"#utility.yul\":1416:1421   */\n      dup7\n        /* \"#utility.yul\":1412:1428   */\n      add\n        /* \"#utility.yul\":1377:1442   */\n      tag_280\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1467:1496   */\n      tag_329\n        /* \"#utility.yul\":1489:1495   */\n      dup2\n        /* \"#utility.yul\":1467:1496   */\n      tag_281\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1462:1465   */\n      dup5\n        /* \"#utility.yul\":1458:1497   */\n      add\n        /* \"#utility.yul\":1451:1497   */\n      swap2\n      pop\n        /* \"#utility.yul\":1218:1503   */\n      pop\n        /* \"#utility.yul\":1126:1503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1822   */\n    tag_37:\n        /* \"#utility.yul\":1622:1626   */\n      0x00\n        /* \"#utility.yul\":1660:1662   */\n      0x20\n        /* \"#utility.yul\":1649:1658   */\n      dup3\n        /* \"#utility.yul\":1645:1663   */\n      add\n        /* \"#utility.yul\":1637:1663   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1718   */\n      dup2\n        /* \"#utility.yul\":1703:1707   */\n      dup2\n        /* \"#utility.yul\":1699:1719   */\n      sub\n        /* \"#utility.yul\":1695:1696   */\n      0x00\n        /* \"#utility.yul\":1684:1693   */\n      dup4\n        /* \"#utility.yul\":1680:1697   */\n      add\n        /* \"#utility.yul\":1673:1720   */\n      mstore\n        /* \"#utility.yul\":1737:1815   */\n      tag_331\n        /* \"#utility.yul\":1810:1814   */\n      dup2\n        /* \"#utility.yul\":1801:1807   */\n      dup5\n        /* \"#utility.yul\":1737:1815   */\n      tag_282\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1729:1815   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2026   */\n    tag_284:\n        /* \"#utility.yul\":2018:2019   */\n      0x00\n        /* \"#utility.yul\":2015:2016   */\n      0x00\n        /* \"#utility.yul\":2008:2020   */\n      revert\n        /* \"#utility.yul\":2155:2277   */\n    tag_286:\n        /* \"#utility.yul\":2228:2252   */\n      tag_336\n        /* \"#utility.yul\":2246:2251   */\n      dup2\n        /* \"#utility.yul\":2228:2252   */\n      tag_276\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2218:2253   */\n      eq\n        /* \"#utility.yul\":2208:2271   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2267:2268   */\n      0x00\n        /* \"#utility.yul\":2264:2265   */\n      0x00\n        /* \"#utility.yul\":2257:2269   */\n      revert\n        /* \"#utility.yul\":2208:2271   */\n    tag_337:\n        /* \"#utility.yul\":2155:2277   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2422   */\n    tag_287:\n        /* \"#utility.yul\":2329:2334   */\n      0x00\n        /* \"#utility.yul\":2367:2373   */\n      dup2\n        /* \"#utility.yul\":2354:2374   */\n      calldataload\n        /* \"#utility.yul\":2345:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2383:2416   */\n      tag_339\n        /* \"#utility.yul\":2410:2415   */\n      dup2\n        /* \"#utility.yul\":2383:2416   */\n      tag_286\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2283:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2505   */\n    tag_288:\n        /* \"#utility.yul\":2465:2472   */\n      0x00\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2483:2499   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_289:\n        /* \"#utility.yul\":2584:2608   */\n      tag_342\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_288\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_343:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_290:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_345\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_289\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_41:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_348\n      tag_284\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2877:2996   */\n    tag_347:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_349\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_287\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_350\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_290\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_291:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_292:\n        /* \"#utility.yul\":3441:3462   */\n      tag_353\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_291\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_44:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_355\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_292\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3809   */\n    tag_293:\n        /* \"#utility.yul\":3778:3802   */\n      tag_357\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3778:3802   */\n      tag_288\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3773:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3803   */\n      mstore\n        /* \"#utility.yul\":3691:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4037   */\n    tag_51:\n        /* \"#utility.yul\":3908:3912   */\n      0x00\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3935:3944   */\n      dup3\n        /* \"#utility.yul\":3931:3949   */\n      add\n        /* \"#utility.yul\":3923:3949   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4030   */\n      tag_359\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3959:4030   */\n      tag_293\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3815:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4662   */\n    tag_55:\n        /* \"#utility.yul\":4120:4126   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      0x00\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x60\n        /* \"#utility.yul\":4173:4182   */\n      dup5\n        /* \"#utility.yul\":4164:4171   */\n      dup7\n        /* \"#utility.yul\":4160:4183   */\n      sub\n        /* \"#utility.yul\":4156:4188   */\n      slt\n        /* \"#utility.yul\":4153:4272   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":4191:4270   */\n      tag_362\n      tag_284\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4153:4272   */\n    tag_361:\n        /* \"#utility.yul\":4311:4312   */\n      0x00\n        /* \"#utility.yul\":4336:4389   */\n      tag_363\n        /* \"#utility.yul\":4381:4388   */\n      dup7\n        /* \"#utility.yul\":4372:4378   */\n      dup3\n        /* \"#utility.yul\":4361:4370   */\n      dup8\n        /* \"#utility.yul\":4357:4379   */\n      add\n        /* \"#utility.yul\":4336:4389   */\n      tag_287\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4326:4389   */\n      swap4\n      pop\n        /* \"#utility.yul\":4282:4399   */\n      pop\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4464:4517   */\n      tag_364\n        /* \"#utility.yul\":4509:4516   */\n      dup7\n        /* \"#utility.yul\":4500:4506   */\n      dup3\n        /* \"#utility.yul\":4489:4498   */\n      dup8\n        /* \"#utility.yul\":4485:4507   */\n      add\n        /* \"#utility.yul\":4464:4517   */\n      tag_287\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4454:4517   */\n      swap3\n      pop\n        /* \"#utility.yul\":4409:4527   */\n      pop\n        /* \"#utility.yul\":4566:4568   */\n      0x40\n        /* \"#utility.yul\":4592:4645   */\n      tag_365\n        /* \"#utility.yul\":4637:4644   */\n      dup7\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup8\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_290\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4582:4645   */\n      swap2\n      pop\n        /* \"#utility.yul\":4537:4655   */\n      pop\n        /* \"#utility.yul\":4043:4662   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4668:4728   */\n    tag_294:\n        /* \"#utility.yul\":4696:4699   */\n      0x00\n        /* \"#utility.yul\":4717:4722   */\n      dup2\n        /* \"#utility.yul\":4710:4722   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4734:4876   */\n    tag_295:\n        /* \"#utility.yul\":4784:4793   */\n      0x00\n        /* \"#utility.yul\":4817:4870   */\n      tag_368\n        /* \"#utility.yul\":4835:4869   */\n      tag_369\n        /* \"#utility.yul\":4844:4868   */\n      tag_370\n        /* \"#utility.yul\":4862:4867   */\n      dup5\n        /* \"#utility.yul\":4844:4868   */\n      tag_275\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4835:4869   */\n      tag_294\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4817:4870   */\n      tag_275\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4804:4870   */\n      swap1\n      pop\n        /* \"#utility.yul\":4734:4876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4882:5008   */\n    tag_296:\n        /* \"#utility.yul\":4932:4941   */\n      0x00\n        /* \"#utility.yul\":4965:5002   */\n      tag_372\n        /* \"#utility.yul\":4996:5001   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      tag_295\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4952:5002   */\n      swap1\n      pop\n        /* \"#utility.yul\":4882:5008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5160   */\n    tag_297:\n        /* \"#utility.yul\":5084:5093   */\n      0x00\n        /* \"#utility.yul\":5117:5154   */\n      tag_374\n        /* \"#utility.yul\":5148:5153   */\n      dup3\n        /* \"#utility.yul\":5117:5154   */\n      tag_296\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5104:5154   */\n      swap1\n      pop\n        /* \"#utility.yul\":5014:5160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5166:5337   */\n    tag_298:\n        /* \"#utility.yul\":5273:5330   */\n      tag_376\n        /* \"#utility.yul\":5324:5329   */\n      dup2\n        /* \"#utility.yul\":5273:5330   */\n      tag_297\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5268:5271   */\n      dup3\n        /* \"#utility.yul\":5261:5331   */\n      mstore\n        /* \"#utility.yul\":5166:5337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5343:5605   */\n    tag_62:\n        /* \"#utility.yul\":5456:5460   */\n      0x00\n        /* \"#utility.yul\":5494:5496   */\n      0x20\n        /* \"#utility.yul\":5483:5492   */\n      dup3\n        /* \"#utility.yul\":5479:5497   */\n      add\n        /* \"#utility.yul\":5471:5497   */\n      swap1\n      pop\n        /* \"#utility.yul\":5507:5598   */\n      tag_378\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5584:5593   */\n      dup4\n        /* \"#utility.yul\":5580:5597   */\n      add\n        /* \"#utility.yul\":5571:5577   */\n      dup5\n        /* \"#utility.yul\":5507:5598   */\n      tag_298\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5343:5605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5697   */\n    tag_299:\n        /* \"#utility.yul\":5646:5653   */\n      0x00\n        /* \"#utility.yul\":5686:5690   */\n      0xff\n        /* \"#utility.yul\":5679:5684   */\n      dup3\n        /* \"#utility.yul\":5675:5691   */\n      and\n        /* \"#utility.yul\":5664:5691   */\n      swap1\n      pop\n        /* \"#utility.yul\":5611:5697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5703:5815   */\n    tag_300:\n        /* \"#utility.yul\":5786:5808   */\n      tag_381\n        /* \"#utility.yul\":5802:5807   */\n      dup2\n        /* \"#utility.yul\":5786:5808   */\n      tag_299\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5781:5784   */\n      dup3\n        /* \"#utility.yul\":5774:5809   */\n      mstore\n        /* \"#utility.yul\":5703:5815   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5821:6035   */\n    tag_67:\n        /* \"#utility.yul\":5910:5914   */\n      0x00\n        /* \"#utility.yul\":5948:5950   */\n      0x20\n        /* \"#utility.yul\":5937:5946   */\n      dup3\n        /* \"#utility.yul\":5933:5951   */\n      add\n        /* \"#utility.yul\":5925:5951   */\n      swap1\n      pop\n        /* \"#utility.yul\":5961:6028   */\n      tag_383\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6014:6023   */\n      dup4\n        /* \"#utility.yul\":6010:6027   */\n      add\n        /* \"#utility.yul\":6001:6007   */\n      dup5\n        /* \"#utility.yul\":5961:6028   */\n      tag_300\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5821:6035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6041:6370   */\n    tag_71:\n        /* \"#utility.yul\":6100:6106   */\n      0x00\n        /* \"#utility.yul\":6149:6151   */\n      0x20\n        /* \"#utility.yul\":6137:6146   */\n      dup3\n        /* \"#utility.yul\":6128:6135   */\n      dup5\n        /* \"#utility.yul\":6124:6147   */\n      sub\n        /* \"#utility.yul\":6120:6152   */\n      slt\n        /* \"#utility.yul\":6117:6236   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":6155:6234   */\n      tag_386\n      tag_284\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6117:6236   */\n    tag_385:\n        /* \"#utility.yul\":6275:6276   */\n      0x00\n        /* \"#utility.yul\":6300:6353   */\n      tag_387\n        /* \"#utility.yul\":6345:6352   */\n      dup5\n        /* \"#utility.yul\":6336:6342   */\n      dup3\n        /* \"#utility.yul\":6325:6334   */\n      dup6\n        /* \"#utility.yul\":6321:6343   */\n      add\n        /* \"#utility.yul\":6300:6353   */\n      tag_290\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6290:6353   */\n      swap2\n      pop\n        /* \"#utility.yul\":6246:6363   */\n      pop\n        /* \"#utility.yul\":6041:6370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6376:6705   */\n    tag_76:\n        /* \"#utility.yul\":6435:6441   */\n      0x00\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6472:6481   */\n      dup3\n        /* \"#utility.yul\":6463:6470   */\n      dup5\n        /* \"#utility.yul\":6459:6482   */\n      sub\n        /* \"#utility.yul\":6455:6487   */\n      slt\n        /* \"#utility.yul\":6452:6571   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":6490:6569   */\n      tag_390\n      tag_284\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6452:6571   */\n    tag_389:\n        /* \"#utility.yul\":6610:6611   */\n      0x00\n        /* \"#utility.yul\":6635:6688   */\n      tag_391\n        /* \"#utility.yul\":6680:6687   */\n      dup5\n        /* \"#utility.yul\":6671:6677   */\n      dup3\n        /* \"#utility.yul\":6660:6669   */\n      dup6\n        /* \"#utility.yul\":6656:6678   */\n      add\n        /* \"#utility.yul\":6635:6688   */\n      tag_287\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6625:6688   */\n      swap2\n      pop\n        /* \"#utility.yul\":6581:6698   */\n      pop\n        /* \"#utility.yul\":6376:6705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6711:7185   */\n    tag_113:\n        /* \"#utility.yul\":6779:6785   */\n      0x00\n        /* \"#utility.yul\":6787:6793   */\n      0x00\n        /* \"#utility.yul\":6836:6838   */\n      0x40\n        /* \"#utility.yul\":6824:6833   */\n      dup4\n        /* \"#utility.yul\":6815:6822   */\n      dup6\n        /* \"#utility.yul\":6811:6834   */\n      sub\n        /* \"#utility.yul\":6807:6839   */\n      slt\n        /* \"#utility.yul\":6804:6923   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":6842:6921   */\n      tag_394\n      tag_284\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6804:6923   */\n    tag_393:\n        /* \"#utility.yul\":6962:6963   */\n      0x00\n        /* \"#utility.yul\":6987:7040   */\n      tag_395\n        /* \"#utility.yul\":7032:7039   */\n      dup6\n        /* \"#utility.yul\":7023:7029   */\n      dup3\n        /* \"#utility.yul\":7012:7021   */\n      dup7\n        /* \"#utility.yul\":7008:7030   */\n      add\n        /* \"#utility.yul\":6987:7040   */\n      tag_287\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6977:7040   */\n      swap3\n      pop\n        /* \"#utility.yul\":6933:7050   */\n      pop\n        /* \"#utility.yul\":7089:7091   */\n      0x20\n        /* \"#utility.yul\":7115:7168   */\n      tag_396\n        /* \"#utility.yul\":7160:7167   */\n      dup6\n        /* \"#utility.yul\":7151:7157   */\n      dup3\n        /* \"#utility.yul\":7140:7149   */\n      dup7\n        /* \"#utility.yul\":7136:7158   */\n      add\n        /* \"#utility.yul\":7115:7168   */\n      tag_287\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7105:7168   */\n      swap2\n      pop\n        /* \"#utility.yul\":7060:7178   */\n      pop\n        /* \"#utility.yul\":6711:7185   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7191:7371   */\n    tag_301:\n        /* \"#utility.yul\":7239:7316   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7236:7237   */\n      0x00\n        /* \"#utility.yul\":7229:7317   */\n      mstore\n        /* \"#utility.yul\":7336:7340   */\n      0x22\n        /* \"#utility.yul\":7333:7334   */\n      0x04\n        /* \"#utility.yul\":7326:7341   */\n      mstore\n        /* \"#utility.yul\":7360:7364   */\n      0x24\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7350:7365   */\n      revert\n        /* \"#utility.yul\":7377:7697   */\n    tag_122:\n        /* \"#utility.yul\":7421:7427   */\n      0x00\n        /* \"#utility.yul\":7458:7459   */\n      0x02\n        /* \"#utility.yul\":7452:7456   */\n      dup3\n        /* \"#utility.yul\":7448:7460   */\n      div\n        /* \"#utility.yul\":7438:7460   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7506   */\n      0x01\n        /* \"#utility.yul\":7499:7503   */\n      dup3\n        /* \"#utility.yul\":7495:7507   */\n      and\n        /* \"#utility.yul\":7526:7544   */\n      dup1\n        /* \"#utility.yul\":7516:7597   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":7582:7586   */\n      0x7f\n        /* \"#utility.yul\":7574:7580   */\n      dup3\n        /* \"#utility.yul\":7570:7587   */\n      and\n        /* \"#utility.yul\":7560:7587   */\n      swap2\n      pop\n        /* \"#utility.yul\":7516:7597   */\n    tag_399:\n        /* \"#utility.yul\":7644:7646   */\n      0x20\n        /* \"#utility.yul\":7636:7642   */\n      dup3\n        /* \"#utility.yul\":7633:7647   */\n      lt\n        /* \"#utility.yul\":7613:7631   */\n      dup2\n        /* \"#utility.yul\":7610:7648   */\n      sub\n        /* \"#utility.yul\":7607:7691   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7663:7681   */\n      tag_401\n      tag_301\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7607:7691   */\n    tag_400:\n        /* \"#utility.yul\":7428:7697   */\n      pop\n        /* \"#utility.yul\":7377:7697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7703:7861   */\n    tag_302:\n        /* \"#utility.yul\":7843:7853   */\n      0x53656e6420455448000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7839:7840   */\n      0x00\n        /* \"#utility.yul\":7831:7837   */\n      dup3\n        /* \"#utility.yul\":7827:7841   */\n      add\n        /* \"#utility.yul\":7820:7854   */\n      mstore\n        /* \"#utility.yul\":7703:7861   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7867:8232   */\n    tag_303:\n        /* \"#utility.yul\":8009:8012   */\n      0x00\n        /* \"#utility.yul\":8030:8096   */\n      tag_404\n        /* \"#utility.yul\":8094:8095   */\n      0x08\n        /* \"#utility.yul\":8089:8092   */\n      dup4\n        /* \"#utility.yul\":8030:8096   */\n      tag_279\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8023:8096   */\n      swap2\n      pop\n        /* \"#utility.yul\":8105:8198   */\n      tag_405\n        /* \"#utility.yul\":8194:8197   */\n      dup3\n        /* \"#utility.yul\":8105:8198   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8223:8225   */\n      0x20\n        /* \"#utility.yul\":8218:8221   */\n      dup3\n        /* \"#utility.yul\":8214:8226   */\n      add\n        /* \"#utility.yul\":8207:8226   */\n      swap1\n      pop\n        /* \"#utility.yul\":7867:8232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8238:8657   */\n    tag_135:\n        /* \"#utility.yul\":8404:8408   */\n      0x00\n        /* \"#utility.yul\":8442:8444   */\n      0x20\n        /* \"#utility.yul\":8431:8440   */\n      dup3\n        /* \"#utility.yul\":8427:8445   */\n      add\n        /* \"#utility.yul\":8419:8445   */\n      swap1\n      pop\n        /* \"#utility.yul\":8491:8500   */\n      dup2\n        /* \"#utility.yul\":8485:8489   */\n      dup2\n        /* \"#utility.yul\":8481:8501   */\n      sub\n        /* \"#utility.yul\":8477:8478   */\n      0x00\n        /* \"#utility.yul\":8466:8475   */\n      dup4\n        /* \"#utility.yul\":8462:8479   */\n      add\n        /* \"#utility.yul\":8455:8502   */\n      mstore\n        /* \"#utility.yul\":8519:8650   */\n      tag_407\n        /* \"#utility.yul\":8645:8649   */\n      dup2\n        /* \"#utility.yul\":8519:8650   */\n      tag_303\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8511:8650   */\n      swap1\n      pop\n        /* \"#utility.yul\":8238:8657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8663:8843   */\n    tag_304:\n        /* \"#utility.yul\":8711:8788   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8708:8709   */\n      0x00\n        /* \"#utility.yul\":8701:8789   */\n      mstore\n        /* \"#utility.yul\":8808:8812   */\n      0x11\n        /* \"#utility.yul\":8805:8806   */\n      0x04\n        /* \"#utility.yul\":8798:8813   */\n      mstore\n        /* \"#utility.yul\":8832:8836   */\n      0x24\n        /* \"#utility.yul\":8829:8830   */\n      0x00\n        /* \"#utility.yul\":8822:8837   */\n      revert\n        /* \"#utility.yul\":8849:9259   */\n    tag_138:\n        /* \"#utility.yul\":8889:8896   */\n      0x00\n        /* \"#utility.yul\":8912:8932   */\n      tag_410\n        /* \"#utility.yul\":8930:8931   */\n      dup3\n        /* \"#utility.yul\":8912:8932   */\n      tag_288\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8907:8932   */\n      swap2\n      pop\n        /* \"#utility.yul\":8946:8966   */\n      tag_411\n        /* \"#utility.yul\":8964:8965   */\n      dup4\n        /* \"#utility.yul\":8946:8966   */\n      tag_288\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8941:8966   */\n      swap3\n      pop\n        /* \"#utility.yul\":9001:9002   */\n      dup3\n        /* \"#utility.yul\":8998:8999   */\n      dup3\n        /* \"#utility.yul\":8994:9003   */\n      mul\n        /* \"#utility.yul\":9023:9053   */\n      tag_412\n        /* \"#utility.yul\":9041:9052   */\n      dup2\n        /* \"#utility.yul\":9023:9053   */\n      tag_288\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9012:9053   */\n      swap2\n      pop\n        /* \"#utility.yul\":9202:9203   */\n      dup3\n        /* \"#utility.yul\":9193:9200   */\n      dup3\n        /* \"#utility.yul\":9189:9204   */\n      div\n        /* \"#utility.yul\":9186:9187   */\n      dup5\n        /* \"#utility.yul\":9183:9205   */\n      eq\n        /* \"#utility.yul\":9163:9164   */\n      dup4\n        /* \"#utility.yul\":9156:9165   */\n      iszero\n        /* \"#utility.yul\":9136:9219   */\n      or\n        /* \"#utility.yul\":9113:9252   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":9232:9250   */\n      tag_414\n      tag_304\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9113:9252   */\n    tag_413:\n        /* \"#utility.yul\":8897:9259   */\n      pop\n        /* \"#utility.yul\":8849:9259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9265:9445   */\n    tag_305:\n        /* \"#utility.yul\":9313:9390   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9310:9311   */\n      0x00\n        /* \"#utility.yul\":9303:9391   */\n      mstore\n        /* \"#utility.yul\":9410:9414   */\n      0x12\n        /* \"#utility.yul\":9407:9408   */\n      0x04\n        /* \"#utility.yul\":9400:9415   */\n      mstore\n        /* \"#utility.yul\":9434:9438   */\n      0x24\n        /* \"#utility.yul\":9431:9432   */\n      0x00\n        /* \"#utility.yul\":9424:9439   */\n      revert\n        /* \"#utility.yul\":9451:9636   */\n    tag_140:\n        /* \"#utility.yul\":9491:9492   */\n      0x00\n        /* \"#utility.yul\":9508:9528   */\n      tag_417\n        /* \"#utility.yul\":9526:9527   */\n      dup3\n        /* \"#utility.yul\":9508:9528   */\n      tag_288\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9503:9528   */\n      swap2\n      pop\n        /* \"#utility.yul\":9542:9562   */\n      tag_418\n        /* \"#utility.yul\":9560:9561   */\n      dup4\n        /* \"#utility.yul\":9542:9562   */\n      tag_288\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9537:9562   */\n      swap3\n      pop\n        /* \"#utility.yul\":9581:9582   */\n      dup3\n        /* \"#utility.yul\":9571:9606   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9586:9604   */\n      tag_420\n      tag_305\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9571:9606   */\n    tag_419:\n        /* \"#utility.yul\":9628:9629   */\n      dup3\n        /* \"#utility.yul\":9625:9626   */\n      dup3\n        /* \"#utility.yul\":9621:9630   */\n      div\n        /* \"#utility.yul\":9616:9630   */\n      swap1\n      pop\n        /* \"#utility.yul\":9451:9636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:9836   */\n    tag_144:\n        /* \"#utility.yul\":9682:9686   */\n      0x00\n        /* \"#utility.yul\":9702:9722   */\n      tag_422\n        /* \"#utility.yul\":9720:9721   */\n      dup3\n        /* \"#utility.yul\":9702:9722   */\n      tag_288\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9697:9722   */\n      swap2\n      pop\n        /* \"#utility.yul\":9736:9756   */\n      tag_423\n        /* \"#utility.yul\":9754:9755   */\n      dup4\n        /* \"#utility.yul\":9736:9756   */\n      tag_288\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9731:9756   */\n      swap3\n      pop\n        /* \"#utility.yul\":9780:9781   */\n      dup3\n        /* \"#utility.yul\":9777:9778   */\n      dup3\n        /* \"#utility.yul\":9773:9782   */\n      sub\n        /* \"#utility.yul\":9765:9782   */\n      swap1\n      pop\n        /* \"#utility.yul\":9804:9805   */\n      dup2\n        /* \"#utility.yul\":9798:9802   */\n      dup2\n        /* \"#utility.yul\":9795:9806   */\n      gt\n        /* \"#utility.yul\":9792:9829   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9809:9827   */\n      tag_425\n      tag_304\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9792:9829   */\n    tag_424:\n        /* \"#utility.yul\":9642:9836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9842:10284   */\n    tag_148:\n        /* \"#utility.yul\":9991:9995   */\n      0x00\n        /* \"#utility.yul\":10029:10031   */\n      0x60\n        /* \"#utility.yul\":10018:10027   */\n      dup3\n        /* \"#utility.yul\":10014:10032   */\n      add\n        /* \"#utility.yul\":10006:10032   */\n      swap1\n      pop\n        /* \"#utility.yul\":10042:10113   */\n      tag_427\n        /* \"#utility.yul\":10110:10111   */\n      0x00\n        /* \"#utility.yul\":10099:10108   */\n      dup4\n        /* \"#utility.yul\":10095:10112   */\n      add\n        /* \"#utility.yul\":10086:10092   */\n      dup7\n        /* \"#utility.yul\":10042:10113   */\n      tag_277\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10123:10195   */\n      tag_428\n        /* \"#utility.yul\":10191:10193   */\n      0x20\n        /* \"#utility.yul\":10180:10189   */\n      dup4\n        /* \"#utility.yul\":10176:10194   */\n      add\n        /* \"#utility.yul\":10167:10173   */\n      dup6\n        /* \"#utility.yul\":10123:10195   */\n      tag_277\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10205:10277   */\n      tag_429\n        /* \"#utility.yul\":10273:10275   */\n      0x40\n        /* \"#utility.yul\":10262:10271   */\n      dup4\n        /* \"#utility.yul\":10258:10276   */\n      add\n        /* \"#utility.yul\":10249:10255   */\n      dup5\n        /* \"#utility.yul\":10205:10277   */\n      tag_293\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9842:10284   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10290:10406   */\n    tag_306:\n        /* \"#utility.yul\":10360:10381   */\n      tag_431\n        /* \"#utility.yul\":10375:10380   */\n      dup2\n        /* \"#utility.yul\":10360:10381   */\n      tag_291\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10353:10358   */\n      dup2\n        /* \"#utility.yul\":10350:10382   */\n      eq\n        /* \"#utility.yul\":10340:10400   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10396:10397   */\n      0x00\n        /* \"#utility.yul\":10393:10394   */\n      0x00\n        /* \"#utility.yul\":10386:10398   */\n      revert\n        /* \"#utility.yul\":10340:10400   */\n    tag_432:\n        /* \"#utility.yul\":10290:10406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10412:10549   */\n    tag_307:\n        /* \"#utility.yul\":10466:10471   */\n      0x00\n        /* \"#utility.yul\":10497:10503   */\n      dup2\n        /* \"#utility.yul\":10491:10504   */\n      mload\n        /* \"#utility.yul\":10482:10504   */\n      swap1\n      pop\n        /* \"#utility.yul\":10513:10543   */\n      tag_434\n        /* \"#utility.yul\":10537:10542   */\n      dup2\n        /* \"#utility.yul\":10513:10543   */\n      tag_306\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10412:10549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10555:10900   */\n    tag_152:\n        /* \"#utility.yul\":10622:10628   */\n      0x00\n        /* \"#utility.yul\":10671:10673   */\n      0x20\n        /* \"#utility.yul\":10659:10668   */\n      dup3\n        /* \"#utility.yul\":10650:10657   */\n      dup5\n        /* \"#utility.yul\":10646:10669   */\n      sub\n        /* \"#utility.yul\":10642:10674   */\n      slt\n        /* \"#utility.yul\":10639:10758   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10677:10756   */\n      tag_437\n      tag_284\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10639:10758   */\n    tag_436:\n        /* \"#utility.yul\":10797:10798   */\n      0x00\n        /* \"#utility.yul\":10822:10883   */\n      tag_438\n        /* \"#utility.yul\":10875:10882   */\n      dup5\n        /* \"#utility.yul\":10866:10872   */\n      dup3\n        /* \"#utility.yul\":10855:10864   */\n      dup6\n        /* \"#utility.yul\":10851:10873   */\n      add\n        /* \"#utility.yul\":10822:10883   */\n      tag_307\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10812:10883   */\n      swap2\n      pop\n        /* \"#utility.yul\":10768:10893   */\n      pop\n        /* \"#utility.yul\":10555:10900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10906:11075   */\n    tag_308:\n        /* \"#utility.yul\":11046:11067   */\n      0x465241207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":11042:11043   */\n      0x00\n        /* \"#utility.yul\":11034:11040   */\n      dup3\n        /* \"#utility.yul\":11030:11044   */\n      add\n        /* \"#utility.yul\":11023:11068   */\n      mstore\n        /* \"#utility.yul\":10906:11075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11081:11447   */\n    tag_309:\n        /* \"#utility.yul\":11223:11226   */\n      0x00\n        /* \"#utility.yul\":11244:11311   */\n      tag_441\n        /* \"#utility.yul\":11308:11310   */\n      0x13\n        /* \"#utility.yul\":11303:11306   */\n      dup4\n        /* \"#utility.yul\":11244:11311   */\n      tag_279\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11237:11311   */\n      swap2\n      pop\n        /* \"#utility.yul\":11320:11413   */\n      tag_442\n        /* \"#utility.yul\":11409:11412   */\n      dup3\n        /* \"#utility.yul\":11320:11413   */\n      tag_308\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11438:11440   */\n      0x20\n        /* \"#utility.yul\":11433:11436   */\n      dup3\n        /* \"#utility.yul\":11429:11441   */\n      add\n        /* \"#utility.yul\":11422:11441   */\n      swap1\n      pop\n        /* \"#utility.yul\":11081:11447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11453:11872   */\n    tag_155:\n        /* \"#utility.yul\":11619:11623   */\n      0x00\n        /* \"#utility.yul\":11657:11659   */\n      0x20\n        /* \"#utility.yul\":11646:11655   */\n      dup3\n        /* \"#utility.yul\":11642:11660   */\n      add\n        /* \"#utility.yul\":11634:11660   */\n      swap1\n      pop\n        /* \"#utility.yul\":11706:11715   */\n      dup2\n        /* \"#utility.yul\":11700:11704   */\n      dup2\n        /* \"#utility.yul\":11696:11716   */\n      sub\n        /* \"#utility.yul\":11692:11693   */\n      0x00\n        /* \"#utility.yul\":11681:11690   */\n      dup4\n        /* \"#utility.yul\":11677:11694   */\n      add\n        /* \"#utility.yul\":11670:11717   */\n      mstore\n        /* \"#utility.yul\":11734:11865   */\n      tag_444\n        /* \"#utility.yul\":11860:11864   */\n      dup2\n        /* \"#utility.yul\":11734:11865   */\n      tag_309\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11726:11865   */\n      swap1\n      pop\n        /* \"#utility.yul\":11453:11872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11878:12042   */\n    tag_310:\n        /* \"#utility.yul\":12018:12034   */\n      0x4e6f7420656e6f75676820455448000000000000000000000000000000000000\n        /* \"#utility.yul\":12014:12015   */\n      0x00\n        /* \"#utility.yul\":12006:12012   */\n      dup3\n        /* \"#utility.yul\":12002:12016   */\n      add\n        /* \"#utility.yul\":11995:12035   */\n      mstore\n        /* \"#utility.yul\":11878:12042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12048:12414   */\n    tag_311:\n        /* \"#utility.yul\":12190:12193   */\n      0x00\n        /* \"#utility.yul\":12211:12278   */\n      tag_447\n        /* \"#utility.yul\":12275:12277   */\n      0x0e\n        /* \"#utility.yul\":12270:12273   */\n      dup4\n        /* \"#utility.yul\":12211:12278   */\n      tag_279\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12204:12278   */\n      swap2\n      pop\n        /* \"#utility.yul\":12287:12380   */\n      tag_448\n        /* \"#utility.yul\":12376:12379   */\n      dup3\n        /* \"#utility.yul\":12287:12380   */\n      tag_310\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12405:12407   */\n      0x20\n        /* \"#utility.yul\":12400:12403   */\n      dup3\n        /* \"#utility.yul\":12396:12408   */\n      add\n        /* \"#utility.yul\":12389:12408   */\n      swap1\n      pop\n        /* \"#utility.yul\":12048:12414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12420:12839   */\n    tag_179:\n        /* \"#utility.yul\":12586:12590   */\n      0x00\n        /* \"#utility.yul\":12624:12626   */\n      0x20\n        /* \"#utility.yul\":12613:12622   */\n      dup3\n        /* \"#utility.yul\":12609:12627   */\n      add\n        /* \"#utility.yul\":12601:12627   */\n      swap1\n      pop\n        /* \"#utility.yul\":12673:12682   */\n      dup2\n        /* \"#utility.yul\":12667:12671   */\n      dup2\n        /* \"#utility.yul\":12663:12683   */\n      sub\n        /* \"#utility.yul\":12659:12660   */\n      0x00\n        /* \"#utility.yul\":12648:12657   */\n      dup4\n        /* \"#utility.yul\":12644:12661   */\n      add\n        /* \"#utility.yul\":12637:12684   */\n      mstore\n        /* \"#utility.yul\":12701:12832   */\n      tag_450\n        /* \"#utility.yul\":12827:12831   */\n      dup2\n        /* \"#utility.yul\":12701:12832   */\n      tag_311\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12693:12832   */\n      swap1\n      pop\n        /* \"#utility.yul\":12420:12839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12845:13177   */\n    tag_181:\n        /* \"#utility.yul\":12966:12970   */\n      0x00\n        /* \"#utility.yul\":13004:13006   */\n      0x40\n        /* \"#utility.yul\":12993:13002   */\n      dup3\n        /* \"#utility.yul\":12989:13007   */\n      add\n        /* \"#utility.yul\":12981:13007   */\n      swap1\n      pop\n        /* \"#utility.yul\":13017:13088   */\n      tag_452\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13074:13083   */\n      dup4\n        /* \"#utility.yul\":13070:13087   */\n      add\n        /* \"#utility.yul\":13061:13067   */\n      dup6\n        /* \"#utility.yul\":13017:13088   */\n      tag_277\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13098:13170   */\n      tag_453\n        /* \"#utility.yul\":13166:13168   */\n      0x20\n        /* \"#utility.yul\":13155:13164   */\n      dup4\n        /* \"#utility.yul\":13151:13169   */\n      add\n        /* \"#utility.yul\":13142:13148   */\n      dup5\n        /* \"#utility.yul\":13098:13170   */\n      tag_293\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12845:13177   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13183:13326   */\n    tag_312:\n        /* \"#utility.yul\":13240:13245   */\n      0x00\n        /* \"#utility.yul\":13271:13277   */\n      dup2\n        /* \"#utility.yul\":13265:13278   */\n      mload\n        /* \"#utility.yul\":13256:13278   */\n      swap1\n      pop\n        /* \"#utility.yul\":13287:13320   */\n      tag_455\n        /* \"#utility.yul\":13314:13319   */\n      dup2\n        /* \"#utility.yul\":13287:13320   */\n      tag_289\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":13183:13326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13332:13683   */\n    tag_210:\n        /* \"#utility.yul\":13402:13408   */\n      0x00\n        /* \"#utility.yul\":13451:13453   */\n      0x20\n        /* \"#utility.yul\":13439:13448   */\n      dup3\n        /* \"#utility.yul\":13430:13437   */\n      dup5\n        /* \"#utility.yul\":13426:13449   */\n      sub\n        /* \"#utility.yul\":13422:13454   */\n      slt\n        /* \"#utility.yul\":13419:13538   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":13457:13536   */\n      tag_458\n      tag_284\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13419:13538   */\n    tag_457:\n        /* \"#utility.yul\":13577:13578   */\n      0x00\n        /* \"#utility.yul\":13602:13666   */\n      tag_459\n        /* \"#utility.yul\":13658:13665   */\n      dup5\n        /* \"#utility.yul\":13649:13655   */\n      dup3\n        /* \"#utility.yul\":13638:13647   */\n      dup6\n        /* \"#utility.yul\":13634:13656   */\n      add\n        /* \"#utility.yul\":13602:13666   */\n      tag_312\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13592:13666   */\n      swap2\n      pop\n        /* \"#utility.yul\":13548:13676   */\n      pop\n        /* \"#utility.yul\":13332:13683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13689:13880   */\n    tag_218:\n        /* \"#utility.yul\":13729:13732   */\n      0x00\n        /* \"#utility.yul\":13748:13768   */\n      tag_461\n        /* \"#utility.yul\":13766:13767   */\n      dup3\n        /* \"#utility.yul\":13748:13768   */\n      tag_288\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13743:13768   */\n      swap2\n      pop\n        /* \"#utility.yul\":13782:13802   */\n      tag_462\n        /* \"#utility.yul\":13800:13801   */\n      dup4\n        /* \"#utility.yul\":13782:13802   */\n      tag_288\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13777:13802   */\n      swap3\n      pop\n        /* \"#utility.yul\":13825:13826   */\n      dup3\n        /* \"#utility.yul\":13822:13823   */\n      dup3\n        /* \"#utility.yul\":13818:13827   */\n      add\n        /* \"#utility.yul\":13811:13827   */\n      swap1\n      pop\n        /* \"#utility.yul\":13846:13849   */\n      dup1\n        /* \"#utility.yul\":13843:13844   */\n      dup3\n        /* \"#utility.yul\":13840:13850   */\n      gt\n        /* \"#utility.yul\":13837:13873   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":13853:13871   */\n      tag_464\n      tag_304\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13837:13873   */\n    tag_463:\n        /* \"#utility.yul\":13689:13880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13886:14328   */\n    tag_240:\n        /* \"#utility.yul\":14035:14039   */\n      0x00\n        /* \"#utility.yul\":14073:14075   */\n      0x60\n        /* \"#utility.yul\":14062:14071   */\n      dup3\n        /* \"#utility.yul\":14058:14076   */\n      add\n        /* \"#utility.yul\":14050:14076   */\n      swap1\n      pop\n        /* \"#utility.yul\":14086:14157   */\n      tag_466\n        /* \"#utility.yul\":14154:14155   */\n      0x00\n        /* \"#utility.yul\":14143:14152   */\n      dup4\n        /* \"#utility.yul\":14139:14156   */\n      add\n        /* \"#utility.yul\":14130:14136   */\n      dup7\n        /* \"#utility.yul\":14086:14157   */\n      tag_277\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14167:14239   */\n      tag_467\n        /* \"#utility.yul\":14235:14237   */\n      0x20\n        /* \"#utility.yul\":14224:14233   */\n      dup4\n        /* \"#utility.yul\":14220:14238   */\n      add\n        /* \"#utility.yul\":14211:14217   */\n      dup6\n        /* \"#utility.yul\":14167:14239   */\n      tag_293\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14249:14321   */\n      tag_468\n        /* \"#utility.yul\":14317:14319   */\n      0x40\n        /* \"#utility.yul\":14306:14315   */\n      dup4\n        /* \"#utility.yul\":14302:14320   */\n      add\n        /* \"#utility.yul\":14293:14299   */\n      dup5\n        /* \"#utility.yul\":14249:14321   */\n      tag_293\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13886:14328   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bb1d7e8f4852d2602de4d81ec99548a6fecfc74b696b49c5f1c3771f911468ca64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1008": {
									"entryPoint": null,
									"id": 1008,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 461,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6934:7",
										"nodeType": "YulBlock",
										"src": "0:6934:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "939:413:7",
													"nodeType": "YulBlock",
													"src": "939:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:7",
																"nodeType": "YulBlock",
																"src": "985:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:7"
																			},
																			"nativeSrc": "987:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:7"
																		},
																		"nativeSrc": "987:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:7"
																		},
																		"nativeSrc": "956:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:7"
																},
																"nativeSrc": "952:32:7",
																"nodeType": "YulFunctionCall",
																"src": "952:32:7"
															},
															"nativeSrc": "949:119:7",
															"nodeType": "YulIf",
															"src": "949:119:7"
														},
														{
															"nativeSrc": "1078:128:7",
															"nodeType": "YulBlock",
															"src": "1078:128:7",
															"statements": [
																{
																	"nativeSrc": "1093:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:7"
																				},
																				"nativeSrc": "1164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:7"
																		},
																		"nativeSrc": "1132:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:7",
															"nodeType": "YulBlock",
															"src": "1216:129:7",
															"statements": [
																{
																	"nativeSrc": "1231:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:7"
																				},
																				"nativeSrc": "1303:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:7"
																		},
																		"nativeSrc": "1271:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:7",
														"nodeType": "YulTypedName",
														"src": "901:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:7",
														"nodeType": "YulTypedName",
														"src": "912:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:7",
														"nodeType": "YulTypedName",
														"src": "924:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:7",
														"nodeType": "YulTypedName",
														"src": "932:6:7",
														"type": ""
													}
												],
												"src": "845:507:7"
											},
											{
												"body": {
													"nativeSrc": "1417:40:7",
													"nodeType": "YulBlock",
													"src": "1417:40:7",
													"statements": [
														{
															"nativeSrc": "1428:22:7",
															"nodeType": "YulAssignment",
															"src": "1428:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:7"
																},
																"nativeSrc": "1438:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:7",
														"nodeType": "YulTypedName",
														"src": "1400:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:7",
														"nodeType": "YulTypedName",
														"src": "1410:6:7",
														"type": ""
													}
												],
												"src": "1358:99:7"
											},
											{
												"body": {
													"nativeSrc": "1491:152:7",
													"nodeType": "YulBlock",
													"src": "1491:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:7"
															},
															"nativeSrc": "1501:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:7"
																},
																"nativeSrc": "1598:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:7"
															},
															"nativeSrc": "1598:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:7"
																},
																"nativeSrc": "1622:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:7"
															},
															"nativeSrc": "1622:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:7"
											},
											{
												"body": {
													"nativeSrc": "1677:152:7",
													"nodeType": "YulBlock",
													"src": "1677:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:7"
																},
																"nativeSrc": "1687:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:7"
															},
															"nativeSrc": "1687:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:7"
																},
																"nativeSrc": "1784:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:7"
															},
															"nativeSrc": "1784:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																},
																"nativeSrc": "1808:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:7"
															},
															"nativeSrc": "1808:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:7"
											},
											{
												"body": {
													"nativeSrc": "1886:269:7",
													"nodeType": "YulBlock",
													"src": "1886:269:7",
													"statements": [
														{
															"nativeSrc": "1896:22:7",
															"nodeType": "YulAssignment",
															"src": "1896:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:7"
																},
																"nativeSrc": "1906:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:7"
																}
															]
														},
														{
															"nativeSrc": "1927:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:7"
																},
																"nativeSrc": "1953:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:7",
																"nodeType": "YulBlock",
																"src": "2004:51:7",
																"statements": [
																	{
																		"nativeSrc": "2018:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:7"
																			},
																			"nativeSrc": "2028:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:7"
																},
																"nativeSrc": "1977:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:7"
															},
															"nativeSrc": "1974:81:7",
															"nodeType": "YulIf",
															"src": "1974:81:7"
														},
														{
															"body": {
																"nativeSrc": "2107:42:7",
																"nodeType": "YulBlock",
																"src": "2107:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:7"
																			},
																			"nativeSrc": "2121:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:7"
																		},
																		"nativeSrc": "2121:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:7"
																		},
																		"nativeSrc": "2091:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:7"
																},
																"nativeSrc": "2068:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:7"
															},
															"nativeSrc": "2065:84:7",
															"nodeType": "YulIf",
															"src": "2065:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:7",
														"nodeType": "YulTypedName",
														"src": "1870:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:7",
														"nodeType": "YulTypedName",
														"src": "1879:6:7",
														"type": ""
													}
												],
												"src": "1835:320:7"
											},
											{
												"body": {
													"nativeSrc": "2215:87:7",
													"nodeType": "YulBlock",
													"src": "2215:87:7",
													"statements": [
														{
															"nativeSrc": "2225:11:7",
															"nodeType": "YulAssignment",
															"src": "2225:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:7",
																"nodeType": "YulIdentifier",
																"src": "2233:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:7"
																},
																"nativeSrc": "2246:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:7"
															},
															"nativeSrc": "2246:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:7"
														},
														{
															"nativeSrc": "2269:26:7",
															"nodeType": "YulAssignment",
															"src": "2269:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:7"
																},
																"nativeSrc": "2277:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:7",
														"nodeType": "YulTypedName",
														"src": "2202:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:7",
														"nodeType": "YulTypedName",
														"src": "2210:4:7",
														"type": ""
													}
												],
												"src": "2161:141:7"
											},
											{
												"body": {
													"nativeSrc": "2352:49:7",
													"nodeType": "YulBlock",
													"src": "2352:49:7",
													"statements": [
														{
															"nativeSrc": "2362:33:7",
															"nodeType": "YulAssignment",
															"src": "2362:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:7"
																		},
																		"nativeSrc": "2376:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:7"
																},
																"nativeSrc": "2372:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:7",
														"nodeType": "YulTypedName",
														"src": "2335:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2308:93:7"
											},
											{
												"body": {
													"nativeSrc": "2460:54:7",
													"nodeType": "YulBlock",
													"src": "2460:54:7",
													"statements": [
														{
															"nativeSrc": "2470:37:7",
															"nodeType": "YulAssignment",
															"src": "2470:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:7"
																},
																"nativeSrc": "2491:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:7",
														"nodeType": "YulTypedName",
														"src": "2435:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:7",
														"nodeType": "YulTypedName",
														"src": "2441:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:7",
														"nodeType": "YulTypedName",
														"src": "2451:8:7",
														"type": ""
													}
												],
												"src": "2407:107:7"
											},
											{
												"body": {
													"nativeSrc": "2596:317:7",
													"nodeType": "YulBlock",
													"src": "2596:317:7",
													"statements": [
														{
															"nativeSrc": "2606:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:7"
																},
																"nativeSrc": "2623:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:7"
																},
																"nativeSrc": "2662:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:7",
															"nodeType": "YulAssignment",
															"src": "2768:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:7"
																},
																"nativeSrc": "2780:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:7"
																}
															]
														},
														{
															"nativeSrc": "2828:30:7",
															"nodeType": "YulAssignment",
															"src": "2828:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:7"
																		},
																		"nativeSrc": "2848:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:7"
																},
																"nativeSrc": "2837:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:7"
																}
															]
														},
														{
															"nativeSrc": "2867:40:7",
															"nodeType": "YulAssignment",
															"src": "2867:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:7"
																		},
																		"nativeSrc": "2887:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:7"
																},
																"nativeSrc": "2877:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:7",
														"nodeType": "YulTypedName",
														"src": "2557:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:7",
														"nodeType": "YulTypedName",
														"src": "2564:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:7",
														"nodeType": "YulTypedName",
														"src": "2576:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:7",
														"nodeType": "YulTypedName",
														"src": "2589:6:7",
														"type": ""
													}
												],
												"src": "2520:393:7"
											},
											{
												"body": {
													"nativeSrc": "2964:32:7",
													"nodeType": "YulBlock",
													"src": "2964:32:7",
													"statements": [
														{
															"nativeSrc": "2974:16:7",
															"nodeType": "YulAssignment",
															"src": "2974:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:7",
																"nodeType": "YulIdentifier",
																"src": "2985:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:7",
														"nodeType": "YulTypedName",
														"src": "2946:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:7",
														"nodeType": "YulTypedName",
														"src": "2956:7:7",
														"type": ""
													}
												],
												"src": "2919:77:7"
											},
											{
												"body": {
													"nativeSrc": "3034:28:7",
													"nodeType": "YulBlock",
													"src": "3034:28:7",
													"statements": [
														{
															"nativeSrc": "3044:12:7",
															"nodeType": "YulAssignment",
															"src": "3044:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:7",
																"nodeType": "YulIdentifier",
																"src": "3051:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:7",
														"nodeType": "YulTypedName",
														"src": "3020:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:7",
														"nodeType": "YulTypedName",
														"src": "3030:3:7",
														"type": ""
													}
												],
												"src": "3002:60:7"
											},
											{
												"body": {
													"nativeSrc": "3128:82:7",
													"nodeType": "YulBlock",
													"src": "3128:82:7",
													"statements": [
														{
															"nativeSrc": "3138:66:7",
															"nodeType": "YulAssignment",
															"src": "3138:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:7"
																				},
																				"nativeSrc": "3178:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:7"
																		},
																		"nativeSrc": "3169:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:7"
																},
																"nativeSrc": "3151:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:7",
														"nodeType": "YulTypedName",
														"src": "3108:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:7",
														"nodeType": "YulTypedName",
														"src": "3118:9:7",
														"type": ""
													}
												],
												"src": "3068:142:7"
											},
											{
												"body": {
													"nativeSrc": "3263:28:7",
													"nodeType": "YulBlock",
													"src": "3263:28:7",
													"statements": [
														{
															"nativeSrc": "3273:12:7",
															"nodeType": "YulAssignment",
															"src": "3273:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:7",
																"nodeType": "YulIdentifier",
																"src": "3280:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:7",
														"nodeType": "YulTypedName",
														"src": "3249:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:7",
														"nodeType": "YulTypedName",
														"src": "3259:3:7",
														"type": ""
													}
												],
												"src": "3216:75:7"
											},
											{
												"body": {
													"nativeSrc": "3373:193:7",
													"nodeType": "YulBlock",
													"src": "3373:193:7",
													"statements": [
														{
															"nativeSrc": "3383:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:7"
																},
																"nativeSrc": "3407:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:7"
																				},
																				"nativeSrc": "3496:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:7"
																				},
																				"nativeSrc": "3517:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:7"
																		},
																		"nativeSrc": "3468:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:7"
																},
																"nativeSrc": "3455:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:7"
															},
															"nativeSrc": "3455:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:7",
														"nodeType": "YulTypedName",
														"src": "3350:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:7",
														"nodeType": "YulTypedName",
														"src": "3356:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:7",
														"nodeType": "YulTypedName",
														"src": "3364:7:7",
														"type": ""
													}
												],
												"src": "3297:269:7"
											},
											{
												"body": {
													"nativeSrc": "3621:24:7",
													"nodeType": "YulBlock",
													"src": "3621:24:7",
													"statements": [
														{
															"nativeSrc": "3631:8:7",
															"nodeType": "YulAssignment",
															"src": "3631:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:7",
																"nodeType": "YulLiteral",
																"src": "3638:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:7",
														"nodeType": "YulTypedName",
														"src": "3617:3:7",
														"type": ""
													}
												],
												"src": "3572:73:7"
											},
											{
												"body": {
													"nativeSrc": "3704:136:7",
													"nodeType": "YulBlock",
													"src": "3704:136:7",
													"statements": [
														{
															"nativeSrc": "3714:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:7"
																},
																"nativeSrc": "3728:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:7"
																},
																"nativeSrc": "3769:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:7"
															},
															"nativeSrc": "3769:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:7",
														"nodeType": "YulTypedName",
														"src": "3690:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:7",
														"nodeType": "YulTypedName",
														"src": "3696:6:7",
														"type": ""
													}
												],
												"src": "3651:189:7"
											},
											{
												"body": {
													"nativeSrc": "3896:136:7",
													"nodeType": "YulBlock",
													"src": "3896:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:7",
																"nodeType": "YulBlock",
																"src": "3963:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:7"
																			},
																			"nativeSrc": "3977:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:7"
																		},
																		"nativeSrc": "3977:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:7"
																},
																"nativeSrc": "3913:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:7"
															},
															"nativeSrc": "3906:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:7",
																"nodeType": "YulBlock",
																"src": "3928:26:7",
																"statements": [
																	{
																		"nativeSrc": "3930:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:7"
																			},
																			"nativeSrc": "3939:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:7",
																"nodeType": "YulBlock",
																"src": "3910:2:7",
																"statements": []
															},
															"src": "3906:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:7",
														"nodeType": "YulTypedName",
														"src": "3884:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:7",
														"nodeType": "YulTypedName",
														"src": "3891:3:7",
														"type": ""
													}
												],
												"src": "3846:186:7"
											},
											{
												"body": {
													"nativeSrc": "4117:464:7",
													"nodeType": "YulBlock",
													"src": "4117:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:7",
																"nodeType": "YulBlock",
																"src": "4143:431:7",
																"statements": [
																	{
																		"nativeSrc": "4157:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:7"
																			},
																			"nativeSrc": "4173:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:7"
																					},
																					"nativeSrc": "4257:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:7"
																			},
																			"nativeSrc": "4243:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:7",
																			"nodeType": "YulBlock",
																			"src": "4444:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:7"
																			},
																			"nativeSrc": "4425:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:7"
																		},
																		"nativeSrc": "4422:49:7",
																		"nodeType": "YulIf",
																		"src": "4422:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:7"
																							},
																							"nativeSrc": "4540:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:7"
																					},
																					"nativeSrc": "4526:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:7"
																			},
																			"nativeSrc": "4484:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:7"
																		},
																		"nativeSrc": "4484:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:7"
																},
																"nativeSrc": "4131:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:7"
															},
															"nativeSrc": "4128:446:7",
															"nodeType": "YulIf",
															"src": "4128:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:7",
														"nodeType": "YulTypedName",
														"src": "4093:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:7",
														"nodeType": "YulTypedName",
														"src": "4100:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:7",
														"nodeType": "YulTypedName",
														"src": "4105:10:7",
														"type": ""
													}
												],
												"src": "4038:543:7"
											},
											{
												"body": {
													"nativeSrc": "4650:54:7",
													"nodeType": "YulBlock",
													"src": "4650:54:7",
													"statements": [
														{
															"nativeSrc": "4660:37:7",
															"nodeType": "YulAssignment",
															"src": "4660:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:7"
																},
																"nativeSrc": "4681:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:7",
														"nodeType": "YulTypedName",
														"src": "4625:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:7",
														"nodeType": "YulTypedName",
														"src": "4631:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:7",
														"nodeType": "YulTypedName",
														"src": "4641:8:7",
														"type": ""
													}
												],
												"src": "4587:117:7"
											},
											{
												"body": {
													"nativeSrc": "4761:118:7",
													"nodeType": "YulBlock",
													"src": "4761:118:7",
													"statements": [
														{
															"nativeSrc": "4771:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:7"
																				},
																				"nativeSrc": "4816:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:7"
																				},
																				"nativeSrc": "4831:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:7"
																		},
																		"nativeSrc": "4787:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:7"
																},
																"nativeSrc": "4783:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:7",
															"nodeType": "YulAssignment",
															"src": "4848:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:7"
																},
																"nativeSrc": "4858:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:7",
														"nodeType": "YulTypedName",
														"src": "4738:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:7",
														"nodeType": "YulTypedName",
														"src": "4744:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:7",
														"nodeType": "YulTypedName",
														"src": "4754:6:7",
														"type": ""
													}
												],
												"src": "4710:169:7"
											},
											{
												"body": {
													"nativeSrc": "4965:214:7",
													"nodeType": "YulBlock",
													"src": "4965:214:7",
													"statements": [
														{
															"nativeSrc": "5098:37:7",
															"nodeType": "YulAssignment",
															"src": "5098:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:7"
																},
																"nativeSrc": "5106:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:7"
																}
															]
														},
														{
															"nativeSrc": "5144:29:7",
															"nodeType": "YulAssignment",
															"src": "5144:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:7"
																		},
																		"nativeSrc": "5161:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:7"
																},
																"nativeSrc": "5152:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:7",
														"nodeType": "YulTypedName",
														"src": "4946:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:7",
														"nodeType": "YulTypedName",
														"src": "4952:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:7",
														"nodeType": "YulTypedName",
														"src": "4960:4:7",
														"type": ""
													}
												],
												"src": "4884:295:7"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:7",
													"nodeType": "YulBlock",
													"src": "5276:1303:7",
													"statements": [
														{
															"nativeSrc": "5287:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:7"
																},
																"nativeSrc": "5301:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:7",
																"nodeType": "YulBlock",
																"src": "5423:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:7"
																			},
																			"nativeSrc": "5425:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:7"
																		},
																		"nativeSrc": "5425:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:7"
																},
																"nativeSrc": "5392:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:7"
															},
															"nativeSrc": "5389:56:7",
															"nodeType": "YulIf",
															"src": "5389:56:7"
														},
														{
															"nativeSrc": "5455:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:7"
																		},
																		"nativeSrc": "5495:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:7"
																},
																"nativeSrc": "5469:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:7"
																},
																"nativeSrc": "5554:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:7"
															},
															"nativeSrc": "5554:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:7"
														},
														{
															"nativeSrc": "5631:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:7",
																"nodeType": "YulLiteral",
																"src": "5648:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:7",
															"nodeType": "YulAssignment",
															"src": "5659:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:7",
																"nodeType": "YulLiteral",
																"src": "5672:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:7",
																		"nodeType": "YulBlock",
																		"src": "5723:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:7"
																							},
																							"nativeSrc": "5764:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:7"
																					},
																					"nativeSrc": "5752:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:7"
																					},
																					"nativeSrc": "5802:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:7",
																					"nodeType": "YulBlock",
																					"src": "5920:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:7"
																												},
																												"nativeSrc": "5959:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:7"
																										},
																										"nativeSrc": "5953:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:7"
																								},
																								"nativeSrc": "5938:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:7"
																							},
																							"nativeSrc": "5938:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:7"
																						},
																						{
																							"nativeSrc": "5997:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:7"
																								},
																								"nativeSrc": "6007:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:7"
																								},
																								"nativeSrc": "6051:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:7"
																					},
																					"nativeSrc": "5883:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:7"
																				},
																				"nativeSrc": "5875:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:7",
																					"nodeType": "YulBlock",
																					"src": "5898:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:7"
																								},
																								"nativeSrc": "5905:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:7",
																					"nodeType": "YulBlock",
																					"src": "5879:3:7",
																					"statements": []
																				},
																				"src": "5875:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:7",
																					"nodeType": "YulBlock",
																					"src": "6119:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:7"
																										},
																										"nativeSrc": "6160:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:7"
																								},
																								"nativeSrc": "6154:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:7"
																												},
																												"nativeSrc": "6242:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:7"
																										},
																										"nativeSrc": "6212:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:7"
																								},
																								"nativeSrc": "6197:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:7"
																							},
																							"nativeSrc": "6197:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:7"
																					},
																					"nativeSrc": "6099:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:7"
																				},
																				"nativeSrc": "6096:179:7",
																				"nodeType": "YulIf",
																				"src": "6096:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:7"
																									},
																									"nativeSrc": "6305:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:7"
																							},
																							"nativeSrc": "6301:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:7"
																					},
																					"nativeSrc": "6288:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:7"
																				},
																				"nativeSrc": "6288:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:7",
																	"nodeType": "YulCase",
																	"src": "5716:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:7",
																		"nodeType": "YulBlock",
																		"src": "6351:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:7",
																					"nodeType": "YulBlock",
																					"src": "6402:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:7"
																										},
																										"nativeSrc": "6435:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:7"
																								},
																								"nativeSrc": "6429:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:7"
																				},
																				"nativeSrc": "6392:77:7",
																				"nodeType": "YulIf",
																				"src": "6392:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:7"
																							},
																							"nativeSrc": "6495:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:7"
																					},
																					"nativeSrc": "6482:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:7"
																				},
																				"nativeSrc": "6482:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:7",
																	"nodeType": "YulCase",
																	"src": "6343:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:7"
																},
																"nativeSrc": "5693:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:7"
															},
															"nativeSrc": "5686:887:7",
															"nodeType": "YulSwitch",
															"src": "5686:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:7",
														"nodeType": "YulTypedName",
														"src": "5265:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:7",
														"nodeType": "YulTypedName",
														"src": "5271:3:7",
														"type": ""
													}
												],
												"src": "5184:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6650:53:7",
													"nodeType": "YulBlock",
													"src": "6650:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:7"
																		},
																		"nativeSrc": "6672:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:7"
																},
																"nativeSrc": "6660:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:7"
															},
															"nativeSrc": "6660:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:7",
														"nodeType": "YulTypedName",
														"src": "6638:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:7",
														"nodeType": "YulTypedName",
														"src": "6645:3:7",
														"type": ""
													}
												],
												"src": "6585:118:7"
											},
											{
												"body": {
													"nativeSrc": "6807:124:7",
													"nodeType": "YulBlock",
													"src": "6807:124:7",
													"statements": [
														{
															"nativeSrc": "6817:26:7",
															"nodeType": "YulAssignment",
															"src": "6817:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:7"
																},
																"nativeSrc": "6825:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:7"
																		},
																		"nativeSrc": "6906:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:7"
																},
																"nativeSrc": "6853:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:7"
															},
															"nativeSrc": "6853:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:7",
														"nodeType": "YulTypedName",
														"src": "6779:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:7",
														"nodeType": "YulTypedName",
														"src": "6791:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:7",
														"nodeType": "YulTypedName",
														"src": "6802:4:7",
														"type": ""
													}
												],
												"src": "6709:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052611d4c600655348015610015575f5ffd5b50604051612275380380612275833981810160405281019061003791906102ee565b336040518060400160405280600b81526020017f44796e616d6963465553440000000000000000000000000000000000000000008152506040518060400160405280600581526020017f644655534400000000000000000000000000000000000000000000000000000081525081600390816100b39190610569565b5080600490816100c39190610569565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610136575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012d9190610647565b60405180910390fd5b610145816101cd60201b60201c565b508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610660565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102bd82610294565b9050919050565b6102cd816102b3565b81146102d7575f5ffd5b50565b5f815190506102e8816102c4565b92915050565b5f5f6040838503121561030457610303610290565b5b5f610311858286016102da565b9250506020610322858286016102da565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103a757607f821691505b6020821081036103ba576103b9610363565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261041c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e1565b61042686836103e1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61046a6104656104608461043e565b610447565b61043e565b9050919050565b5f819050919050565b61048383610450565b61049761048f82610471565b8484546103ed565b825550505050565b5f5f905090565b6104ae61049f565b6104b981848461047a565b505050565b5b818110156104dc576104d15f826104a6565b6001810190506104bf565b5050565b601f821115610521576104f2816103c0565b6104fb846103d2565b8101602085101561050a578190505b61051e610516856103d2565b8301826104be565b50505b505050565b5f82821c905092915050565b5f6105415f1984600802610526565b1980831691505092915050565b5f6105598383610532565b9150826002028217905092915050565b6105728261032c565b67ffffffffffffffff81111561058b5761058a610336565b5b6105958254610390565b6105a08282856104e0565b5f60209050601f8311600181146105d1575f84156105bf578287015190505b6105c9858261054e565b865550610630565b601f1984166105df866103c0565b5f5b82811015610606578489015182556001820191506020850194506020810190506105e1565b86831015610623578489015161061f601f891682610532565b8355505b6001600288020188555050505b505050505050565b610641816102b3565b82525050565b5f60208201905061065a5f830184610638565b92915050565b611c088061066d5f395ff3fe608060405260043610610122575f3560e01c8063715018a61161009f578063b4eae1cb11610063578063b4eae1cb146103b5578063c752b47e146103df578063d9c37512146103f5578063dd62ed3e1461041f578063f2fde38b1461045b57610129565b8063715018a6146102e557806373d49515146102fb5780638da5cb5b1461032557806395d89b411461034f578063a9059cbb1461037957610129565b806323b872dd116100e657806323b872dd146101f15780632630c12f1461022d578063313ce5671461025757806342966c681461028157806370a08231146102a957610129565b806305268cff1461012d57806306fdde0314610157578063095ea7b3146101815780631249c58b146101bd57806318160ddd146101c757610129565b3661012957005b5f5ffd5b348015610138575f5ffd5b50610141610483565b60405161014e91906114b8565b60405180910390f35b348015610162575f5ffd5b5061016b6104a8565b6040516101789190611541565b60405180910390f35b34801561018c575f5ffd5b506101a760048036038101906101a291906115c2565b610538565b6040516101b4919061161a565b60405180910390f35b6101c561055a565b005b3480156101d2575f5ffd5b506101db61070a565b6040516101e89190611642565b60405180910390f35b3480156101fc575f5ffd5b506102176004803603810190610212919061165b565b610713565b604051610224919061161a565b60405180910390f35b348015610238575f5ffd5b50610241610741565b60405161024e9190611706565b60405180910390f35b348015610262575f5ffd5b5061026b610766565b604051610278919061173a565b60405180910390f35b34801561028c575f5ffd5b506102a760048036038101906102a29190611753565b61076e565b005b3480156102b4575f5ffd5b506102cf60048036038101906102ca919061177e565b610962565b6040516102dc9190611642565b60405180910390f35b3480156102f0575f5ffd5b506102f96109a7565b005b348015610306575f5ffd5b5061030f6109ba565b60405161031c9190611642565b60405180910390f35b348015610330575f5ffd5b506103396109c2565b60405161034691906114b8565b60405180910390f35b34801561035a575f5ffd5b506103636109ea565b6040516103709190611541565b60405180910390f35b348015610384575f5ffd5b5061039f600480360381019061039a91906115c2565b610a7a565b6040516103ac919061161a565b60405180910390f35b3480156103c0575f5ffd5b506103c9610a9c565b6040516103d69190611642565b60405180910390f35b3480156103ea575f5ffd5b506103f3610aa2565b005b348015610400575f5ffd5b50610409610ba1565b6040516104169190611642565b60405180910390f35b34801561042a575f5ffd5b50610445600480360381019061044091906117a9565b610ba7565b6040516104529190611642565b60405180910390f35b348015610466575f5ffd5b50610481600480360381019061047c919061177e565b610c29565b005b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600380546104b790611814565b80601f01602080910402602001604051908101604052809291908181526020018280546104e390611814565b801561052e5780601f106105055761010080835404028352916020019161052e565b820191905f5260205f20905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b5f5f610542610cad565b905061054f818585610cb4565b600191505092915050565b5f341161059c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105939061188e565b60405180910390fd5b6105a4610aa2565b5f670de0b6b3a76400006305f5e100346105be91906118d9565b6105c89190611947565b90505f612710600654836105dc91906118d9565b6105e69190611947565b90505f81836105f59190611977565b90505f6305f5e100670de0b6b3a76400008361061191906118d9565b61061b9190611947565b905060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161067b939291906119aa565b6020604051808303815f875af1158015610697573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106bb9190611a09565b6106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190611a7e565b60405180910390fd5b6107043385610cc6565b50505050565b5f600254905090565b5f5f61071d610cad565b905061072a858285610d45565b610735858585610dd8565b60019150509392505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b6107783382610ec8565b610780610aa2565b5f6127106006548361079291906118d9565b61079c9190611947565b90505f81836107ab9190611977565b90505f6305f5e100670de0b6b3a7640000846107c791906118d9565b6107d19190611947565b90505f6305f5e100670de0b6b3a7640000846107ed91906118d9565b6107f79190611947565b90508147101561083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611ae6565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610898929190611b04565b6020604051808303815f875af11580156108b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d89190611a09565b610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611a7e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561095a573d5f5f3e3d5ffd5b505050505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109af610f47565b6109b85f610fce565b565b6305f5e10081565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109f990611814565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2590611814565b8015610a705780601f10610a4757610100808354040283529160200191610a70565b820191905f5260205f20905b815481529060010190602001808311610a5357829003601f168201915b5050505050905090565b5f5f610a84610cad565b9050610a91818585610dd8565b600191505092915050565b60065481565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b319190611b3f565b90506305f5e100811115610b6a576113886006541115610b6557606460065f828254610b5d9190611977565b925050819055505b610b9e565b6305f5e100811015610b9d5761251c6006541015610b9c57606460065f828254610b949190611b6a565b925050819055505b5b5b50565b61271081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c31610f47565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c9891906114b8565b60405180910390fd5b610caa81610fce565b50565b5f33905090565b610cc18383836001611091565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d2d91906114b8565b60405180910390fd5b610d415f8383611260565b5050565b5f610d508484610ba7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610dd25781811015610dc3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610dba93929190611b9d565b60405180910390fd5b610dd184848484035f611091565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e48575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e3f91906114b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610eaf91906114b8565b60405180910390fd5b610ec3838383611260565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f38575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f2f91906114b8565b60405180910390fd5b610f43825f83611260565b5050565b610f4f610cad565b73ffffffffffffffffffffffffffffffffffffffff16610f6d6109c2565b73ffffffffffffffffffffffffffffffffffffffff1614610fcc57610f90610cad565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fc391906114b8565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611101575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110f891906114b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611171575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161116891906114b8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561125a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112519190611642565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b0578060025f8282546112a49190611b6a565b9250508190555061137e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611339578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161133093929190611b9d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113c5578060025f828254039250508190555061140f565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161146c9190611642565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114a282611479565b9050919050565b6114b281611498565b82525050565b5f6020820190506114cb5f8301846114a9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611513826114d1565b61151d81856114db565b935061152d8185602086016114eb565b611536816114f9565b840191505092915050565b5f6020820190508181035f8301526115598184611509565b905092915050565b5f5ffd5b61156e81611498565b8114611578575f5ffd5b50565b5f8135905061158981611565565b92915050565b5f819050919050565b6115a18161158f565b81146115ab575f5ffd5b50565b5f813590506115bc81611598565b92915050565b5f5f604083850312156115d8576115d7611561565b5b5f6115e58582860161157b565b92505060206115f6858286016115ae565b9150509250929050565b5f8115159050919050565b61161481611600565b82525050565b5f60208201905061162d5f83018461160b565b92915050565b61163c8161158f565b82525050565b5f6020820190506116555f830184611633565b92915050565b5f5f5f6060848603121561167257611671611561565b5b5f61167f8682870161157b565b93505060206116908682870161157b565b92505060406116a1868287016115ae565b9150509250925092565b5f819050919050565b5f6116ce6116c96116c484611479565b6116ab565b611479565b9050919050565b5f6116df826116b4565b9050919050565b5f6116f0826116d5565b9050919050565b611700816116e6565b82525050565b5f6020820190506117195f8301846116f7565b92915050565b5f60ff82169050919050565b6117348161171f565b82525050565b5f60208201905061174d5f83018461172b565b92915050565b5f6020828403121561176857611767611561565b5b5f611775848285016115ae565b91505092915050565b5f6020828403121561179357611792611561565b5b5f6117a08482850161157b565b91505092915050565b5f5f604083850312156117bf576117be611561565b5b5f6117cc8582860161157b565b92505060206117dd8582860161157b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061182b57607f821691505b60208210810361183e5761183d6117e7565b5b50919050565b7f53656e64204554480000000000000000000000000000000000000000000000005f82015250565b5f6118786008836114db565b915061188382611844565b602082019050919050565b5f6020820190508181035f8301526118a58161186c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118e38261158f565b91506118ee8361158f565b92508282026118fc8161158f565b91508282048414831517611913576119126118ac565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119518261158f565b915061195c8361158f565b92508261196c5761196b61191a565b5b828204905092915050565b5f6119818261158f565b915061198c8361158f565b92508282039050818111156119a4576119a36118ac565b5b92915050565b5f6060820190506119bd5f8301866114a9565b6119ca60208301856114a9565b6119d76040830184611633565b949350505050565b6119e881611600565b81146119f2575f5ffd5b50565b5f81519050611a03816119df565b92915050565b5f60208284031215611a1e57611a1d611561565b5b5f611a2b848285016119f5565b91505092915050565b7f465241207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f611a686013836114db565b9150611a7382611a34565b602082019050919050565b5f6020820190508181035f830152611a9581611a5c565b9050919050565b7f4e6f7420656e6f756768204554480000000000000000000000000000000000005f82015250565b5f611ad0600e836114db565b9150611adb82611a9c565b602082019050919050565b5f6020820190508181035f830152611afd81611ac4565b9050919050565b5f604082019050611b175f8301856114a9565b611b246020830184611633565b9392505050565b5f81519050611b3981611598565b92915050565b5f60208284031215611b5457611b53611561565b5b5f611b6184828501611b2b565b91505092915050565b5f611b748261158f565b9150611b7f8361158f565b9250828201905080821115611b9757611b966118ac565b5b92915050565b5f606082019050611bb05f8301866114a9565b611bbd6020830185611633565b611bca6040830184611633565b94935050505056fea2646970667358221220bb1d7e8f4852d2602de4d81ec99548a6fecfc74b696b49c5f1c3771f911468ca64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1D4C PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2275 CODESIZE SUB DUP1 PUSH2 0x2275 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0x2EE JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D696346555344000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6446555344000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x569 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x569 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145 DUP2 PUSH2 0x1CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x660 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD DUP3 PUSH2 0x294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD DUP2 PUSH2 0x2B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E8 DUP2 PUSH2 0x2C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x304 JUMPI PUSH2 0x303 PUSH2 0x290 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x311 DUP6 DUP3 DUP7 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x322 DUP6 DUP3 DUP7 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x363 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x41C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0x426 DUP7 DUP4 PUSH2 0x3E1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x46A PUSH2 0x465 PUSH2 0x460 DUP5 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x483 DUP4 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x48F DUP3 PUSH2 0x471 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3ED JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x49F JUMP JUMPDEST PUSH2 0x4B9 DUP2 DUP5 DUP5 PUSH2 0x47A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH2 0x4D1 PUSH0 DUP3 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x521 JUMPI PUSH2 0x4F2 DUP2 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x4FB DUP5 PUSH2 0x3D2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x50A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x51E PUSH2 0x516 DUP6 PUSH2 0x3D2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4BE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x541 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x526 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x559 DUP4 DUP4 PUSH2 0x532 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x572 DUP3 PUSH2 0x32C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58B JUMPI PUSH2 0x58A PUSH2 0x336 JUMP JUMPDEST JUMPDEST PUSH2 0x595 DUP3 SLOAD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x5A0 DUP3 DUP3 DUP6 PUSH2 0x4E0 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5D1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5BF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5C9 DUP6 DUP3 PUSH2 0x54E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5DF DUP7 PUSH2 0x3C0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x606 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5E1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x623 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x61F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x532 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x2B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65A PUSH0 DUP4 ADD DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C08 DUP1 PUSH2 0x66D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x122 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xB4EAE1CB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB4EAE1CB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xC752B47E EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xD9C37512 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x45B JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x73D49515 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A9 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x5268CFF EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C7 JUMPI PUSH2 0x129 JUMP JUMPDEST CALLDATASIZE PUSH2 0x129 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x165B JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x9A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0xAA2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x505 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x542 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP PUSH2 0x54F DUP2 DUP6 DUP6 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A4 PUSH2 0xAA2 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH4 0x5F5E100 CALLVALUE PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x6 SLOAD DUP4 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x5F5E100 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F1 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x704 CALLER DUP6 PUSH2 0xCC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x71D PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP PUSH2 0x72A DUP6 DUP3 DUP6 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x735 DUP6 DUP6 DUP6 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x778 CALLER DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x780 PUSH2 0xAA2 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x6 SLOAD DUP4 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x5F5E100 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x5F5E100 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP2 SELFBALANCE LT ISZERO PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x95A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AF PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x9B8 PUSH0 PUSH2 0xFCE JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA25 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA70 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA70 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA53 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA84 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP PUSH2 0xA91 DUP2 DUP6 DUP6 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x98D5FDCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP PUSH4 0x5F5E100 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0x1388 PUSH1 0x6 SLOAD GT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x64 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0xB9D JUMPI PUSH2 0x251C PUSH1 0x6 SLOAD LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x64 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC31 PUSH2 0xF47 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0xFCE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCC1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1091 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD41 PUSH0 DUP4 DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD50 DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xDD2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1091 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC3 DUP4 DUP4 DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF38 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF43 DUP3 PUSH0 DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xCAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6D PUSH2 0x9C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH2 0xF90 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1101 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x125A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x137E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1339 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1330 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x140F JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x146C SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14A2 DUP3 PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x1498 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CB PUSH0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1513 DUP3 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x151D DUP2 DUP6 PUSH2 0x14DB JUMP JUMPDEST SWAP4 POP PUSH2 0x152D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x14F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1559 DUP2 DUP5 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x1498 JUMP JUMPDEST DUP2 EQ PUSH2 0x1578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1589 DUP2 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A1 DUP2 PUSH2 0x158F JUMP JUMPDEST DUP2 EQ PUSH2 0x15AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BC DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E5 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F6 DUP6 DUP3 DUP7 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1614 DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162D PUSH0 DUP4 ADD DUP5 PUSH2 0x160B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x158F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1655 PUSH0 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x167F DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1690 DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16A1 DUP7 DUP3 DUP8 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16CE PUSH2 0x16C9 PUSH2 0x16C4 DUP5 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16DF DUP3 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F0 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x16E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1719 PUSH0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1734 DUP2 PUSH2 0x171F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174D PUSH0 DUP4 ADD DUP5 PUSH2 0x172B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1775 DUP5 DUP3 DUP6 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A0 DUP5 DUP3 DUP6 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17BF JUMPI PUSH2 0x17BE PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17CC DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17DD DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x182B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6420455448000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1878 PUSH1 0x8 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1883 DUP3 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A5 DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18E3 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x18EE DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18FC DUP2 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x18AC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1951 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x195C DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x196C JUMPI PUSH2 0x196B PUSH2 0x191A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1981 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x18AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19BD PUSH0 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x19CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x19D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19E8 DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A03 DUP2 PUSH2 0x19DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1E JUMPI PUSH2 0x1A1D PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2B DUP5 DUP3 DUP6 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x465241207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A68 PUSH1 0x13 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1A73 DUP3 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A95 DUP2 PUSH2 0x1A5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820455448000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD0 PUSH1 0xE DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFD DUP2 PUSH2 0x1AC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B17 PUSH0 DUP4 ADD DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1B24 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B39 DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B61 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B74 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7F DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x18AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB0 PUSH0 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1BBD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x1BCA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SAR PUSH31 0x8F4852D2602DE4D81EC99548A6FECFC74B696B49C5F1C3771F911468CA6473 PUSH16 0x6C634300081D00330000000000000000 ",
							"sourceMap": "438:2119:6:-:0;;;534:4;501:37;;749:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;851:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;888:9:6::2;877:8;;:20;;;;;;;;;;;;;;;;;;934:7;907:11;;:35;;;;;;;;;;;;;;;;;;749:200:::0;;438:2119;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3638:1;3631:8;;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;438:2119:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PRICE_TARGET_977": {
									"entryPoint": 2490,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RATIO_SCALE_974": {
									"entryPoint": 2977,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1200": {
									"entryPoint": null,
									"id": 1200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3252,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4241,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3784,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3911,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3270,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3245,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3397,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4046,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3544,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4704,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2983,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1336,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2402,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1196": {
									"entryPoint": 1902,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@collateralRatio_971": {
									"entryPoint": 2716,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1894,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@govToken_979": {
									"entryPoint": 1155,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1116": {
									"entryPoint": 1370,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1192,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2498,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceOracle_982": {
									"entryPoint": 1857,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2471,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2538,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1802,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1811,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3113,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2682,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateCR_1046": {
									"entryPoint": 2722,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IPriceOracle_$943_to_t_address_fromStack": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPriceOracle_$943__to_t_address__fromStack_reversed": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IPriceOracle_$943_to_t_address": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14331:7",
										"nodeType": "YulBlock",
										"src": "0:14331:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "184:51:7",
													"nodeType": "YulBlock",
													"src": "184:51:7",
													"statements": [
														{
															"nativeSrc": "194:35:7",
															"nodeType": "YulAssignment",
															"src": "194:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:7"
																},
																"nativeSrc": "205:24:7",
																"nodeType": "YulFunctionCall",
																"src": "205:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:7",
														"nodeType": "YulTypedName",
														"src": "166:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:7",
														"nodeType": "YulTypedName",
														"src": "176:7:7",
														"type": ""
													}
												],
												"src": "139:96:7"
											},
											{
												"body": {
													"nativeSrc": "306:53:7",
													"nodeType": "YulBlock",
													"src": "306:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:7"
																		},
																		"nativeSrc": "328:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:7"
																},
																"nativeSrc": "316:37:7",
																"nodeType": "YulFunctionCall",
																"src": "316:37:7"
															},
															"nativeSrc": "316:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:7",
														"nodeType": "YulTypedName",
														"src": "294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:7",
														"nodeType": "YulTypedName",
														"src": "301:3:7",
														"type": ""
													}
												],
												"src": "241:118:7"
											},
											{
												"body": {
													"nativeSrc": "463:124:7",
													"nodeType": "YulBlock",
													"src": "463:124:7",
													"statements": [
														{
															"nativeSrc": "473:26:7",
															"nodeType": "YulAssignment",
															"src": "473:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "496:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:7"
																},
																"nativeSrc": "481:18:7",
																"nodeType": "YulFunctionCall",
																"src": "481:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "577:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:7"
																		},
																		"nativeSrc": "562:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:7"
																},
																"nativeSrc": "509:71:7",
																"nodeType": "YulFunctionCall",
																"src": "509:71:7"
															},
															"nativeSrc": "509:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:7",
														"nodeType": "YulTypedName",
														"src": "435:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:7",
														"nodeType": "YulTypedName",
														"src": "447:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:7",
														"nodeType": "YulTypedName",
														"src": "458:4:7",
														"type": ""
													}
												],
												"src": "365:222:7"
											},
											{
												"body": {
													"nativeSrc": "652:40:7",
													"nodeType": "YulBlock",
													"src": "652:40:7",
													"statements": [
														{
															"nativeSrc": "663:22:7",
															"nodeType": "YulAssignment",
															"src": "663:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:7"
																},
																"nativeSrc": "673:12:7",
																"nodeType": "YulFunctionCall",
																"src": "673:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:7",
														"nodeType": "YulTypedName",
														"src": "635:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:7",
														"nodeType": "YulTypedName",
														"src": "645:6:7",
														"type": ""
													}
												],
												"src": "593:99:7"
											},
											{
												"body": {
													"nativeSrc": "794:73:7",
													"nodeType": "YulBlock",
													"src": "794:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "811:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "811:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "816:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "804:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:7"
																},
																"nativeSrc": "804:19:7",
																"nodeType": "YulFunctionCall",
																"src": "804:19:7"
															},
															"nativeSrc": "804:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "804:19:7"
														},
														{
															"nativeSrc": "832:29:7",
															"nodeType": "YulAssignment",
															"src": "832:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "851:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "856:4:7",
																		"nodeType": "YulLiteral",
																		"src": "856:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:7"
																},
																"nativeSrc": "847:14:7",
																"nodeType": "YulFunctionCall",
																"src": "847:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "832:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "832:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "698:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "771:6:7",
														"nodeType": "YulTypedName",
														"src": "771:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "782:11:7",
														"nodeType": "YulTypedName",
														"src": "782:11:7",
														"type": ""
													}
												],
												"src": "698:169:7"
											},
											{
												"body": {
													"nativeSrc": "935:77:7",
													"nodeType": "YulBlock",
													"src": "935:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "952:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "952:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "962:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "946:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "946:5:7"
																},
																"nativeSrc": "946:23:7",
																"nodeType": "YulFunctionCall",
																"src": "946:23:7"
															},
															"nativeSrc": "946:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "946:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "989:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "989:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "994:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:7"
																		},
																		"nativeSrc": "985:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "985:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1003:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "978:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:7"
																},
																"nativeSrc": "978:27:7",
																"nodeType": "YulFunctionCall",
																"src": "978:27:7"
															},
															"nativeSrc": "978:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "978:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "873:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "917:3:7",
														"nodeType": "YulTypedName",
														"src": "917:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "922:3:7",
														"nodeType": "YulTypedName",
														"src": "922:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "927:6:7",
														"nodeType": "YulTypedName",
														"src": "927:6:7",
														"type": ""
													}
												],
												"src": "873:139:7"
											},
											{
												"body": {
													"nativeSrc": "1066:54:7",
													"nodeType": "YulBlock",
													"src": "1066:54:7",
													"statements": [
														{
															"nativeSrc": "1076:38:7",
															"nodeType": "YulAssignment",
															"src": "1076:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1094:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1094:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1101:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1101:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:7"
																		},
																		"nativeSrc": "1090:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1090:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1110:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1106:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:7"
																		},
																		"nativeSrc": "1106:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1106:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1086:3:7"
																},
																"nativeSrc": "1086:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1086:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1076:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1018:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:7",
														"nodeType": "YulTypedName",
														"src": "1049:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1059:6:7",
														"nodeType": "YulTypedName",
														"src": "1059:6:7",
														"type": ""
													}
												],
												"src": "1018:102:7"
											},
											{
												"body": {
													"nativeSrc": "1218:285:7",
													"nodeType": "YulBlock",
													"src": "1218:285:7",
													"statements": [
														{
															"nativeSrc": "1228:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1228:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1275:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1275:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1242:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1242:32:7"
																},
																"nativeSrc": "1242:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1242:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1232:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1232:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1290:78:7",
															"nodeType": "YulAssignment",
															"src": "1290:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1356:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1356:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1361:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1361:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1297:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1297:58:7"
																},
																"nativeSrc": "1297:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1297:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1290:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1416:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1416:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1423:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1412:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:7"
																		},
																		"nativeSrc": "1412:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1430:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1430:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1435:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1377:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1377:34:7"
																},
																"nativeSrc": "1377:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1377:65:7"
															},
															"nativeSrc": "1377:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1377:65:7"
														},
														{
															"nativeSrc": "1451:46:7",
															"nodeType": "YulAssignment",
															"src": "1451:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1462:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1462:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1489:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1489:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1467:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1467:21:7"
																		},
																		"nativeSrc": "1467:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:7"
																},
																"nativeSrc": "1458:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1458:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1126:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1199:5:7",
														"nodeType": "YulTypedName",
														"src": "1199:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1206:3:7",
														"nodeType": "YulTypedName",
														"src": "1206:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1214:3:7",
														"nodeType": "YulTypedName",
														"src": "1214:3:7",
														"type": ""
													}
												],
												"src": "1126:377:7"
											},
											{
												"body": {
													"nativeSrc": "1627:195:7",
													"nodeType": "YulBlock",
													"src": "1627:195:7",
													"statements": [
														{
															"nativeSrc": "1637:26:7",
															"nodeType": "YulAssignment",
															"src": "1637:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1649:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1649:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1660:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1660:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1645:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:7"
																},
																"nativeSrc": "1645:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1645:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1637:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1637:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1695:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1695:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:7"
																		},
																		"nativeSrc": "1680:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1680:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1703:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1703:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1709:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1699:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1699:3:7"
																		},
																		"nativeSrc": "1699:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1699:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1673:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:7"
																},
																"nativeSrc": "1673:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1673:47:7"
															},
															"nativeSrc": "1673:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1673:47:7"
														},
														{
															"nativeSrc": "1729:86:7",
															"nodeType": "YulAssignment",
															"src": "1729:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1801:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1810:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1810:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1737:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1737:63:7"
																},
																"nativeSrc": "1737:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1737:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1729:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1729:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1509:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1599:9:7",
														"nodeType": "YulTypedName",
														"src": "1599:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1611:6:7",
														"nodeType": "YulTypedName",
														"src": "1611:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1622:4:7",
														"nodeType": "YulTypedName",
														"src": "1622:4:7",
														"type": ""
													}
												],
												"src": "1509:313:7"
											},
											{
												"body": {
													"nativeSrc": "1868:35:7",
													"nodeType": "YulBlock",
													"src": "1868:35:7",
													"statements": [
														{
															"nativeSrc": "1878:19:7",
															"nodeType": "YulAssignment",
															"src": "1878:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1888:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:7"
																},
																"nativeSrc": "1888:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1888:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1828:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1861:6:7",
														"nodeType": "YulTypedName",
														"src": "1861:6:7",
														"type": ""
													}
												],
												"src": "1828:75:7"
											},
											{
												"body": {
													"nativeSrc": "1998:28:7",
													"nodeType": "YulBlock",
													"src": "1998:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2015:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2018:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:7"
																},
																"nativeSrc": "2008:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2008:12:7"
															},
															"nativeSrc": "2008:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2008:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1909:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1909:117:7"
											},
											{
												"body": {
													"nativeSrc": "2121:28:7",
													"nodeType": "YulBlock",
													"src": "2121:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2141:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:7"
																},
																"nativeSrc": "2131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:12:7"
															},
															"nativeSrc": "2131:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2032:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2032:117:7"
											},
											{
												"body": {
													"nativeSrc": "2198:79:7",
													"nodeType": "YulBlock",
													"src": "2198:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2255:16:7",
																"nodeType": "YulBlock",
																"src": "2255:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2264:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2267:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2257:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:7"
																			},
																			"nativeSrc": "2257:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:12:7"
																		},
																		"nativeSrc": "2257:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2257:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2221:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2246:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2246:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2228:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2228:17:7"
																				},
																				"nativeSrc": "2228:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2228:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2218:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2218:2:7"
																		},
																		"nativeSrc": "2218:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																},
																"nativeSrc": "2211:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2211:43:7"
															},
															"nativeSrc": "2208:63:7",
															"nodeType": "YulIf",
															"src": "2208:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2155:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2191:5:7",
														"nodeType": "YulTypedName",
														"src": "2191:5:7",
														"type": ""
													}
												],
												"src": "2155:122:7"
											},
											{
												"body": {
													"nativeSrc": "2335:87:7",
													"nodeType": "YulBlock",
													"src": "2335:87:7",
													"statements": [
														{
															"nativeSrc": "2345:29:7",
															"nodeType": "YulAssignment",
															"src": "2345:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2367:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:7"
																},
																"nativeSrc": "2354:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2354:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2410:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2410:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2383:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2383:26:7"
																},
																"nativeSrc": "2383:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2383:33:7"
															},
															"nativeSrc": "2383:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2383:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2283:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2313:6:7",
														"nodeType": "YulTypedName",
														"src": "2313:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2321:3:7",
														"nodeType": "YulTypedName",
														"src": "2321:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2329:5:7",
														"nodeType": "YulTypedName",
														"src": "2329:5:7",
														"type": ""
													}
												],
												"src": "2283:139:7"
											},
											{
												"body": {
													"nativeSrc": "2473:32:7",
													"nodeType": "YulBlock",
													"src": "2473:32:7",
													"statements": [
														{
															"nativeSrc": "2483:16:7",
															"nodeType": "YulAssignment",
															"src": "2483:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2494:5:7",
																"nodeType": "YulIdentifier",
																"src": "2494:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2483:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2483:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2428:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2455:5:7",
														"nodeType": "YulTypedName",
														"src": "2455:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2465:7:7",
														"nodeType": "YulTypedName",
														"src": "2465:7:7",
														"type": ""
													}
												],
												"src": "2428:77:7"
											},
											{
												"body": {
													"nativeSrc": "2554:79:7",
													"nodeType": "YulBlock",
													"src": "2554:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:7",
																"nodeType": "YulBlock",
																"src": "2611:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:7"
																			},
																			"nativeSrc": "2613:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:7"
																		},
																		"nativeSrc": "2613:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:7"
																				},
																				"nativeSrc": "2584:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:7"
																		},
																		"nativeSrc": "2574:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:7"
															},
															"nativeSrc": "2564:63:7",
															"nodeType": "YulIf",
															"src": "2564:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:7",
														"nodeType": "YulTypedName",
														"src": "2547:5:7",
														"type": ""
													}
												],
												"src": "2511:122:7"
											},
											{
												"body": {
													"nativeSrc": "2691:87:7",
													"nodeType": "YulBlock",
													"src": "2691:87:7",
													"statements": [
														{
															"nativeSrc": "2701:29:7",
															"nodeType": "YulAssignment",
															"src": "2701:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:7"
																},
																"nativeSrc": "2739:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:7"
															},
															"nativeSrc": "2739:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:7",
														"nodeType": "YulTypedName",
														"src": "2669:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:7",
														"nodeType": "YulTypedName",
														"src": "2677:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2639:139:7"
											},
											{
												"body": {
													"nativeSrc": "2867:391:7",
													"nodeType": "YulBlock",
													"src": "2867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:7",
																"nodeType": "YulBlock",
																"src": "2913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:7"
																			},
																			"nativeSrc": "2915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:7"
																		},
																		"nativeSrc": "2915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:119:7",
															"nodeType": "YulIf",
															"src": "2877:119:7"
														},
														{
															"nativeSrc": "3006:117:7",
															"nodeType": "YulBlock",
															"src": "3006:117:7",
															"statements": [
																{
																	"nativeSrc": "3021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:7"
																				},
																				"nativeSrc": "3081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:7"
																		},
																		"nativeSrc": "3060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:7",
															"nodeType": "YulBlock",
															"src": "3133:118:7",
															"statements": [
																{
																	"nativeSrc": "3148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:7"
																				},
																				"nativeSrc": "3209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:7"
																		},
																		"nativeSrc": "3188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:7",
														"nodeType": "YulTypedName",
														"src": "2829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:7",
														"nodeType": "YulTypedName",
														"src": "2840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2784:474:7"
											},
											{
												"body": {
													"nativeSrc": "3306:48:7",
													"nodeType": "YulBlock",
													"src": "3306:48:7",
													"statements": [
														{
															"nativeSrc": "3316:32:7",
															"nodeType": "YulAssignment",
															"src": "3316:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		},
																		"nativeSrc": "3334:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:7",
														"nodeType": "YulTypedName",
														"src": "3288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:7",
														"nodeType": "YulTypedName",
														"src": "3298:7:7",
														"type": ""
													}
												],
												"src": "3264:90:7"
											},
											{
												"body": {
													"nativeSrc": "3419:50:7",
													"nodeType": "YulBlock",
													"src": "3419:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:7"
																		},
																		"nativeSrc": "3441:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:7"
															},
															"nativeSrc": "3429:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:7",
														"nodeType": "YulTypedName",
														"src": "3407:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:7",
														"nodeType": "YulTypedName",
														"src": "3414:3:7",
														"type": ""
													}
												],
												"src": "3360:109:7"
											},
											{
												"body": {
													"nativeSrc": "3567:118:7",
													"nodeType": "YulBlock",
													"src": "3567:118:7",
													"statements": [
														{
															"nativeSrc": "3577:26:7",
															"nodeType": "YulAssignment",
															"src": "3577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:7"
																},
																"nativeSrc": "3585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:7",
														"nodeType": "YulTypedName",
														"src": "3562:4:7",
														"type": ""
													}
												],
												"src": "3475:210:7"
											},
											{
												"body": {
													"nativeSrc": "3756:53:7",
													"nodeType": "YulBlock",
													"src": "3756:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3773:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3778:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3778:17:7"
																		},
																		"nativeSrc": "3778:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:7"
																},
																"nativeSrc": "3766:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3766:37:7"
															},
															"nativeSrc": "3766:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3766:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3691:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:7",
														"nodeType": "YulTypedName",
														"src": "3744:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3751:3:7",
														"nodeType": "YulTypedName",
														"src": "3751:3:7",
														"type": ""
													}
												],
												"src": "3691:118:7"
											},
											{
												"body": {
													"nativeSrc": "3913:124:7",
													"nodeType": "YulBlock",
													"src": "3913:124:7",
													"statements": [
														{
															"nativeSrc": "3923:26:7",
															"nodeType": "YulAssignment",
															"src": "3923:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3935:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3935:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:7"
																},
																"nativeSrc": "3931:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3931:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3923:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3923:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:7"
																		},
																		"nativeSrc": "4012:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3959:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3959:43:7"
																},
																"nativeSrc": "3959:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3959:71:7"
															},
															"nativeSrc": "3959:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3959:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3815:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:7",
														"nodeType": "YulTypedName",
														"src": "3885:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3897:6:7",
														"nodeType": "YulTypedName",
														"src": "3897:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3908:4:7",
														"nodeType": "YulTypedName",
														"src": "3908:4:7",
														"type": ""
													}
												],
												"src": "3815:222:7"
											},
											{
												"body": {
													"nativeSrc": "4143:519:7",
													"nodeType": "YulBlock",
													"src": "4143:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4189:83:7",
																"nodeType": "YulBlock",
																"src": "4189:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4191:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4191:77:7"
																			},
																			"nativeSrc": "4191:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:79:7"
																		},
																		"nativeSrc": "4191:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:7"
																		},
																		"nativeSrc": "4160:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:7"
																},
																"nativeSrc": "4156:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4156:32:7"
															},
															"nativeSrc": "4153:119:7",
															"nodeType": "YulIf",
															"src": "4153:119:7"
														},
														{
															"nativeSrc": "4282:117:7",
															"nodeType": "YulBlock",
															"src": "4282:117:7",
															"statements": [
																{
																	"nativeSrc": "4297:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4297:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4311:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4311:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4301:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4301:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4326:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4326:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4361:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4361:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4372:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4357:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:7"
																				},
																				"nativeSrc": "4357:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4357:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4381:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4381:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4336:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4336:20:7"
																		},
																		"nativeSrc": "4336:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4326:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4326:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4409:118:7",
															"nodeType": "YulBlock",
															"src": "4409:118:7",
															"statements": [
																{
																	"nativeSrc": "4424:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4424:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4428:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4428:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4454:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4454:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4489:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4489:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4500:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4500:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:7"
																				},
																				"nativeSrc": "4485:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4485:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4509:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4509:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4464:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4464:20:7"
																		},
																		"nativeSrc": "4464:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4454:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4454:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4537:118:7",
															"nodeType": "YulBlock",
															"src": "4537:118:7",
															"statements": [
																{
																	"nativeSrc": "4552:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4552:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4556:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4556:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:7"
																				},
																				"nativeSrc": "4613:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4592:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:7"
																		},
																		"nativeSrc": "4592:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4582:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4043:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:7",
														"nodeType": "YulTypedName",
														"src": "4097:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4108:7:7",
														"nodeType": "YulTypedName",
														"src": "4108:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4120:6:7",
														"nodeType": "YulTypedName",
														"src": "4120:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:7",
														"nodeType": "YulTypedName",
														"src": "4128:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4136:6:7",
														"nodeType": "YulTypedName",
														"src": "4136:6:7",
														"type": ""
													}
												],
												"src": "4043:619:7"
											},
											{
												"body": {
													"nativeSrc": "4700:28:7",
													"nodeType": "YulBlock",
													"src": "4700:28:7",
													"statements": [
														{
															"nativeSrc": "4710:12:7",
															"nodeType": "YulAssignment",
															"src": "4710:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4717:5:7",
																"nodeType": "YulIdentifier",
																"src": "4717:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4710:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4668:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4686:5:7",
														"nodeType": "YulTypedName",
														"src": "4686:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4696:3:7",
														"nodeType": "YulTypedName",
														"src": "4696:3:7",
														"type": ""
													}
												],
												"src": "4668:60:7"
											},
											{
												"body": {
													"nativeSrc": "4794:82:7",
													"nodeType": "YulBlock",
													"src": "4794:82:7",
													"statements": [
														{
															"nativeSrc": "4804:66:7",
															"nodeType": "YulAssignment",
															"src": "4804:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4862:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4862:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4844:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4844:17:7"
																				},
																				"nativeSrc": "4844:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4844:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4835:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "4835:8:7"
																		},
																		"nativeSrc": "4835:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4817:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4817:17:7"
																},
																"nativeSrc": "4817:53:7",
																"nodeType": "YulFunctionCall",
																"src": "4817:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4804:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4804:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4734:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4774:5:7",
														"nodeType": "YulTypedName",
														"src": "4774:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4784:9:7",
														"nodeType": "YulTypedName",
														"src": "4784:9:7",
														"type": ""
													}
												],
												"src": "4734:142:7"
											},
											{
												"body": {
													"nativeSrc": "4942:66:7",
													"nodeType": "YulBlock",
													"src": "4942:66:7",
													"statements": [
														{
															"nativeSrc": "4952:50:7",
															"nodeType": "YulAssignment",
															"src": "4952:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4996:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4996:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4965:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:30:7"
																},
																"nativeSrc": "4965:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4965:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4952:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4952:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4882:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4922:5:7",
														"nodeType": "YulTypedName",
														"src": "4922:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4932:9:7",
														"nodeType": "YulTypedName",
														"src": "4932:9:7",
														"type": ""
													}
												],
												"src": "4882:126:7"
											},
											{
												"body": {
													"nativeSrc": "5094:66:7",
													"nodeType": "YulBlock",
													"src": "5094:66:7",
													"statements": [
														{
															"nativeSrc": "5104:50:7",
															"nodeType": "YulAssignment",
															"src": "5104:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5148:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5117:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5117:30:7"
																},
																"nativeSrc": "5117:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5117:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5104:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5104:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IPriceOracle_$943_to_t_address",
												"nativeSrc": "5014:146:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5074:5:7",
														"nodeType": "YulTypedName",
														"src": "5074:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5084:9:7",
														"nodeType": "YulTypedName",
														"src": "5084:9:7",
														"type": ""
													}
												],
												"src": "5014:146:7"
											},
											{
												"body": {
													"nativeSrc": "5251:86:7",
													"nodeType": "YulBlock",
													"src": "5251:86:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5268:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5268:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5324:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5324:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IPriceOracle_$943_to_t_address",
																			"nativeSrc": "5273:50:7",
																			"nodeType": "YulIdentifier",
																			"src": "5273:50:7"
																		},
																		"nativeSrc": "5273:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5273:57:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5261:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:7"
																},
																"nativeSrc": "5261:70:7",
																"nodeType": "YulFunctionCall",
																"src": "5261:70:7"
															},
															"nativeSrc": "5261:70:7",
															"nodeType": "YulExpressionStatement",
															"src": "5261:70:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IPriceOracle_$943_to_t_address_fromStack",
												"nativeSrc": "5166:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5239:5:7",
														"nodeType": "YulTypedName",
														"src": "5239:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5246:3:7",
														"nodeType": "YulTypedName",
														"src": "5246:3:7",
														"type": ""
													}
												],
												"src": "5166:171:7"
											},
											{
												"body": {
													"nativeSrc": "5461:144:7",
													"nodeType": "YulBlock",
													"src": "5461:144:7",
													"statements": [
														{
															"nativeSrc": "5471:26:7",
															"nodeType": "YulAssignment",
															"src": "5471:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5483:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5483:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5494:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5494:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5479:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:7"
																},
																"nativeSrc": "5479:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5479:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5471:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5471:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5580:3:7"
																		},
																		"nativeSrc": "5580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IPriceOracle_$943_to_t_address_fromStack",
																	"nativeSrc": "5507:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "5507:63:7"
																},
																"nativeSrc": "5507:91:7",
																"nodeType": "YulFunctionCall",
																"src": "5507:91:7"
															},
															"nativeSrc": "5507:91:7",
															"nodeType": "YulExpressionStatement",
															"src": "5507:91:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPriceOracle_$943__to_t_address__fromStack_reversed",
												"nativeSrc": "5343:262:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5433:9:7",
														"nodeType": "YulTypedName",
														"src": "5433:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5445:6:7",
														"nodeType": "YulTypedName",
														"src": "5445:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5456:4:7",
														"nodeType": "YulTypedName",
														"src": "5456:4:7",
														"type": ""
													}
												],
												"src": "5343:262:7"
											},
											{
												"body": {
													"nativeSrc": "5654:43:7",
													"nodeType": "YulBlock",
													"src": "5654:43:7",
													"statements": [
														{
															"nativeSrc": "5664:27:7",
															"nodeType": "YulAssignment",
															"src": "5664:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5679:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5679:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5686:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5686:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5675:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5675:3:7"
																},
																"nativeSrc": "5675:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5675:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5664:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5664:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5611:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:7",
														"nodeType": "YulTypedName",
														"src": "5636:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5646:7:7",
														"nodeType": "YulTypedName",
														"src": "5646:7:7",
														"type": ""
													}
												],
												"src": "5611:86:7"
											},
											{
												"body": {
													"nativeSrc": "5764:51:7",
													"nodeType": "YulBlock",
													"src": "5764:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5781:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5781:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5802:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5802:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5786:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5786:15:7"
																		},
																		"nativeSrc": "5786:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5786:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5774:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5774:6:7"
																},
																"nativeSrc": "5774:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5774:35:7"
															},
															"nativeSrc": "5774:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5774:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5703:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5752:5:7",
														"nodeType": "YulTypedName",
														"src": "5752:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5759:3:7",
														"nodeType": "YulTypedName",
														"src": "5759:3:7",
														"type": ""
													}
												],
												"src": "5703:112:7"
											},
											{
												"body": {
													"nativeSrc": "5915:120:7",
													"nodeType": "YulBlock",
													"src": "5915:120:7",
													"statements": [
														{
															"nativeSrc": "5925:26:7",
															"nodeType": "YulAssignment",
															"src": "5925:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5937:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5937:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5948:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5948:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5933:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5933:3:7"
																},
																"nativeSrc": "5933:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5933:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5925:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5925:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6001:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6001:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6014:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6014:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6025:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6025:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6010:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6010:3:7"
																		},
																		"nativeSrc": "6010:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6010:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5961:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5961:39:7"
																},
																"nativeSrc": "5961:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5961:67:7"
															},
															"nativeSrc": "5961:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5961:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5821:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5887:9:7",
														"nodeType": "YulTypedName",
														"src": "5887:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5899:6:7",
														"nodeType": "YulTypedName",
														"src": "5899:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5910:4:7",
														"nodeType": "YulTypedName",
														"src": "5910:4:7",
														"type": ""
													}
												],
												"src": "5821:214:7"
											},
											{
												"body": {
													"nativeSrc": "6107:263:7",
													"nodeType": "YulBlock",
													"src": "6107:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6153:83:7",
																"nodeType": "YulBlock",
																"src": "6153:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6155:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6155:77:7"
																			},
																			"nativeSrc": "6155:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6155:79:7"
																		},
																		"nativeSrc": "6155:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6155:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6128:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6137:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6137:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6124:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:7"
																		},
																		"nativeSrc": "6124:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6124:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6149:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6149:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6120:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:7"
																},
																"nativeSrc": "6120:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6120:32:7"
															},
															"nativeSrc": "6117:119:7",
															"nodeType": "YulIf",
															"src": "6117:119:7"
														},
														{
															"nativeSrc": "6246:117:7",
															"nodeType": "YulBlock",
															"src": "6246:117:7",
															"statements": [
																{
																	"nativeSrc": "6261:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6261:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6275:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6275:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6265:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6265:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6290:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6290:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6325:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6325:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6336:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6336:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6321:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6321:3:7"
																				},
																				"nativeSrc": "6321:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6321:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6345:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6345:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6300:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6300:20:7"
																		},
																		"nativeSrc": "6300:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6300:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6290:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6290:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6041:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6077:9:7",
														"nodeType": "YulTypedName",
														"src": "6077:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6088:7:7",
														"nodeType": "YulTypedName",
														"src": "6088:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6100:6:7",
														"nodeType": "YulTypedName",
														"src": "6100:6:7",
														"type": ""
													}
												],
												"src": "6041:329:7"
											},
											{
												"body": {
													"nativeSrc": "6442:263:7",
													"nodeType": "YulBlock",
													"src": "6442:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6488:83:7",
																"nodeType": "YulBlock",
																"src": "6488:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6490:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6490:77:7"
																			},
																			"nativeSrc": "6490:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6490:79:7"
																		},
																		"nativeSrc": "6490:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6490:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6463:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6463:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6472:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6472:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6459:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6459:3:7"
																		},
																		"nativeSrc": "6459:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6459:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6484:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6455:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6455:3:7"
																},
																"nativeSrc": "6455:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6455:32:7"
															},
															"nativeSrc": "6452:119:7",
															"nodeType": "YulIf",
															"src": "6452:119:7"
														},
														{
															"nativeSrc": "6581:117:7",
															"nodeType": "YulBlock",
															"src": "6581:117:7",
															"statements": [
																{
																	"nativeSrc": "6596:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6596:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6610:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6610:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6600:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6600:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6625:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6625:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6660:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6660:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6671:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6671:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6656:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6656:3:7"
																				},
																				"nativeSrc": "6656:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6656:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6680:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6680:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6635:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6635:20:7"
																		},
																		"nativeSrc": "6635:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6625:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6625:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6376:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6412:9:7",
														"nodeType": "YulTypedName",
														"src": "6412:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6423:7:7",
														"nodeType": "YulTypedName",
														"src": "6423:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6435:6:7",
														"nodeType": "YulTypedName",
														"src": "6435:6:7",
														"type": ""
													}
												],
												"src": "6376:329:7"
											},
											{
												"body": {
													"nativeSrc": "6794:391:7",
													"nodeType": "YulBlock",
													"src": "6794:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6840:83:7",
																"nodeType": "YulBlock",
																"src": "6840:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6842:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6842:77:7"
																			},
																			"nativeSrc": "6842:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6842:79:7"
																		},
																		"nativeSrc": "6842:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6842:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6815:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6815:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6824:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6811:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6811:3:7"
																		},
																		"nativeSrc": "6811:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6811:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6836:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6836:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6807:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:7"
																},
																"nativeSrc": "6807:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6807:32:7"
															},
															"nativeSrc": "6804:119:7",
															"nodeType": "YulIf",
															"src": "6804:119:7"
														},
														{
															"nativeSrc": "6933:117:7",
															"nodeType": "YulBlock",
															"src": "6933:117:7",
															"statements": [
																{
																	"nativeSrc": "6948:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6948:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6962:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6962:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6952:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6952:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6977:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6977:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7012:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7012:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7023:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7023:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7008:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7008:3:7"
																				},
																				"nativeSrc": "7008:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7008:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7032:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7032:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6987:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6987:20:7"
																		},
																		"nativeSrc": "6987:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6987:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6977:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6977:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7060:118:7",
															"nodeType": "YulBlock",
															"src": "7060:118:7",
															"statements": [
																{
																	"nativeSrc": "7075:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7075:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7089:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7089:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7079:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7079:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7105:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7105:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7140:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7140:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7151:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7151:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7136:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7136:3:7"
																				},
																				"nativeSrc": "7136:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7136:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7160:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7160:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7115:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7115:20:7"
																		},
																		"nativeSrc": "7115:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7115:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6711:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6756:9:7",
														"nodeType": "YulTypedName",
														"src": "6756:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6767:7:7",
														"nodeType": "YulTypedName",
														"src": "6767:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6779:6:7",
														"nodeType": "YulTypedName",
														"src": "6779:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6787:6:7",
														"nodeType": "YulTypedName",
														"src": "6787:6:7",
														"type": ""
													}
												],
												"src": "6711:474:7"
											},
											{
												"body": {
													"nativeSrc": "7219:152:7",
													"nodeType": "YulBlock",
													"src": "7219:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7236:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7236:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7239:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7239:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7229:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7229:6:7"
																},
																"nativeSrc": "7229:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7229:88:7"
															},
															"nativeSrc": "7229:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7229:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7333:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7333:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7336:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7336:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7326:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7326:6:7"
																},
																"nativeSrc": "7326:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7326:15:7"
															},
															"nativeSrc": "7326:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7326:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7357:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7357:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7360:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7360:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:7"
																},
																"nativeSrc": "7350:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7350:15:7"
															},
															"nativeSrc": "7350:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7350:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7191:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7191:180:7"
											},
											{
												"body": {
													"nativeSrc": "7428:269:7",
													"nodeType": "YulBlock",
													"src": "7428:269:7",
													"statements": [
														{
															"nativeSrc": "7438:22:7",
															"nodeType": "YulAssignment",
															"src": "7438:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7452:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7452:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7458:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7458:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7448:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7448:3:7"
																},
																"nativeSrc": "7448:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7448:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7438:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:7"
																}
															]
														},
														{
															"nativeSrc": "7469:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7469:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7499:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7499:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7505:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7505:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7495:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:7"
																},
																"nativeSrc": "7495:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7495:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7473:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7473:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7546:51:7",
																"nodeType": "YulBlock",
																"src": "7546:51:7",
																"statements": [
																	{
																		"nativeSrc": "7560:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7560:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7574:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7574:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7582:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7582:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7570:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7570:3:7"
																			},
																			"nativeSrc": "7570:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7570:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7560:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7560:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7526:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7526:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7519:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7519:6:7"
																},
																"nativeSrc": "7519:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7519:26:7"
															},
															"nativeSrc": "7516:81:7",
															"nodeType": "YulIf",
															"src": "7516:81:7"
														},
														{
															"body": {
																"nativeSrc": "7649:42:7",
																"nodeType": "YulBlock",
																"src": "7649:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7663:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7663:16:7"
																			},
																			"nativeSrc": "7663:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7663:18:7"
																		},
																		"nativeSrc": "7663:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7663:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7613:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7613:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7636:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7636:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7644:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7644:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7633:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7633:2:7"
																		},
																		"nativeSrc": "7633:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7633:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7610:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7610:2:7"
																},
																"nativeSrc": "7610:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7610:38:7"
															},
															"nativeSrc": "7607:84:7",
															"nodeType": "YulIf",
															"src": "7607:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7377:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7412:4:7",
														"nodeType": "YulTypedName",
														"src": "7412:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7421:6:7",
														"nodeType": "YulTypedName",
														"src": "7421:6:7",
														"type": ""
													}
												],
												"src": "7377:320:7"
											},
											{
												"body": {
													"nativeSrc": "7809:52:7",
													"nodeType": "YulBlock",
													"src": "7809:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7831:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7831:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7839:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7839:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7827:3:7"
																		},
																		"nativeSrc": "7827:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7827:14:7"
																	},
																	{
																		"hexValue": "53656e6420455448",
																		"kind": "string",
																		"nativeSrc": "7843:10:7",
																		"nodeType": "YulLiteral",
																		"src": "7843:10:7",
																		"type": "",
																		"value": "Send ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7820:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:7"
																},
																"nativeSrc": "7820:34:7",
																"nodeType": "YulFunctionCall",
																"src": "7820:34:7"
															},
															"nativeSrc": "7820:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "7820:34:7"
														}
													]
												},
												"name": "store_literal_in_memory_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8",
												"nativeSrc": "7703:158:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7801:6:7",
														"nodeType": "YulTypedName",
														"src": "7801:6:7",
														"type": ""
													}
												],
												"src": "7703:158:7"
											},
											{
												"body": {
													"nativeSrc": "8013:219:7",
													"nodeType": "YulBlock",
													"src": "8013:219:7",
													"statements": [
														{
															"nativeSrc": "8023:73:7",
															"nodeType": "YulAssignment",
															"src": "8023:73:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8089:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8089:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8094:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8094:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8030:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8030:58:7"
																},
																"nativeSrc": "8030:66:7",
																"nodeType": "YulFunctionCall",
																"src": "8030:66:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8023:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8023:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8194:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8194:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8",
																	"nativeSrc": "8105:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8105:88:7"
																},
																"nativeSrc": "8105:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8105:93:7"
															},
															"nativeSrc": "8105:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8105:93:7"
														},
														{
															"nativeSrc": "8207:19:7",
															"nodeType": "YulAssignment",
															"src": "8207:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8218:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8223:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8223:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8214:3:7"
																},
																"nativeSrc": "8214:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8214:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8207:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8207:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7867:365:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8001:3:7",
														"nodeType": "YulTypedName",
														"src": "8001:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8009:3:7",
														"nodeType": "YulTypedName",
														"src": "8009:3:7",
														"type": ""
													}
												],
												"src": "7867:365:7"
											},
											{
												"body": {
													"nativeSrc": "8409:248:7",
													"nodeType": "YulBlock",
													"src": "8409:248:7",
													"statements": [
														{
															"nativeSrc": "8419:26:7",
															"nodeType": "YulAssignment",
															"src": "8419:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8431:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8431:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8442:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8442:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8427:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8427:3:7"
																},
																"nativeSrc": "8427:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8427:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8419:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8419:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8466:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8466:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8477:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8477:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8462:3:7"
																		},
																		"nativeSrc": "8462:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8485:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8485:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8491:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8481:3:7"
																		},
																		"nativeSrc": "8481:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8455:6:7"
																},
																"nativeSrc": "8455:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8455:47:7"
															},
															"nativeSrc": "8455:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8455:47:7"
														},
														{
															"nativeSrc": "8511:139:7",
															"nodeType": "YulAssignment",
															"src": "8511:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8645:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8645:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8519:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8519:124:7"
																},
																"nativeSrc": "8519:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8519:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8511:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8238:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8389:9:7",
														"nodeType": "YulTypedName",
														"src": "8389:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8404:4:7",
														"nodeType": "YulTypedName",
														"src": "8404:4:7",
														"type": ""
													}
												],
												"src": "8238:419:7"
											},
											{
												"body": {
													"nativeSrc": "8691:152:7",
													"nodeType": "YulBlock",
													"src": "8691:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8708:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8708:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8711:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8711:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8701:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8701:6:7"
																},
																"nativeSrc": "8701:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8701:88:7"
															},
															"nativeSrc": "8701:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8701:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8805:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8805:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8808:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8808:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8798:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8798:6:7"
																},
																"nativeSrc": "8798:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8798:15:7"
															},
															"nativeSrc": "8798:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8798:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8829:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8829:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8832:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8832:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8822:6:7"
																},
																"nativeSrc": "8822:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8822:15:7"
															},
															"nativeSrc": "8822:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8822:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8663:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8663:180:7"
											},
											{
												"body": {
													"nativeSrc": "8897:362:7",
													"nodeType": "YulBlock",
													"src": "8897:362:7",
													"statements": [
														{
															"nativeSrc": "8907:25:7",
															"nodeType": "YulAssignment",
															"src": "8907:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8930:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8930:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8912:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8912:17:7"
																},
																"nativeSrc": "8912:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8912:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8907:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8907:1:7"
																}
															]
														},
														{
															"nativeSrc": "8941:25:7",
															"nodeType": "YulAssignment",
															"src": "8941:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8964:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8964:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8946:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8946:17:7"
																},
																"nativeSrc": "8946:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8946:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8941:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8941:1:7"
																}
															]
														},
														{
															"nativeSrc": "8975:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8975:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8998:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8998:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9001:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9001:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8994:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8994:3:7"
																},
																"nativeSrc": "8994:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8994:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8979:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8979:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9012:41:7",
															"nodeType": "YulAssignment",
															"src": "9012:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9041:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9041:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9023:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9023:17:7"
																},
																"nativeSrc": "9023:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9023:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9012:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9012:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9230:22:7",
																"nodeType": "YulBlock",
																"src": "9230:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9232:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9232:16:7"
																			},
																			"nativeSrc": "9232:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9232:18:7"
																		},
																		"nativeSrc": "9232:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9232:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9163:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9163:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9156:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9156:6:7"
																				},
																				"nativeSrc": "9156:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9156:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9186:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9186:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9193:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9193:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9202:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9202:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9189:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9189:3:7"
																						},
																						"nativeSrc": "9189:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9189:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9183:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9183:2:7"
																				},
																				"nativeSrc": "9183:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9183:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9136:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9136:2:7"
																		},
																		"nativeSrc": "9136:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9136:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9116:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:7"
																},
																"nativeSrc": "9116:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9116:113:7"
															},
															"nativeSrc": "9113:139:7",
															"nodeType": "YulIf",
															"src": "9113:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8849:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8880:1:7",
														"nodeType": "YulTypedName",
														"src": "8880:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8883:1:7",
														"nodeType": "YulTypedName",
														"src": "8883:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8889:7:7",
														"nodeType": "YulTypedName",
														"src": "8889:7:7",
														"type": ""
													}
												],
												"src": "8849:410:7"
											},
											{
												"body": {
													"nativeSrc": "9293:152:7",
													"nodeType": "YulBlock",
													"src": "9293:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9310:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9310:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9313:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9313:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9303:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9303:6:7"
																},
																"nativeSrc": "9303:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9303:88:7"
															},
															"nativeSrc": "9303:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9303:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9407:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9407:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9410:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9410:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9400:6:7"
																},
																"nativeSrc": "9400:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9400:15:7"
															},
															"nativeSrc": "9400:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9400:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9431:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9431:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9434:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9434:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9424:6:7"
																},
																"nativeSrc": "9424:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9424:15:7"
															},
															"nativeSrc": "9424:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9424:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9265:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9265:180:7"
											},
											{
												"body": {
													"nativeSrc": "9493:143:7",
													"nodeType": "YulBlock",
													"src": "9493:143:7",
													"statements": [
														{
															"nativeSrc": "9503:25:7",
															"nodeType": "YulAssignment",
															"src": "9503:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9526:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9526:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9508:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9508:17:7"
																},
																"nativeSrc": "9508:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9508:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9503:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9503:1:7"
																}
															]
														},
														{
															"nativeSrc": "9537:25:7",
															"nodeType": "YulAssignment",
															"src": "9537:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9560:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9560:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9542:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9542:17:7"
																},
																"nativeSrc": "9542:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9542:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9537:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9537:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9584:22:7",
																"nodeType": "YulBlock",
																"src": "9584:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9586:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9586:16:7"
																			},
																			"nativeSrc": "9586:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9586:18:7"
																		},
																		"nativeSrc": "9586:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9586:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9581:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9581:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9574:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9574:6:7"
																},
																"nativeSrc": "9574:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9574:9:7"
															},
															"nativeSrc": "9571:35:7",
															"nodeType": "YulIf",
															"src": "9571:35:7"
														},
														{
															"nativeSrc": "9616:14:7",
															"nodeType": "YulAssignment",
															"src": "9616:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9625:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9625:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9628:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9628:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9621:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:7"
																},
																"nativeSrc": "9621:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9621:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9616:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9616:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9451:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9482:1:7",
														"nodeType": "YulTypedName",
														"src": "9482:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9485:1:7",
														"nodeType": "YulTypedName",
														"src": "9485:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9491:1:7",
														"nodeType": "YulTypedName",
														"src": "9491:1:7",
														"type": ""
													}
												],
												"src": "9451:185:7"
											},
											{
												"body": {
													"nativeSrc": "9687:149:7",
													"nodeType": "YulBlock",
													"src": "9687:149:7",
													"statements": [
														{
															"nativeSrc": "9697:25:7",
															"nodeType": "YulAssignment",
															"src": "9697:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9720:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9720:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9702:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9702:17:7"
																},
																"nativeSrc": "9702:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9702:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9697:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9697:1:7"
																}
															]
														},
														{
															"nativeSrc": "9731:25:7",
															"nodeType": "YulAssignment",
															"src": "9731:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9754:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9754:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9736:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9736:17:7"
																},
																"nativeSrc": "9736:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9736:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9731:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9731:1:7"
																}
															]
														},
														{
															"nativeSrc": "9765:17:7",
															"nodeType": "YulAssignment",
															"src": "9765:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9777:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9777:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9780:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9780:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9773:3:7"
																},
																"nativeSrc": "9773:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9773:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9765:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9765:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9807:22:7",
																"nodeType": "YulBlock",
																"src": "9807:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9809:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9809:16:7"
																			},
																			"nativeSrc": "9809:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9809:18:7"
																		},
																		"nativeSrc": "9809:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9809:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9798:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9798:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9804:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9804:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9795:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9795:2:7"
																},
																"nativeSrc": "9795:11:7",
																"nodeType": "YulFunctionCall",
																"src": "9795:11:7"
															},
															"nativeSrc": "9792:37:7",
															"nodeType": "YulIf",
															"src": "9792:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9642:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9673:1:7",
														"nodeType": "YulTypedName",
														"src": "9673:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9676:1:7",
														"nodeType": "YulTypedName",
														"src": "9676:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9682:4:7",
														"nodeType": "YulTypedName",
														"src": "9682:4:7",
														"type": ""
													}
												],
												"src": "9642:194:7"
											},
											{
												"body": {
													"nativeSrc": "9996:288:7",
													"nodeType": "YulBlock",
													"src": "9996:288:7",
													"statements": [
														{
															"nativeSrc": "10006:26:7",
															"nodeType": "YulAssignment",
															"src": "10006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10018:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10018:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10029:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10029:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10014:3:7"
																},
																"nativeSrc": "10014:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10006:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10086:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10086:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10099:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10099:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10110:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10110:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10095:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10095:3:7"
																		},
																		"nativeSrc": "10095:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10095:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10042:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10042:43:7"
																},
																"nativeSrc": "10042:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10042:71:7"
															},
															"nativeSrc": "10042:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10042:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10167:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10167:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10180:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10180:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10191:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10191:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10176:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10176:3:7"
																		},
																		"nativeSrc": "10176:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10176:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10123:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10123:43:7"
																},
																"nativeSrc": "10123:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10123:72:7"
															},
															"nativeSrc": "10123:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10123:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10249:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10249:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10262:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10262:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10273:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10273:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10258:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10258:3:7"
																		},
																		"nativeSrc": "10258:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10258:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10205:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10205:43:7"
																},
																"nativeSrc": "10205:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10205:72:7"
															},
															"nativeSrc": "10205:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10205:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9842:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9952:9:7",
														"nodeType": "YulTypedName",
														"src": "9952:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9964:6:7",
														"nodeType": "YulTypedName",
														"src": "9964:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9972:6:7",
														"nodeType": "YulTypedName",
														"src": "9972:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9980:6:7",
														"nodeType": "YulTypedName",
														"src": "9980:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9991:4:7",
														"nodeType": "YulTypedName",
														"src": "9991:4:7",
														"type": ""
													}
												],
												"src": "9842:442:7"
											},
											{
												"body": {
													"nativeSrc": "10330:76:7",
													"nodeType": "YulBlock",
													"src": "10330:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10384:16:7",
																"nodeType": "YulBlock",
																"src": "10384:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10393:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10393:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10396:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10396:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10386:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10386:6:7"
																			},
																			"nativeSrc": "10386:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10386:12:7"
																		},
																		"nativeSrc": "10386:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10386:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10353:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10353:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10375:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10375:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10360:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "10360:14:7"
																				},
																				"nativeSrc": "10360:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10360:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10350:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10350:2:7"
																		},
																		"nativeSrc": "10350:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10350:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10343:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:7"
																},
																"nativeSrc": "10343:40:7",
																"nodeType": "YulFunctionCall",
																"src": "10343:40:7"
															},
															"nativeSrc": "10340:60:7",
															"nodeType": "YulIf",
															"src": "10340:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10290:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10323:5:7",
														"nodeType": "YulTypedName",
														"src": "10323:5:7",
														"type": ""
													}
												],
												"src": "10290:116:7"
											},
											{
												"body": {
													"nativeSrc": "10472:77:7",
													"nodeType": "YulBlock",
													"src": "10472:77:7",
													"statements": [
														{
															"nativeSrc": "10482:22:7",
															"nodeType": "YulAssignment",
															"src": "10482:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10497:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10491:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10491:5:7"
																},
																"nativeSrc": "10491:13:7",
																"nodeType": "YulFunctionCall",
																"src": "10491:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10482:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10482:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10537:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10537:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10513:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "10513:23:7"
																},
																"nativeSrc": "10513:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10513:30:7"
															},
															"nativeSrc": "10513:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10513:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10412:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10450:6:7",
														"nodeType": "YulTypedName",
														"src": "10450:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10458:3:7",
														"nodeType": "YulTypedName",
														"src": "10458:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10466:5:7",
														"nodeType": "YulTypedName",
														"src": "10466:5:7",
														"type": ""
													}
												],
												"src": "10412:137:7"
											},
											{
												"body": {
													"nativeSrc": "10629:271:7",
													"nodeType": "YulBlock",
													"src": "10629:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10675:83:7",
																"nodeType": "YulBlock",
																"src": "10675:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10677:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10677:77:7"
																			},
																			"nativeSrc": "10677:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10677:79:7"
																		},
																		"nativeSrc": "10677:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10677:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10650:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10650:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10659:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10659:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10646:3:7"
																		},
																		"nativeSrc": "10646:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10646:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10671:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10671:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10642:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10642:3:7"
																},
																"nativeSrc": "10642:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10642:32:7"
															},
															"nativeSrc": "10639:119:7",
															"nodeType": "YulIf",
															"src": "10639:119:7"
														},
														{
															"nativeSrc": "10768:125:7",
															"nodeType": "YulBlock",
															"src": "10768:125:7",
															"statements": [
																{
																	"nativeSrc": "10783:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10783:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10797:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10797:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10787:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10787:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10812:71:7",
																	"nodeType": "YulAssignment",
																	"src": "10812:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10855:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10855:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10866:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10866:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10851:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10851:3:7"
																				},
																				"nativeSrc": "10851:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10851:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10875:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10875:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10822:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "10822:28:7"
																		},
																		"nativeSrc": "10822:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10822:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10812:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10812:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10555:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10599:9:7",
														"nodeType": "YulTypedName",
														"src": "10599:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10610:7:7",
														"nodeType": "YulTypedName",
														"src": "10610:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10622:6:7",
														"nodeType": "YulTypedName",
														"src": "10622:6:7",
														"type": ""
													}
												],
												"src": "10555:345:7"
											},
											{
												"body": {
													"nativeSrc": "11012:63:7",
													"nodeType": "YulBlock",
													"src": "11012:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11034:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11034:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11042:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11042:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11030:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:7"
																		},
																		"nativeSrc": "11030:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11030:14:7"
																	},
																	{
																		"hexValue": "465241207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "11046:21:7",
																		"nodeType": "YulLiteral",
																		"src": "11046:21:7",
																		"type": "",
																		"value": "FRA transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11023:6:7"
																},
																"nativeSrc": "11023:45:7",
																"nodeType": "YulFunctionCall",
																"src": "11023:45:7"
															},
															"nativeSrc": "11023:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "11023:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd",
												"nativeSrc": "10906:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11004:6:7",
														"nodeType": "YulTypedName",
														"src": "11004:6:7",
														"type": ""
													}
												],
												"src": "10906:169:7"
											},
											{
												"body": {
													"nativeSrc": "11227:220:7",
													"nodeType": "YulBlock",
													"src": "11227:220:7",
													"statements": [
														{
															"nativeSrc": "11237:74:7",
															"nodeType": "YulAssignment",
															"src": "11237:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11303:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11303:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11308:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11244:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11244:58:7"
																},
																"nativeSrc": "11244:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11244:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11237:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11237:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11409:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11409:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd",
																	"nativeSrc": "11320:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11320:88:7"
																},
																"nativeSrc": "11320:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11320:93:7"
															},
															"nativeSrc": "11320:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11320:93:7"
														},
														{
															"nativeSrc": "11422:19:7",
															"nodeType": "YulAssignment",
															"src": "11422:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11433:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11433:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11438:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11429:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11429:3:7"
																},
																"nativeSrc": "11429:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11429:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11422:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11081:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11215:3:7",
														"nodeType": "YulTypedName",
														"src": "11215:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11223:3:7",
														"nodeType": "YulTypedName",
														"src": "11223:3:7",
														"type": ""
													}
												],
												"src": "11081:366:7"
											},
											{
												"body": {
													"nativeSrc": "11624:248:7",
													"nodeType": "YulBlock",
													"src": "11624:248:7",
													"statements": [
														{
															"nativeSrc": "11634:26:7",
															"nodeType": "YulAssignment",
															"src": "11634:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11646:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11646:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11657:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11657:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11642:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11642:3:7"
																},
																"nativeSrc": "11642:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11642:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11634:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11634:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11681:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11681:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11692:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11692:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11677:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11677:3:7"
																		},
																		"nativeSrc": "11677:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11677:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11700:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11700:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11706:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11706:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11696:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11696:3:7"
																		},
																		"nativeSrc": "11696:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11696:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11670:6:7"
																},
																"nativeSrc": "11670:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11670:47:7"
															},
															"nativeSrc": "11670:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11670:47:7"
														},
														{
															"nativeSrc": "11726:139:7",
															"nodeType": "YulAssignment",
															"src": "11726:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11860:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11860:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11734:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11734:124:7"
																},
																"nativeSrc": "11734:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11734:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11726:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11726:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11453:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11604:9:7",
														"nodeType": "YulTypedName",
														"src": "11604:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11619:4:7",
														"nodeType": "YulTypedName",
														"src": "11619:4:7",
														"type": ""
													}
												],
												"src": "11453:419:7"
											},
											{
												"body": {
													"nativeSrc": "11984:58:7",
													"nodeType": "YulBlock",
													"src": "11984:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12006:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12006:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12014:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12014:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12002:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:7"
																		},
																		"nativeSrc": "12002:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12002:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820455448",
																		"kind": "string",
																		"nativeSrc": "12018:16:7",
																		"nodeType": "YulLiteral",
																		"src": "12018:16:7",
																		"type": "",
																		"value": "Not enough ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11995:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:7"
																},
																"nativeSrc": "11995:40:7",
																"nodeType": "YulFunctionCall",
																"src": "11995:40:7"
															},
															"nativeSrc": "11995:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "11995:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
												"nativeSrc": "11878:164:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11976:6:7",
														"nodeType": "YulTypedName",
														"src": "11976:6:7",
														"type": ""
													}
												],
												"src": "11878:164:7"
											},
											{
												"body": {
													"nativeSrc": "12194:220:7",
													"nodeType": "YulBlock",
													"src": "12194:220:7",
													"statements": [
														{
															"nativeSrc": "12204:74:7",
															"nodeType": "YulAssignment",
															"src": "12204:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12270:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12270:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12275:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12275:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12211:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12211:58:7"
																},
																"nativeSrc": "12211:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12211:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12204:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12204:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12376:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12376:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
																	"nativeSrc": "12287:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12287:88:7"
																},
																"nativeSrc": "12287:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12287:93:7"
															},
															"nativeSrc": "12287:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12287:93:7"
														},
														{
															"nativeSrc": "12389:19:7",
															"nodeType": "YulAssignment",
															"src": "12389:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12400:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12400:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12396:3:7"
																},
																"nativeSrc": "12396:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12396:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12389:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12389:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12048:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12182:3:7",
														"nodeType": "YulTypedName",
														"src": "12182:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12190:3:7",
														"nodeType": "YulTypedName",
														"src": "12190:3:7",
														"type": ""
													}
												],
												"src": "12048:366:7"
											},
											{
												"body": {
													"nativeSrc": "12591:248:7",
													"nodeType": "YulBlock",
													"src": "12591:248:7",
													"statements": [
														{
															"nativeSrc": "12601:26:7",
															"nodeType": "YulAssignment",
															"src": "12601:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12613:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12613:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12624:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12624:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12609:3:7"
																},
																"nativeSrc": "12609:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12609:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12601:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12601:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12648:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12648:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12659:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12659:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12644:3:7"
																		},
																		"nativeSrc": "12644:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12644:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12667:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12667:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12673:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12673:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12663:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12663:3:7"
																		},
																		"nativeSrc": "12663:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12663:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12637:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:7"
																},
																"nativeSrc": "12637:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12637:47:7"
															},
															"nativeSrc": "12637:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12637:47:7"
														},
														{
															"nativeSrc": "12693:139:7",
															"nodeType": "YulAssignment",
															"src": "12693:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12827:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12827:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12701:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12701:124:7"
																},
																"nativeSrc": "12701:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12701:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12693:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12693:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12420:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12571:9:7",
														"nodeType": "YulTypedName",
														"src": "12571:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12586:4:7",
														"nodeType": "YulTypedName",
														"src": "12586:4:7",
														"type": ""
													}
												],
												"src": "12420:419:7"
											},
											{
												"body": {
													"nativeSrc": "12971:206:7",
													"nodeType": "YulBlock",
													"src": "12971:206:7",
													"statements": [
														{
															"nativeSrc": "12981:26:7",
															"nodeType": "YulAssignment",
															"src": "12981:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12993:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12993:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13004:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13004:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12989:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12989:3:7"
																},
																"nativeSrc": "12989:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12989:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12981:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12981:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13061:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13061:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13074:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13074:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13085:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13085:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13070:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13070:3:7"
																		},
																		"nativeSrc": "13070:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13070:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13017:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13017:43:7"
																},
																"nativeSrc": "13017:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13017:71:7"
															},
															"nativeSrc": "13017:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13017:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13142:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13142:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13155:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13155:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13166:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13166:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13151:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13151:3:7"
																		},
																		"nativeSrc": "13151:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13151:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13098:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13098:43:7"
																},
																"nativeSrc": "13098:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13098:72:7"
															},
															"nativeSrc": "13098:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13098:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12845:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12935:9:7",
														"nodeType": "YulTypedName",
														"src": "12935:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12947:6:7",
														"nodeType": "YulTypedName",
														"src": "12947:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12955:6:7",
														"nodeType": "YulTypedName",
														"src": "12955:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12966:4:7",
														"nodeType": "YulTypedName",
														"src": "12966:4:7",
														"type": ""
													}
												],
												"src": "12845:332:7"
											},
											{
												"body": {
													"nativeSrc": "13246:80:7",
													"nodeType": "YulBlock",
													"src": "13246:80:7",
													"statements": [
														{
															"nativeSrc": "13256:22:7",
															"nodeType": "YulAssignment",
															"src": "13256:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13271:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13265:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13265:5:7"
																},
																"nativeSrc": "13265:13:7",
																"nodeType": "YulFunctionCall",
																"src": "13265:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13256:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13256:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13314:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13314:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13287:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "13287:26:7"
																},
																"nativeSrc": "13287:33:7",
																"nodeType": "YulFunctionCall",
																"src": "13287:33:7"
															},
															"nativeSrc": "13287:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "13287:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13183:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13224:6:7",
														"nodeType": "YulTypedName",
														"src": "13224:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13232:3:7",
														"nodeType": "YulTypedName",
														"src": "13232:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13240:5:7",
														"nodeType": "YulTypedName",
														"src": "13240:5:7",
														"type": ""
													}
												],
												"src": "13183:143:7"
											},
											{
												"body": {
													"nativeSrc": "13409:274:7",
													"nodeType": "YulBlock",
													"src": "13409:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13455:83:7",
																"nodeType": "YulBlock",
																"src": "13455:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13457:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "13457:77:7"
																			},
																			"nativeSrc": "13457:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13457:79:7"
																		},
																		"nativeSrc": "13457:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13457:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13430:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13430:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13439:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13439:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13426:3:7"
																		},
																		"nativeSrc": "13426:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13426:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13451:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13451:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13422:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13422:3:7"
																},
																"nativeSrc": "13422:32:7",
																"nodeType": "YulFunctionCall",
																"src": "13422:32:7"
															},
															"nativeSrc": "13419:119:7",
															"nodeType": "YulIf",
															"src": "13419:119:7"
														},
														{
															"nativeSrc": "13548:128:7",
															"nodeType": "YulBlock",
															"src": "13548:128:7",
															"statements": [
																{
																	"nativeSrc": "13563:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13563:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13577:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13577:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13567:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13567:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13592:74:7",
																	"nodeType": "YulAssignment",
																	"src": "13592:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13638:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13638:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13649:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13649:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13634:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13634:3:7"
																				},
																				"nativeSrc": "13634:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13634:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13658:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13658:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13602:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "13602:31:7"
																		},
																		"nativeSrc": "13602:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13602:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13592:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13592:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13332:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13379:9:7",
														"nodeType": "YulTypedName",
														"src": "13379:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13390:7:7",
														"nodeType": "YulTypedName",
														"src": "13390:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13402:6:7",
														"nodeType": "YulTypedName",
														"src": "13402:6:7",
														"type": ""
													}
												],
												"src": "13332:351:7"
											},
											{
												"body": {
													"nativeSrc": "13733:147:7",
													"nodeType": "YulBlock",
													"src": "13733:147:7",
													"statements": [
														{
															"nativeSrc": "13743:25:7",
															"nodeType": "YulAssignment",
															"src": "13743:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13766:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13766:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13748:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13748:17:7"
																},
																"nativeSrc": "13748:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13748:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13743:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13743:1:7"
																}
															]
														},
														{
															"nativeSrc": "13777:25:7",
															"nodeType": "YulAssignment",
															"src": "13777:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13800:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13800:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13782:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13782:17:7"
																},
																"nativeSrc": "13782:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13782:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13777:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13777:1:7"
																}
															]
														},
														{
															"nativeSrc": "13811:16:7",
															"nodeType": "YulAssignment",
															"src": "13811:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13822:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13822:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13825:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13825:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13818:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13818:3:7"
																},
																"nativeSrc": "13818:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13818:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13811:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13851:22:7",
																"nodeType": "YulBlock",
																"src": "13851:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13853:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13853:16:7"
																			},
																			"nativeSrc": "13853:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13853:18:7"
																		},
																		"nativeSrc": "13853:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13853:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13843:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13843:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13846:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13846:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13840:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13840:2:7"
																},
																"nativeSrc": "13840:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13840:10:7"
															},
															"nativeSrc": "13837:36:7",
															"nodeType": "YulIf",
															"src": "13837:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13689:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13720:1:7",
														"nodeType": "YulTypedName",
														"src": "13720:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13723:1:7",
														"nodeType": "YulTypedName",
														"src": "13723:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13729:3:7",
														"nodeType": "YulTypedName",
														"src": "13729:3:7",
														"type": ""
													}
												],
												"src": "13689:191:7"
											},
											{
												"body": {
													"nativeSrc": "14040:288:7",
													"nodeType": "YulBlock",
													"src": "14040:288:7",
													"statements": [
														{
															"nativeSrc": "14050:26:7",
															"nodeType": "YulAssignment",
															"src": "14050:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14062:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14062:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14073:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14073:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14058:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:7"
																},
																"nativeSrc": "14058:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14058:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14050:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14050:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14130:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14130:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14143:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14143:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14154:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14154:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14139:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14139:3:7"
																		},
																		"nativeSrc": "14139:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14139:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14086:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14086:43:7"
																},
																"nativeSrc": "14086:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14086:71:7"
															},
															"nativeSrc": "14086:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14086:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14211:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14211:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14224:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14224:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14235:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14235:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14220:3:7"
																		},
																		"nativeSrc": "14220:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14220:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14167:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14167:43:7"
																},
																"nativeSrc": "14167:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14167:72:7"
															},
															"nativeSrc": "14167:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14167:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14293:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14293:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14306:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14306:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14317:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14317:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14302:3:7"
																		},
																		"nativeSrc": "14302:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14302:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14249:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14249:43:7"
																},
																"nativeSrc": "14249:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14249:72:7"
															},
															"nativeSrc": "14249:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14249:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13886:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13996:9:7",
														"nodeType": "YulTypedName",
														"src": "13996:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14008:6:7",
														"nodeType": "YulTypedName",
														"src": "14008:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14016:6:7",
														"nodeType": "YulTypedName",
														"src": "14016:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14024:6:7",
														"nodeType": "YulTypedName",
														"src": "14024:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14035:4:7",
														"nodeType": "YulTypedName",
														"src": "14035:4:7",
														"type": ""
													}
												],
												"src": "13886:442:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPriceOracle_$943_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPriceOracle_$943_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPriceOracle_$943_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPriceOracle_$943__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPriceOracle_$943_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Send ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRA transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610122575f3560e01c8063715018a61161009f578063b4eae1cb11610063578063b4eae1cb146103b5578063c752b47e146103df578063d9c37512146103f5578063dd62ed3e1461041f578063f2fde38b1461045b57610129565b8063715018a6146102e557806373d49515146102fb5780638da5cb5b1461032557806395d89b411461034f578063a9059cbb1461037957610129565b806323b872dd116100e657806323b872dd146101f15780632630c12f1461022d578063313ce5671461025757806342966c681461028157806370a08231146102a957610129565b806305268cff1461012d57806306fdde0314610157578063095ea7b3146101815780631249c58b146101bd57806318160ddd146101c757610129565b3661012957005b5f5ffd5b348015610138575f5ffd5b50610141610483565b60405161014e91906114b8565b60405180910390f35b348015610162575f5ffd5b5061016b6104a8565b6040516101789190611541565b60405180910390f35b34801561018c575f5ffd5b506101a760048036038101906101a291906115c2565b610538565b6040516101b4919061161a565b60405180910390f35b6101c561055a565b005b3480156101d2575f5ffd5b506101db61070a565b6040516101e89190611642565b60405180910390f35b3480156101fc575f5ffd5b506102176004803603810190610212919061165b565b610713565b604051610224919061161a565b60405180910390f35b348015610238575f5ffd5b50610241610741565b60405161024e9190611706565b60405180910390f35b348015610262575f5ffd5b5061026b610766565b604051610278919061173a565b60405180910390f35b34801561028c575f5ffd5b506102a760048036038101906102a29190611753565b61076e565b005b3480156102b4575f5ffd5b506102cf60048036038101906102ca919061177e565b610962565b6040516102dc9190611642565b60405180910390f35b3480156102f0575f5ffd5b506102f96109a7565b005b348015610306575f5ffd5b5061030f6109ba565b60405161031c9190611642565b60405180910390f35b348015610330575f5ffd5b506103396109c2565b60405161034691906114b8565b60405180910390f35b34801561035a575f5ffd5b506103636109ea565b6040516103709190611541565b60405180910390f35b348015610384575f5ffd5b5061039f600480360381019061039a91906115c2565b610a7a565b6040516103ac919061161a565b60405180910390f35b3480156103c0575f5ffd5b506103c9610a9c565b6040516103d69190611642565b60405180910390f35b3480156103ea575f5ffd5b506103f3610aa2565b005b348015610400575f5ffd5b50610409610ba1565b6040516104169190611642565b60405180910390f35b34801561042a575f5ffd5b50610445600480360381019061044091906117a9565b610ba7565b6040516104529190611642565b60405180910390f35b348015610466575f5ffd5b50610481600480360381019061047c919061177e565b610c29565b005b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600380546104b790611814565b80601f01602080910402602001604051908101604052809291908181526020018280546104e390611814565b801561052e5780601f106105055761010080835404028352916020019161052e565b820191905f5260205f20905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b5f5f610542610cad565b905061054f818585610cb4565b600191505092915050565b5f341161059c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105939061188e565b60405180910390fd5b6105a4610aa2565b5f670de0b6b3a76400006305f5e100346105be91906118d9565b6105c89190611947565b90505f612710600654836105dc91906118d9565b6105e69190611947565b90505f81836105f59190611977565b90505f6305f5e100670de0b6b3a76400008361061191906118d9565b61061b9190611947565b905060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161067b939291906119aa565b6020604051808303815f875af1158015610697573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106bb9190611a09565b6106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190611a7e565b60405180910390fd5b6107043385610cc6565b50505050565b5f600254905090565b5f5f61071d610cad565b905061072a858285610d45565b610735858585610dd8565b60019150509392505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b6107783382610ec8565b610780610aa2565b5f6127106006548361079291906118d9565b61079c9190611947565b90505f81836107ab9190611977565b90505f6305f5e100670de0b6b3a7640000846107c791906118d9565b6107d19190611947565b90505f6305f5e100670de0b6b3a7640000846107ed91906118d9565b6107f79190611947565b90508147101561083c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083390611ae6565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610898929190611b04565b6020604051808303815f875af11580156108b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108d89190611a09565b610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611a7e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561095a573d5f5f3e3d5ffd5b505050505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109af610f47565b6109b85f610fce565b565b6305f5e10081565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109f990611814565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2590611814565b8015610a705780601f10610a4757610100808354040283529160200191610a70565b820191905f5260205f20905b815481529060010190602001808311610a5357829003601f168201915b5050505050905090565b5f5f610a84610cad565b9050610a91818585610dd8565b600191505092915050565b60065481565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b319190611b3f565b90506305f5e100811115610b6a576113886006541115610b6557606460065f828254610b5d9190611977565b925050819055505b610b9e565b6305f5e100811015610b9d5761251c6006541015610b9c57606460065f828254610b949190611b6a565b925050819055505b5b5b50565b61271081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610c31610f47565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c9891906114b8565b60405180910390fd5b610caa81610fce565b50565b5f33905090565b610cc18383836001611091565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d2d91906114b8565b60405180910390fd5b610d415f8383611260565b5050565b5f610d508484610ba7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610dd25781811015610dc3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610dba93929190611b9d565b60405180910390fd5b610dd184848484035f611091565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e48575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e3f91906114b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610eaf91906114b8565b60405180910390fd5b610ec3838383611260565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f38575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f2f91906114b8565b60405180910390fd5b610f43825f83611260565b5050565b610f4f610cad565b73ffffffffffffffffffffffffffffffffffffffff16610f6d6109c2565b73ffffffffffffffffffffffffffffffffffffffff1614610fcc57610f90610cad565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fc391906114b8565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611101575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110f891906114b8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611171575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161116891906114b8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561125a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112519190611642565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b0578060025f8282546112a49190611b6a565b9250508190555061137e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611339578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161133093929190611b9d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113c5578060025f828254039250508190555061140f565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161146c9190611642565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114a282611479565b9050919050565b6114b281611498565b82525050565b5f6020820190506114cb5f8301846114a9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611513826114d1565b61151d81856114db565b935061152d8185602086016114eb565b611536816114f9565b840191505092915050565b5f6020820190508181035f8301526115598184611509565b905092915050565b5f5ffd5b61156e81611498565b8114611578575f5ffd5b50565b5f8135905061158981611565565b92915050565b5f819050919050565b6115a18161158f565b81146115ab575f5ffd5b50565b5f813590506115bc81611598565b92915050565b5f5f604083850312156115d8576115d7611561565b5b5f6115e58582860161157b565b92505060206115f6858286016115ae565b9150509250929050565b5f8115159050919050565b61161481611600565b82525050565b5f60208201905061162d5f83018461160b565b92915050565b61163c8161158f565b82525050565b5f6020820190506116555f830184611633565b92915050565b5f5f5f6060848603121561167257611671611561565b5b5f61167f8682870161157b565b93505060206116908682870161157b565b92505060406116a1868287016115ae565b9150509250925092565b5f819050919050565b5f6116ce6116c96116c484611479565b6116ab565b611479565b9050919050565b5f6116df826116b4565b9050919050565b5f6116f0826116d5565b9050919050565b611700816116e6565b82525050565b5f6020820190506117195f8301846116f7565b92915050565b5f60ff82169050919050565b6117348161171f565b82525050565b5f60208201905061174d5f83018461172b565b92915050565b5f6020828403121561176857611767611561565b5b5f611775848285016115ae565b91505092915050565b5f6020828403121561179357611792611561565b5b5f6117a08482850161157b565b91505092915050565b5f5f604083850312156117bf576117be611561565b5b5f6117cc8582860161157b565b92505060206117dd8582860161157b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061182b57607f821691505b60208210810361183e5761183d6117e7565b5b50919050565b7f53656e64204554480000000000000000000000000000000000000000000000005f82015250565b5f6118786008836114db565b915061188382611844565b602082019050919050565b5f6020820190508181035f8301526118a58161186c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118e38261158f565b91506118ee8361158f565b92508282026118fc8161158f565b91508282048414831517611913576119126118ac565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119518261158f565b915061195c8361158f565b92508261196c5761196b61191a565b5b828204905092915050565b5f6119818261158f565b915061198c8361158f565b92508282039050818111156119a4576119a36118ac565b5b92915050565b5f6060820190506119bd5f8301866114a9565b6119ca60208301856114a9565b6119d76040830184611633565b949350505050565b6119e881611600565b81146119f2575f5ffd5b50565b5f81519050611a03816119df565b92915050565b5f60208284031215611a1e57611a1d611561565b5b5f611a2b848285016119f5565b91505092915050565b7f465241207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f611a686013836114db565b9150611a7382611a34565b602082019050919050565b5f6020820190508181035f830152611a9581611a5c565b9050919050565b7f4e6f7420656e6f756768204554480000000000000000000000000000000000005f82015250565b5f611ad0600e836114db565b9150611adb82611a9c565b602082019050919050565b5f6020820190508181035f830152611afd81611ac4565b9050919050565b5f604082019050611b175f8301856114a9565b611b246020830184611633565b9392505050565b5f81519050611b3981611598565b92915050565b5f60208284031215611b5457611b53611561565b5b5f611b6184828501611b2b565b91505092915050565b5f611b748261158f565b9150611b7f8361158f565b9250828201905080821115611b9757611b966118ac565b5b92915050565b5f606082019050611bb05f8301866114a9565b611bbd6020830185611633565b611bca6040830184611633565b94935050505056fea2646970667358221220bb1d7e8f4852d2602de4d81ec99548a6fecfc74b696b49c5f1c3771f911468ca64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x122 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xB4EAE1CB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB4EAE1CB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xC752B47E EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xD9C37512 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x45B JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x73D49515 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A9 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x5268CFF EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C7 JUMPI PUSH2 0x129 JUMP JUMPDEST CALLDATASIZE PUSH2 0x129 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x165B JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x9A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0xAA2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x505 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x542 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP PUSH2 0x54F DUP2 DUP6 DUP6 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A4 PUSH2 0xAA2 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH4 0x5F5E100 CALLVALUE PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x6 SLOAD DUP4 PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x5F5E100 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F1 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x704 CALLER DUP6 PUSH2 0xCC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x71D PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP PUSH2 0x72A DUP6 DUP3 DUP6 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x735 DUP6 DUP6 DUP6 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x778 CALLER DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x780 PUSH2 0xAA2 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x6 SLOAD DUP4 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x5F5E100 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x5F5E100 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP2 SELFBALANCE LT ISZERO PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x95A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9AF PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x9B8 PUSH0 PUSH2 0xFCE JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA25 SWAP1 PUSH2 0x1814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA70 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA70 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA53 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA84 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP PUSH2 0xA91 DUP2 DUP6 DUP6 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x98D5FDCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP PUSH4 0x5F5E100 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0x1388 PUSH1 0x6 SLOAD GT ISZERO PUSH2 0xB65 JUMPI PUSH1 0x64 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0xB9D JUMPI PUSH2 0x251C PUSH1 0x6 SLOAD LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x64 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC31 PUSH2 0xF47 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0xFCE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCC1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1091 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD41 PUSH0 DUP4 DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD50 DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xDD2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1091 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC3 DUP4 DUP4 DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF38 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF43 DUP3 PUSH0 DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xCAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6D PUSH2 0x9C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH2 0xF90 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1101 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1171 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x125A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x137E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1339 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1330 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x140F JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x146C SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14A2 DUP3 PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x1498 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CB PUSH0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1513 DUP3 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x151D DUP2 DUP6 PUSH2 0x14DB JUMP JUMPDEST SWAP4 POP PUSH2 0x152D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x14F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1559 DUP2 DUP5 PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x156E DUP2 PUSH2 0x1498 JUMP JUMPDEST DUP2 EQ PUSH2 0x1578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1589 DUP2 PUSH2 0x1565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A1 DUP2 PUSH2 0x158F JUMP JUMPDEST DUP2 EQ PUSH2 0x15AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BC DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E5 DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15F6 DUP6 DUP3 DUP7 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1614 DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162D PUSH0 DUP4 ADD DUP5 PUSH2 0x160B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x158F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1655 PUSH0 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1672 JUMPI PUSH2 0x1671 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x167F DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1690 DUP7 DUP3 DUP8 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16A1 DUP7 DUP3 DUP8 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16CE PUSH2 0x16C9 PUSH2 0x16C4 DUP5 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16DF DUP3 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F0 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x16E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1719 PUSH0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1734 DUP2 PUSH2 0x171F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x174D PUSH0 DUP4 ADD DUP5 PUSH2 0x172B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1775 DUP5 DUP3 DUP6 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A0 DUP5 DUP3 DUP6 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17BF JUMPI PUSH2 0x17BE PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17CC DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17DD DUP6 DUP3 DUP7 ADD PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x182B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x17E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6420455448000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1878 PUSH1 0x8 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1883 DUP3 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A5 DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18E3 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x18EE DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18FC DUP2 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x18AC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1951 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x195C DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x196C JUMPI PUSH2 0x196B PUSH2 0x191A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1981 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x198C DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x18AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19BD PUSH0 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x19CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x19D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19E8 DUP2 PUSH2 0x1600 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A03 DUP2 PUSH2 0x19DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1E JUMPI PUSH2 0x1A1D PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2B DUP5 DUP3 DUP6 ADD PUSH2 0x19F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x465241207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A68 PUSH1 0x13 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1A73 DUP3 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A95 DUP2 PUSH2 0x1A5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820455448000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD0 PUSH1 0xE DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADB DUP3 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFD DUP2 PUSH2 0x1AC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B17 PUSH0 DUP4 ADD DUP6 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1B24 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B39 DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x1561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B61 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B74 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7F DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x18AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB0 PUSH0 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x1BBD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x1BCA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1633 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SAR PUSH31 0x8F4852D2602DE4D81EC99548A6FECFC74B696B49C5F1C3771F911468CA6473 PUSH16 0x6C634300081D00330000000000000000 ",
							"sourceMap": "438:2119:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1404:553:6;;;:::i;:::-;;2849:97:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;711:31:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1963:557:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;617:42:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;501:37:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;955:443;;;;;;;;;;;;;:::i;:::-;;570:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;682:23:6;;;;;;;;;;;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1404:553:6:-;1467:1;1455:9;:13;1447:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;1491:10;:8;:10::i;:::-;1512:18;1560:4;656:3;1533:9;:24;;;;:::i;:::-;:31;;;;:::i;:::-;1512:52;;1588:16;608:3;1621:15;;1608:10;:28;;;;:::i;:::-;1607:44;;;;:::i;:::-;1588:63;;1661:16;1693:8;1680:10;:21;;;;:::i;:::-;1661:40;;1711:17;656:3;1743:4;1732:8;:15;;;;:::i;:::-;1731:32;;;;:::i;:::-;1711:52;;1805:8;;;;;;;;;;;1795:32;;;1828:10;1848:4;1855:9;1795:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1774:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;1921:29;1927:10;1939;1921:5;:29::i;:::-;1437:520;;;;1404:553::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;711:31:6:-;;;;;;;;;;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;1963:557:6:-;2012:25;2018:10;2030:6;2012:5;:25::i;:::-;2047:10;:8;:10::i;:::-;2068:16;608:3;2097:15;;2088:6;:24;;;;:::i;:::-;2087:40;;;;:::i;:::-;2068:59;;2137:16;2165:8;2156:6;:17;;;;:::i;:::-;2137:36;;2184:17;656:3;2216:4;2205:8;:15;;;;:::i;:::-;2204:32;;;;:::i;:::-;2184:52;;2246:17;656:3;2278:4;2267:8;:15;;;;:::i;:::-;2266:32;;;;:::i;:::-;2246:52;;2342:9;2317:21;:34;;2309:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2398:8;;;;;;;;;;;2388:28;;;2417:10;2429:9;2388:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2380:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2482:10;2474:28;;:39;2503:9;2474:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:518;;;;1963:557;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;617:42:6:-;656:3;617:42;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;501:37:6:-;;;;:::o;955:443::-;992:13;1008:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;992:38;;656:3;1044:5;:20;1040:352;;;1141:4;1123:15;;:22;1119:83;;;1184:3;1165:15;;:22;;;;;;;:::i;:::-;;;;;;;;1119:83;1040:352;;;656:3;1222:5;:20;1218:174;;;1321:4;1303:15;;:22;1299:83;;;1364:3;1345:15;;:22;;;;;;;:::i;:::-;;;;;;;;1299:83;1218:174;1040:352;982:416;955:443::o;570:41::-;608:3;570:41;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:169::-;782:11;816:6;811:3;804:19;856:4;851:3;847:14;832:29;;698:169;;;;:::o;873:139::-;962:6;957:3;952;946:23;1003:1;994:6;989:3;985:16;978:27;873:139;;;:::o;1018:102::-;1059:6;1110:2;1106:7;1101:2;1094:5;1090:14;1086:28;1076:38;;1018:102;;;:::o;1126:377::-;1214:3;1242:39;1275:5;1242:39;:::i;:::-;1297:71;1361:6;1356:3;1297:71;:::i;:::-;1290:78;;1377:65;1435:6;1430:3;1423:4;1416:5;1412:16;1377:65;:::i;:::-;1467:29;1489:6;1467:29;:::i;:::-;1462:3;1458:39;1451:46;;1218:285;1126:377;;;;:::o;1509:313::-;1622:4;1660:2;1649:9;1645:18;1637:26;;1709:9;1703:4;1699:20;1695:1;1684:9;1680:17;1673:47;1737:78;1810:4;1801:6;1737:78;:::i;:::-;1729:86;;1509:313;;;;:::o;1909:117::-;2018:1;2015;2008:12;2155:122;2228:24;2246:5;2228:24;:::i;:::-;2221:5;2218:35;2208:63;;2267:1;2264;2257:12;2208:63;2155:122;:::o;2283:139::-;2329:5;2367:6;2354:20;2345:29;;2383:33;2410:5;2383:33;:::i;:::-;2283:139;;;;:::o;2428:77::-;2465:7;2494:5;2483:16;;2428:77;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:118::-;3778:24;3796:5;3778:24;:::i;:::-;3773:3;3766:37;3691:118;;:::o;3815:222::-;3908:4;3946:2;3935:9;3931:18;3923:26;;3959:71;4027:1;4016:9;4012:17;4003:6;3959:71;:::i;:::-;3815:222;;;;:::o;4043:619::-;4120:6;4128;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4409:118;4566:2;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4537:118;4043:619;;;;;:::o;4668:60::-;4696:3;4717:5;4710:12;;4668:60;;;:::o;4734:142::-;4784:9;4817:53;4835:34;4844:24;4862:5;4844:24;:::i;:::-;4835:34;:::i;:::-;4817:53;:::i;:::-;4804:66;;4734:142;;;:::o;4882:126::-;4932:9;4965:37;4996:5;4965:37;:::i;:::-;4952:50;;4882:126;;;:::o;5014:146::-;5084:9;5117:37;5148:5;5117:37;:::i;:::-;5104:50;;5014:146;;;:::o;5166:171::-;5273:57;5324:5;5273:57;:::i;:::-;5268:3;5261:70;5166:171;;:::o;5343:262::-;5456:4;5494:2;5483:9;5479:18;5471:26;;5507:91;5595:1;5584:9;5580:17;5571:6;5507:91;:::i;:::-;5343:262;;;;:::o;5611:86::-;5646:7;5686:4;5679:5;5675:16;5664:27;;5611:86;;;:::o;5703:112::-;5786:22;5802:5;5786:22;:::i;:::-;5781:3;5774:35;5703:112;;:::o;5821:214::-;5910:4;5948:2;5937:9;5933:18;5925:26;;5961:67;6025:1;6014:9;6010:17;6001:6;5961:67;:::i;:::-;5821:214;;;;:::o;6041:329::-;6100:6;6149:2;6137:9;6128:7;6124:23;6120:32;6117:119;;;6155:79;;:::i;:::-;6117:119;6275:1;6300:53;6345:7;6336:6;6325:9;6321:22;6300:53;:::i;:::-;6290:63;;6246:117;6041:329;;;;:::o;6376:::-;6435:6;6484:2;6472:9;6463:7;6459:23;6455:32;6452:119;;;6490:79;;:::i;:::-;6452:119;6610:1;6635:53;6680:7;6671:6;6660:9;6656:22;6635:53;:::i;:::-;6625:63;;6581:117;6376:329;;;;:::o;6711:474::-;6779:6;6787;6836:2;6824:9;6815:7;6811:23;6807:32;6804:119;;;6842:79;;:::i;:::-;6804:119;6962:1;6987:53;7032:7;7023:6;7012:9;7008:22;6987:53;:::i;:::-;6977:63;;6933:117;7089:2;7115:53;7160:7;7151:6;7140:9;7136:22;7115:53;:::i;:::-;7105:63;;7060:118;6711:474;;;;;:::o;7191:180::-;7239:77;7236:1;7229:88;7336:4;7333:1;7326:15;7360:4;7357:1;7350:15;7377:320;7421:6;7458:1;7452:4;7448:12;7438:22;;7505:1;7499:4;7495:12;7526:18;7516:81;;7582:4;7574:6;7570:17;7560:27;;7516:81;7644:2;7636:6;7633:14;7613:18;7610:38;7607:84;;7663:18;;:::i;:::-;7607:84;7428:269;7377:320;;;:::o;7703:158::-;7843:10;7839:1;7831:6;7827:14;7820:34;7703:158;:::o;7867:365::-;8009:3;8030:66;8094:1;8089:3;8030:66;:::i;:::-;8023:73;;8105:93;8194:3;8105:93;:::i;:::-;8223:2;8218:3;8214:12;8207:19;;7867:365;;;:::o;8238:419::-;8404:4;8442:2;8431:9;8427:18;8419:26;;8491:9;8485:4;8481:20;8477:1;8466:9;8462:17;8455:47;8519:131;8645:4;8519:131;:::i;:::-;8511:139;;8238:419;;;:::o;8663:180::-;8711:77;8708:1;8701:88;8808:4;8805:1;8798:15;8832:4;8829:1;8822:15;8849:410;8889:7;8912:20;8930:1;8912:20;:::i;:::-;8907:25;;8946:20;8964:1;8946:20;:::i;:::-;8941:25;;9001:1;8998;8994:9;9023:30;9041:11;9023:30;:::i;:::-;9012:41;;9202:1;9193:7;9189:15;9186:1;9183:22;9163:1;9156:9;9136:83;9113:139;;9232:18;;:::i;:::-;9113:139;8897:362;8849:410;;;;:::o;9265:180::-;9313:77;9310:1;9303:88;9410:4;9407:1;9400:15;9434:4;9431:1;9424:15;9451:185;9491:1;9508:20;9526:1;9508:20;:::i;:::-;9503:25;;9542:20;9560:1;9542:20;:::i;:::-;9537:25;;9581:1;9571:35;;9586:18;;:::i;:::-;9571:35;9628:1;9625;9621:9;9616:14;;9451:185;;;;:::o;9642:194::-;9682:4;9702:20;9720:1;9702:20;:::i;:::-;9697:25;;9736:20;9754:1;9736:20;:::i;:::-;9731:25;;9780:1;9777;9773:9;9765:17;;9804:1;9798:4;9795:11;9792:37;;;9809:18;;:::i;:::-;9792:37;9642:194;;;;:::o;9842:442::-;9991:4;10029:2;10018:9;10014:18;10006:26;;10042:71;10110:1;10099:9;10095:17;10086:6;10042:71;:::i;:::-;10123:72;10191:2;10180:9;10176:18;10167:6;10123:72;:::i;:::-;10205;10273:2;10262:9;10258:18;10249:6;10205:72;:::i;:::-;9842:442;;;;;;:::o;10290:116::-;10360:21;10375:5;10360:21;:::i;:::-;10353:5;10350:32;10340:60;;10396:1;10393;10386:12;10340:60;10290:116;:::o;10412:137::-;10466:5;10497:6;10491:13;10482:22;;10513:30;10537:5;10513:30;:::i;:::-;10412:137;;;;:::o;10555:345::-;10622:6;10671:2;10659:9;10650:7;10646:23;10642:32;10639:119;;;10677:79;;:::i;:::-;10639:119;10797:1;10822:61;10875:7;10866:6;10855:9;10851:22;10822:61;:::i;:::-;10812:71;;10768:125;10555:345;;;;:::o;10906:169::-;11046:21;11042:1;11034:6;11030:14;11023:45;10906:169;:::o;11081:366::-;11223:3;11244:67;11308:2;11303:3;11244:67;:::i;:::-;11237:74;;11320:93;11409:3;11320:93;:::i;:::-;11438:2;11433:3;11429:12;11422:19;;11081:366;;;:::o;11453:419::-;11619:4;11657:2;11646:9;11642:18;11634:26;;11706:9;11700:4;11696:20;11692:1;11681:9;11677:17;11670:47;11734:131;11860:4;11734:131;:::i;:::-;11726:139;;11453:419;;;:::o;11878:164::-;12018:16;12014:1;12006:6;12002:14;11995:40;11878:164;:::o;12048:366::-;12190:3;12211:67;12275:2;12270:3;12211:67;:::i;:::-;12204:74;;12287:93;12376:3;12287:93;:::i;:::-;12405:2;12400:3;12396:12;12389:19;;12048:366;;;:::o;12420:419::-;12586:4;12624:2;12613:9;12609:18;12601:26;;12673:9;12667:4;12663:20;12659:1;12648:9;12644:17;12637:47;12701:131;12827:4;12701:131;:::i;:::-;12693:139;;12420:419;;;:::o;12845:332::-;12966:4;13004:2;12993:9;12989:18;12981:26;;13017:71;13085:1;13074:9;13070:17;13061:6;13017:71;:::i;:::-;13098:72;13166:2;13155:9;13151:18;13142:6;13098:72;:::i;:::-;12845:332;;;;;:::o;13183:143::-;13240:5;13271:6;13265:13;13256:22;;13287:33;13314:5;13287:33;:::i;:::-;13183:143;;;;:::o;13332:351::-;13402:6;13451:2;13439:9;13430:7;13426:23;13422:32;13419:119;;;13457:79;;:::i;:::-;13419:119;13577:1;13602:64;13658:7;13649:6;13638:9;13634:22;13602:64;:::i;:::-;13592:74;;13548:128;13332:351;;;;:::o;13689:191::-;13729:3;13748:20;13766:1;13748:20;:::i;:::-;13743:25;;13782:20;13800:1;13782:20;:::i;:::-;13777:25;;13825:1;13822;13818:9;13811:16;;13846:3;13843:1;13840:10;13837:36;;;13853:18;;:::i;:::-;13837:36;13689:191;;;;:::o;13886:442::-;14035:4;14073:2;14062:9;14058:18;14050:26;;14086:71;14154:1;14143:9;14139:17;14130:6;14086:71;:::i;:::-;14167:72;14235:2;14224:9;14220:18;14211:6;14167:72;:::i;:::-;14249;14317:2;14306:9;14302:18;14293:6;14249:72;:::i;:::-;13886:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1435200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PRICE_TARGET()": "370",
								"RATIO_SCALE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"burn(uint256)": "infinite",
								"collateralRatio()": "2447",
								"decimals()": "405",
								"govToken()": "2532",
								"mint()": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"priceOracle()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateCR()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 534,
									"end": 538,
									"name": "PUSH",
									"source": 6,
									"value": "1D4C"
								},
								{
									"begin": 501,
									"end": 538,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 501,
									"end": 538,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 749,
									"end": 949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 949,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 851,
									"end": 861,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "44796E616D696346555344000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "6446555344000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 888,
									"end": 897,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 877,
									"end": 885,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 877,
									"end": 885,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 877,
									"end": 897,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 934,
									"end": 941,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 907,
									"end": 918,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 907,
									"end": 918,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 907,
									"end": 942,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 749,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3638,
									"end": 3639,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 2557,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb1d7e8f4852d2602de4d81ec99548a6fecfc74b696b49c5f1c3771f911468ca64736f6c634300081d0033",
									".code": [
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "B4EAE1CB"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "B4EAE1CB"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "C752B47E"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "D9C37512"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "73D49515"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "2630C12F"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "5268CFF"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "1249C58B"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 2557,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 682,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 682,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1404,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 711,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 711,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 711,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1963,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1963,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 659,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 617,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 617,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 501,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 501,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 501,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 955,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 570,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 570,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 682,
											"end": 705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 682,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1404,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1464,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1468,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1447,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1447,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1491,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1491,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1533,
											"end": 1557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1533,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1557,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1533,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1533,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1533,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1621,
											"end": 1636,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1608,
											"end": 1636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1608,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1608,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1607,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1680,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 1743,
											"end": 1747,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1732,
											"end": 1740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1732,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1732,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1731,
											"end": 1763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1731,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1731,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1828,
											"end": 1838,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1852,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1795,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1795,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1795,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1774,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1774,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1949,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1921,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 711,
											"end": 742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2018,
											"end": 2028,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2012,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2047,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2047,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2097,
											"end": 2112,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2097,
											"end": 2112,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2088,
											"end": 2112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2088,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2112,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2088,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2087,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2156,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2205,
											"end": 2213,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2205,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2205,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2204,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2267,
											"end": 2275,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2267,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2266,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2338,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2351,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2351,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2309,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2309,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2388,
											"end": 2416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2388,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2388,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2388,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2380,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2380,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2502,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2474,
											"end": 2502,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 659,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 617,
											"end": 659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 617,
											"end": 659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 501,
											"end": 538,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 955,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1028,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1008,
											"end": 1028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1028,
											"name": "PUSH",
											"source": 6,
											"value": "98D5FDCA"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1008,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1008,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 1044,
											"end": 1049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1064,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "1388"
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1145,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1119,
											"end": 1202,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1187,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1165,
											"end": 1180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1165,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1202,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1119,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 656,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "5F5E100"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1218,
											"end": 1392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1325,
											"name": "PUSH",
											"source": 6,
											"value": "251C"
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1325,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1299,
											"end": 1382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1345,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1345,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1382,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1299,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1218,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1040,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 982,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 608,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 570,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 593,
											"end": 692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 673,
											"end": 685,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 663,
											"end": 685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 663,
											"end": 685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 698,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 782,
											"end": 793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 811,
											"end": 814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 804,
											"end": 823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 856,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 847,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 832,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 832,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 952,
											"end": 955,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 946,
											"end": 969,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 989,
											"end": 992,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1114,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1242,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1297,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1368,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1433,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1377,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1467,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1465,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1737,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2228,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2253,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2383,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3778,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3959,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4191,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4336,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4464,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4409,
											"end": 4527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4728,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4668,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4876,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4734,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4835,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4844,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4862,
											"end": 4867,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4844,
											"end": 4868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4868,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4844,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4835,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4869,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4835,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4817,
											"end": 4870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5008,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4882,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4996,
											"end": 5001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4965,
											"end": 5002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 5002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 5002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5160,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5014,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 5148,
											"end": 5153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 5117,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5154,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 5117,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5337,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5166,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5324,
											"end": 5329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5273,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5330,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5273,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5605,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5343,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5507,
											"end": 5598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5598,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5507,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5697,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5611,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5690,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5679,
											"end": 5684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5691,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5815,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5703,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5786,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5809,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5821,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5933,
											"end": 5951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5961,
											"end": 6028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6028,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5961,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 6035,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 6035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 6035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 6035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6370,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6041,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6151,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6128,
											"end": 6135,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6147,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6152,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6236,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6117,
											"end": 6236,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6155,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6236,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6117,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6345,
											"end": 6352,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6300,
											"end": 6353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6353,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6300,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6370,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6705,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6376,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6472,
											"end": 6481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6470,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6482,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6487,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6571,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6452,
											"end": 6571,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6490,
											"end": 6569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6490,
											"end": 6569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6569,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6490,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6571,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6452,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6680,
											"end": 6687,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6677,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6669,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6635,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6688,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6635,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6688,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6705,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6779,
											"end": 6785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6822,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6834,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6839,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6842,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6842,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 6804,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 7032,
											"end": 7039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6987,
											"end": 7040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 7040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 7040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7157,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7158,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7115,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 7185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7371,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7191,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 7316,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7236,
											"end": 7237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7326,
											"end": 7341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7364,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7697,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 7377,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7452,
											"end": 7456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7460,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7499,
											"end": 7503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7544,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7516,
											"end": 7597,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7586,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7574,
											"end": 7580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7597,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7516,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7647,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 7648,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7607,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7607,
											"end": 7691,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7663,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7607,
											"end": 7691,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7607,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7428,
											"end": 7697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7861,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7703,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7853,
											"name": "PUSH",
											"source": 7,
											"value": "53656E6420455448000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7827,
											"end": 7841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7820,
											"end": 7854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 8232,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7867,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8030,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 8094,
											"end": 8095,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8089,
											"end": 8092,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8030,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8096,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 8030,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8105,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8198,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8105,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8225,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8214,
											"end": 8226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 8232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 8232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 8232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 8232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8657,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8238,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8431,
											"end": 8440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8501,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8645,
											"end": 8649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 8519,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8650,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8519,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8843,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8663,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8788,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8708,
											"end": 8709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8798,
											"end": 8813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8829,
											"end": 8830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8837,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 9259,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8849,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 8896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8930,
											"end": 8931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8912,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8932,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8912,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 8932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 8932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8946,
											"end": 8966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8966,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8998,
											"end": 8999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9003,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 9041,
											"end": 9052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9023,
											"end": 9053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9053,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 9023,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9204,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9187,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9205,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9163,
											"end": 9164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9165,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9219,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9113,
											"end": 9252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9232,
											"end": 9250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9252,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9113,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 9259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 9259,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 9259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 9259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 9259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 9259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 9445,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 9265,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9407,
											"end": 9408,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9400,
											"end": 9415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9438,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9431,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9439,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9636,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 9451,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9491,
											"end": 9492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9508,
											"end": 9528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9542,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 9560,
											"end": 9561,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9542,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9542,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9542,
											"end": 9562,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 9542,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9537,
											"end": 9562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9537,
											"end": 9562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9571,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9571,
											"end": 9606,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 9586,
											"end": 9604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9571,
											"end": 9606,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9571,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9616,
											"end": 9630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9636,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9636,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9836,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9642,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9702,
											"end": 9722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9702,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9697,
											"end": 9722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9697,
											"end": 9722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9754,
											"end": 9755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9736,
											"end": 9756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9756,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9736,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9780,
											"end": 9781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9782,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9804,
											"end": 9805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9795,
											"end": 9806,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 9829,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9792,
											"end": 9829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9809,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9809,
											"end": 9827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9827,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9809,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 9829,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9792,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9991,
											"end": 9995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10018,
											"end": 10027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10108,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10092,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10042,
											"end": 10113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10113,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 10042,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10123,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 10191,
											"end": 10193,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10180,
											"end": 10189,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10176,
											"end": 10194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10167,
											"end": 10173,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10123,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10123,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10123,
											"end": 10195,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 10123,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10273,
											"end": 10275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10255,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10205,
											"end": 10277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10277,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10205,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 10284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10406,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10290,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10375,
											"end": 10380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 10360,
											"end": 10381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10360,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 10340,
											"end": 10400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10396,
											"end": 10397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10398,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10400,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 10340,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10290,
											"end": 10406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10549,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 10412,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10491,
											"end": 10504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10537,
											"end": 10542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10513,
											"end": 10543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10543,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10513,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10549,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10900,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10555,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10622,
											"end": 10628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10646,
											"end": 10669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10674,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10758,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10639,
											"end": 10758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10677,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10677,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 10677,
											"end": 10756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10677,
											"end": 10756,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10677,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10758,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10639,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10855,
											"end": 10864,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 10873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10822,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 10822,
											"end": 10883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10822,
											"end": 10883,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10822,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10812,
											"end": 10883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10900,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 11075,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 10906,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11067,
											"name": "PUSH",
											"source": 7,
											"value": "465241207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 11042,
											"end": 11043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11030,
											"end": 11044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11023,
											"end": 11068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 11075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 11075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11308,
											"end": 11310,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 11303,
											"end": 11306,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 11244,
											"end": 11311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11237,
											"end": 11311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11237,
											"end": 11311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11409,
											"end": 11412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 11320,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11438,
											"end": 11440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11433,
											"end": 11436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11619,
											"end": 11623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11634,
											"end": 11660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11634,
											"end": 11660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11706,
											"end": 11715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11716,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11692,
											"end": 11693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11690,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11677,
											"end": 11694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11670,
											"end": 11717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11860,
											"end": 11864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 11734,
											"end": 11865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11726,
											"end": 11865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11726,
											"end": 11865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12042,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 11878,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12034,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820455448000000000000000000000000000000000000"
										},
										{
											"begin": 12014,
											"end": 12015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12002,
											"end": 12016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11995,
											"end": 12035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 12275,
											"end": 12277,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 12270,
											"end": 12273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 12211,
											"end": 12278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 12211,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 12376,
											"end": 12379,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 12287,
											"end": 12380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 12287,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12400,
											"end": 12403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12396,
											"end": 12408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12389,
											"end": 12408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12389,
											"end": 12408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12839,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 12420,
											"end": 12839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12586,
											"end": 12590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12626,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12613,
											"end": 12622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12609,
											"end": 12627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12601,
											"end": 12627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12601,
											"end": 12627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12667,
											"end": 12671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12663,
											"end": 12683,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12659,
											"end": 12660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12648,
											"end": 12657,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 12661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12637,
											"end": 12684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12701,
											"end": 12832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12827,
											"end": 12831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12701,
											"end": 12832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 12701,
											"end": 12832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12701,
											"end": 12832,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12701,
											"end": 12832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12693,
											"end": 12832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12693,
											"end": 12832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12966,
											"end": 12970,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13004,
											"end": 13006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12993,
											"end": 13002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13070,
											"end": 13087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13061,
											"end": 13067,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 13017,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13017,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13166,
											"end": 13168,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13155,
											"end": 13164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13142,
											"end": 13148,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13098,
											"end": 13170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13098,
											"end": 13170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 13177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13326,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 13183,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13240,
											"end": 13245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13271,
											"end": 13277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13256,
											"end": 13278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13256,
											"end": 13278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 13314,
											"end": 13319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 13287,
											"end": 13320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13320,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 13287,
											"end": 13320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13326,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13326,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13683,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 13332,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13402,
											"end": 13408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13451,
											"end": 13453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13439,
											"end": 13448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13430,
											"end": 13437,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13426,
											"end": 13449,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13422,
											"end": 13454,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13538,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 13419,
											"end": 13538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 13457,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 13457,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13538,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 13419,
											"end": 13538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13577,
											"end": 13578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13602,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 13658,
											"end": 13665,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13649,
											"end": 13655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13638,
											"end": 13647,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13634,
											"end": 13656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13602,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 13602,
											"end": 13666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13602,
											"end": 13666,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 13602,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13592,
											"end": 13666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13592,
											"end": 13666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13683,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13880,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 13689,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13729,
											"end": 13732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13748,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 13766,
											"end": 13767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13748,
											"end": 13768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13768,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 13748,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13743,
											"end": 13768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13743,
											"end": 13768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13782,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13800,
											"end": 13801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13782,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13782,
											"end": 13802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13782,
											"end": 13802,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13782,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13822,
											"end": 13823,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13818,
											"end": 13827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13811,
											"end": 13827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13811,
											"end": 13827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13846,
											"end": 13849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13843,
											"end": 13844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13840,
											"end": 13850,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 13837,
											"end": 13873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13853,
											"end": 13871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13873,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 13837,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14075,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 14062,
											"end": 14071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14058,
											"end": 14076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14086,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 14154,
											"end": 14155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14143,
											"end": 14152,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14139,
											"end": 14156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14130,
											"end": 14136,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14086,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 14086,
											"end": 14157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14086,
											"end": 14157,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 14086,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 14235,
											"end": 14237,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14224,
											"end": 14233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14220,
											"end": 14238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14217,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 14167,
											"end": 14239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14239,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 14167,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14249,
											"end": 14321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 14317,
											"end": 14319,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14306,
											"end": 14315,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14302,
											"end": 14320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14293,
											"end": 14299,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14249,
											"end": 14321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 14249,
											"end": 14321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14249,
											"end": 14321,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 14249,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13886,
											"end": 14328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"F/DynamicCRFractionalStablecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PRICE_TARGET()": "73d49515",
							"RATIO_SCALE()": "d9c37512",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collateralRatio()": "b4eae1cb",
							"decimals()": "313ce567",
							"govToken()": "05268cff",
							"mint()": "1249c58b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"priceOracle()": "2630c12f",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateCR()": "c752b47e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_TARGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATIO_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/DynamicCRFractionalStablecoin.sol\":\"DynamicCRFractionalStablecoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"F/DynamicCRFractionalStablecoin.sol\":{\"keccak256\":\"0x583a58fd2fe0eb9fa9092d6570f41d66da6d149881c31d940ea8aec91140daae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca48940e0e6995c9a98dd3e58617319b1c2c7352a5f592def487c9725970e6f6\",\"dweb:/ipfs/QmTnVyA1CMfAGx4fU6dS5BjHoFbbBfGyXy4vYHVyak2KUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 971,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "collateralRatio",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 979,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "govToken",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 982,
								"contract": "F/DynamicCRFractionalStablecoin.sol:DynamicCRFractionalStablecoin",
								"label": "priceOracle",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IPriceOracle)943"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IPriceOracle)943": {
								"encoding": "inplace",
								"label": "contract IPriceOracle",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IGovToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/DynamicCRFractionalStablecoin.sol\":\"IGovToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"F/DynamicCRFractionalStablecoin.sol\":{\"keccak256\":\"0x583a58fd2fe0eb9fa9092d6570f41d66da6d149881c31d940ea8aec91140daae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca48940e0e6995c9a98dd3e58617319b1c2c7352a5f592def487c9725970e6f6\",\"dweb:/ipfs/QmTnVyA1CMfAGx4fU6dS5BjHoFbbBfGyXy4vYHVyak2KUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrice()": "98d5fdca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/DynamicCRFractionalStablecoin.sol\":\"IPriceOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"F/DynamicCRFractionalStablecoin.sol\":{\"keccak256\":\"0x583a58fd2fe0eb9fa9092d6570f41d66da6d149881c31d940ea8aec91140daae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca48940e0e6995c9a98dd3e58617319b1c2c7352a5f592def487c9725970e6f6\",\"dweb:/ipfs/QmTnVyA1CMfAGx4fU6dS5BjHoFbbBfGyXy4vYHVyak2KUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"F/DynamicCRFractionalStablecoin.sol": {
				"ast": {
					"absolutePath": "F/DynamicCRFractionalStablecoin.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"DynamicCRFractionalStablecoin": [
							1201
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IGovToken": [
							964
						],
						"IPriceOracle": [
							943
						],
						"Ownable": [
							147
						]
					},
					"id": 1202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1202,
							"sourceUnit": 148,
							"src": "58:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1202,
							"sourceUnit": 800,
							"src": "111:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 943,
							"linearizedBaseContracts": [
								943
							],
							"name": "IPriceOracle",
							"nameLocation": "178:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "98d5fdca",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "206:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:6"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "240:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:9:6"
									},
									"scope": 943,
									"src": "197:52:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1202,
							"src": "168:100:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGovToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 964,
							"linearizedBaseContracts": [
								964
							],
							"name": "IGovToken",
							"nameLocation": "280:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "318:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "327:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "336:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:27:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "363:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "363:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:6:6"
									},
									"scope": 964,
									"src": "296:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "383:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "392:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "401:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:18:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "428:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:6:6"
									},
									"scope": 964,
									"src": "374:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1202,
							"src": "270:166:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 965,
										"name": "ERC20",
										"nameLocations": [
											"480:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "480:5:6"
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "480:5:6"
								},
								{
									"baseName": {
										"id": 967,
										"name": "Ownable",
										"nameLocations": [
											"487:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "487:7:6"
									},
									"id": 968,
									"nodeType": "InheritanceSpecifier",
									"src": "487:7:6"
								}
							],
							"canonicalName": "DynamicCRFractionalStablecoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1201,
							"linearizedBaseContracts": [
								1201,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "DynamicCRFractionalStablecoin",
							"nameLocation": "447:29:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b4eae1cb",
									"id": 971,
									"mutability": "mutable",
									"name": "collateralRatio",
									"nameLocation": "516:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1201,
									"src": "501:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "501:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37353030",
										"id": 970,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "534:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7500_by_1",
											"typeString": "int_const 7500"
										},
										"value": "7500"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d9c37512",
									"id": 974,
									"mutability": "constant",
									"name": "RATIO_SCALE",
									"nameLocation": "594:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1201,
									"src": "570:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316534",
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "608:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "1e4"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "73d49515",
									"id": 977,
									"mutability": "constant",
									"name": "PRICE_TARGET",
									"nameLocation": "641:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1201,
									"src": "617:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 975,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316538",
										"id": 976,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "656:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"value": "1e8"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05268cff",
									"id": 979,
									"mutability": "mutable",
									"name": "govToken",
									"nameLocation": "697:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1201,
									"src": "682:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 978,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2630c12f",
									"id": 982,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "731:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1201,
									"src": "711:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPriceOracle_$943",
										"typeString": "contract IPriceOracle"
									},
									"typeName": {
										"id": 981,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 980,
											"name": "IPriceOracle",
											"nameLocations": [
												"711:12:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 943,
											"src": "711:12:6"
										},
										"referencedDeclaration": 943,
										"src": "711:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracle_$943",
											"typeString": "contract IPriceOracle"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "867:82:6",
										"statements": [
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "govToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "877:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 998,
														"name": "_govToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "888:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "877:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "877:20:6"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "907:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracle_$943",
															"typeString": "contract IPriceOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1003,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "934:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1002,
															"name": "IPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "921:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPriceOracle_$943_$",
																"typeString": "type(contract IPriceOracle)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "921:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracle_$943",
															"typeString": "contract IPriceOracle"
														}
													},
													"src": "907:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracle_$943",
														"typeString": "contract IPriceOracle"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "907:35:6"
											}
										]
									},
									"id": 1008,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "44796e616d696346555344",
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "811:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a569c01abadccb537b3418e5f0e309ab17d975e28c75c100326544ab0bc68e8f",
														"typeString": "literal_string \"DynamicFUSD\""
													},
													"value": "DynamicFUSD"
												},
												{
													"hexValue": "6446555344",
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "826:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4a4f90fd34bd253885e3d08fd62a3ac53edb83cf1127e72e725fd50d38a97199",
														"typeString": "literal_string \"dFUSD\""
													},
													"value": "dFUSD"
												}
											],
											"id": 991,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 988,
												"name": "ERC20",
												"nameLocations": [
													"805:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "805:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "805:29:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 993,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "851:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "855:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 995,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 992,
												"name": "Ownable",
												"nameLocations": [
													"843:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "843:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "843:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_govToken",
												"nameLocation": "769:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "761:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "788:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "780:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:36:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:6"
									},
									"scope": 1201,
									"src": "749:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "982:416:6",
										"statements": [
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1000:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "992:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "992:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1013,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "1008:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracle_$943",
																"typeString": "contract IPriceOracle"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1020:8:6",
														"memberName": "getPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "1008:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1008:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "992:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "1044:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1018,
														"name": "PRICE_TARGET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "1052:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1044:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1030,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "1222:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1031,
															"name": "PRICE_TARGET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1230:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1222:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1043,
													"nodeType": "IfStatement",
													"src": "1218:174:6",
													"trueBody": {
														"id": 1042,
														"nodeType": "Block",
														"src": "1244:148:6",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1033,
																		"name": "collateralRatio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "1303:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "39353030",
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1321:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9500_by_1",
																			"typeString": "int_const 9500"
																		},
																		"value": "9500"
																	},
																	"src": "1303:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1041,
																"nodeType": "IfStatement",
																"src": "1299:83:6",
																"trueBody": {
																	"id": 1040,
																	"nodeType": "Block",
																	"src": "1327:55:6",
																	"statements": [
																		{
																			"expression": {
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1036,
																					"name": "collateralRatio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "1345:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"hexValue": "313030",
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1364:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "1345:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1039,
																			"nodeType": "ExpressionStatement",
																			"src": "1345:22:6"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "1040:352:6",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "1066:146:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1020,
																	"name": "collateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1123:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "35303030",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1141:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5000_by_1",
																		"typeString": "int_const 5000"
																	},
																	"value": "5000"
																},
																"src": "1123:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1028,
															"nodeType": "IfStatement",
															"src": "1119:83:6",
															"trueBody": {
																"id": 1027,
																"nodeType": "Block",
																"src": "1147:55:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1023,
																				"name": "collateralRatio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "1165:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"hexValue": "313030",
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1184:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "1165:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1026,
																		"nodeType": "ExpressionStatement",
																		"src": "1165:22:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "c752b47e",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCR",
									"nameLocation": "964:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:2:6"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:0:6"
									},
									"scope": 1201,
									"src": "955:443:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1437:520:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1050,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1455:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1459:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1455:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1455:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420455448",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1470:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8",
																"typeString": "literal_string \"Send ETH\""
															},
															"value": "Send ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47e857af6cea5b9cef388cc70e3c3183cdc65968ff0270a7694bc3c851fbfef8",
																"typeString": "literal_string \"Send ETH\""
															}
														],
														"id": 1049,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1447:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1447:34:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1057,
														"name": "updateCR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "1491:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1491:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "1491:10:6"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "1520:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "1512:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1060,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1512:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1533:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1537:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1533:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1064,
															"name": "PRICE_TARGET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1545:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1533:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1560:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1533:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1512:52:6"
											},
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "ethValue",
														"nameLocation": "1596:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "1588:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1588:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1071,
																	"name": "totalValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "1608:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1072,
																	"name": "collateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1621:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1608:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1074,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1607:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1075,
														"name": "RATIO_SCALE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1640:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1607:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1588:63:6"
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "fraValue",
														"nameLocation": "1669:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "1661:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1661:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1080,
														"name": "totalValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "1680:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1081,
														"name": "ethValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "1693:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1680:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1661:40:6"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "fraAmount",
														"nameLocation": "1719:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "1711:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1711:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1086,
																	"name": "fraValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "1732:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1743:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1732:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1089,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1090,
														"name": "PRICE_TARGET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "1751:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1731:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1711:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1098,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1828:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1832:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1828:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1102,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1848:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DynamicCRFractionalStablecoin_$1201",
																				"typeString": "contract DynamicCRFractionalStablecoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DynamicCRFractionalStablecoin_$1201",
																				"typeString": "contract DynamicCRFractionalStablecoin"
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1840:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1100,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1840:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1840:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1104,
																	"name": "fraAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "1855:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1095,
																			"name": "govToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "1805:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1094,
																		"name": "IGovToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "1795:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IGovToken_$964_$",
																			"typeString": "type(contract IGovToken)"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1795:19:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IGovToken_$964",
																		"typeString": "contract IGovToken"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1815:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "1795:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1795:70:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "465241207472616e73666572206661696c6564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1879:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd",
																"typeString": "literal_string \"FRA transfer failed\""
															},
															"value": "FRA transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd",
																"typeString": "literal_string \"FRA transfer failed\""
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1774:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:136:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "1774:136:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1927:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1931:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1927:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "totalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "1939:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1921:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1921:29:6"
											}
										]
									},
									"functionSelector": "1249c58b",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1413:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:2:6"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1201,
									"src": "1404:553:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "2002:518:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2018:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2022:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2018:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "2030:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2012:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "2012:25:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1127,
														"name": "updateCR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2047:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2047:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "2047:10:6"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "ethValue",
														"nameLocation": "2076:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2068:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2068:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1132,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "2088:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1133,
																	"name": "collateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "2097:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2088:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2087:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1136,
														"name": "RATIO_SCALE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2116:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2087:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2068:59:6"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "fraValue",
														"nameLocation": "2145:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2137:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1144,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1141,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "2156:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1142,
														"name": "ethValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2165:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2156:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2137:36:6"
											},
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "ethToSend",
														"nameLocation": "2192:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2184:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1145,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2184:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1147,
																	"name": "ethValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "2205:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2216:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2205:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1150,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2204:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1151,
														"name": "PRICE_TARGET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "2224:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2204:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2184:52:6"
											},
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "fraToSend",
														"nameLocation": "2254:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2246:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2246:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1156,
																	"name": "fraValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "2267:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2278:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "2267:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1159,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2266:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1160,
														"name": "PRICE_TARGET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "2286:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2266:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2246:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1166,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2325:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DynamicCRFractionalStablecoin_$1201",
																				"typeString": "contract DynamicCRFractionalStablecoin"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DynamicCRFractionalStablecoin_$1201",
																				"typeString": "contract DynamicCRFractionalStablecoin"
																			}
																		],
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2317:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1164,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2317:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2317:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2331:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2317:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1169,
																"name": "ethToSend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2342:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2317:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820455448",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
																"typeString": "literal_string \"Not enough ETH\""
															},
															"value": "Not enough ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
																"typeString": "literal_string \"Not enough ETH\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2309:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2309:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1179,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2417:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2421:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2417:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1181,
																	"name": "fraToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "2429:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1176,
																			"name": "govToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "2398:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1175,
																		"name": "IGovToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "2388:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IGovToken_$964_$",
																			"typeString": "type(contract IGovToken)"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2388:19:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IGovToken_$964",
																		"typeString": "contract IGovToken"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2408:8:6",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 963,
																"src": "2388:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:51:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "465241207472616e73666572206661696c6564",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2441:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd",
																"typeString": "literal_string \"FRA transfer failed\""
															},
															"value": "FRA transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b74a18502fd61be261712e810f826a08de71da96ac8a800420ec572a401bdacd",
																"typeString": "literal_string \"FRA transfer failed\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2380:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2380:83:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "ethToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "2503:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1188,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2482:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2486:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2482:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2474:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2474:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2474:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2494:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2474:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2474:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "2474:39:6"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1972:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1985:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1977:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1976:16:6"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:6"
									},
									"scope": 1201,
									"src": "1963:557:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "2553:2:6",
										"statements": []
									},
									"id": 1200,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:6"
									},
									"scope": 1201,
									"src": "2526:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1202,
							"src": "438:2119:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:2526:6"
				},
				"id": 6
			}
		}
	}
}