{
	"id": "3887a665335392db62379771d0b54927",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"F/FlashCrashAutoPause.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract FlashCrashAutoPause is Pausable, Ownable {\n    uint256 public lastPrice;\n    uint256 public threshold;\n\n    constructor(uint256 _threshold) Ownable(msg.sender) {\n        threshold = _threshold;\n    }\n\n    function reportPrice(uint256 price) external onlyOwner {\n        require(price > 0, \"Invalid price\");\n\n        if (lastPrice > 0) {\n            uint256 drop = lastPrice > price ? lastPrice - price : 0;\n            uint256 dropPercent = (drop * 100) / lastPrice;\n            if (dropPercent >= threshold) {\n                _pause();\n            }\n        }\n\n        lastPrice = price;\n    }\n\n    function executeTrade() external whenNotPaused {\n        // trading logic goes here\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"F/FlashCrashAutoPause.sol": {
				"FlashCrashAutoPause": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_threshold",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "executeTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "reportPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "threshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"F/FlashCrashAutoPause.sol\":168:939  contract FlashCrashAutoPause is Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"F/FlashCrashAutoPause.sol\":285:376  constructor(uint256 _threshold) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"F/FlashCrashAutoPause.sol\":325:335  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"F/FlashCrashAutoPause.sol\":359:369  _threshold */\n  dup1\n    /* \"F/FlashCrashAutoPause.sol\":347:356  threshold */\n  0x02\n    /* \"F/FlashCrashAutoPause.sol\":347:369  threshold = _threshold */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"F/FlashCrashAutoPause.sol\":285:376  constructor(uint256 _threshold) Ownable(msg.sender) {... */\n  pop\n    /* \"F/FlashCrashAutoPause.sol\":168:939  contract FlashCrashAutoPause is Pausable, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_21:\n    /* \"#utility.yul\":490:514   */\n  tag_32\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_33:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_22:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_35\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":781:900   */\ntag_37:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_39\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1177   */\ntag_23:\n    /* \"#utility.yul\":1088:1095   */\n  0x00\n    /* \"#utility.yul\":1128:1170   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1121:1126   */\n  dup3\n    /* \"#utility.yul\":1117:1171   */\n  and\n    /* \"#utility.yul\":1106:1171   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1183:1279   */\ntag_24:\n    /* \"#utility.yul\":1220:1227   */\n  0x00\n    /* \"#utility.yul\":1249:1273   */\n  tag_42\n    /* \"#utility.yul\":1267:1272   */\n  dup3\n    /* \"#utility.yul\":1249:1273   */\n  tag_23\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1238:1273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1183:1279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1285:1403   */\ntag_25:\n    /* \"#utility.yul\":1372:1396   */\n  tag_44\n    /* \"#utility.yul\":1390:1395   */\n  dup2\n    /* \"#utility.yul\":1372:1396   */\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1367:1370   */\n  dup3\n    /* \"#utility.yul\":1360:1397   */\n  mstore\n    /* \"#utility.yul\":1285:1403   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1631   */\ntag_11:\n    /* \"#utility.yul\":1502:1506   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x20\n    /* \"#utility.yul\":1529:1538   */\n  dup3\n    /* \"#utility.yul\":1525:1543   */\n  add\n    /* \"#utility.yul\":1517:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1553:1624   */\n  tag_46\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1610:1619   */\n  dup4\n    /* \"#utility.yul\":1606:1623   */\n  add\n    /* \"#utility.yul\":1597:1603   */\n  dup5\n    /* \"#utility.yul\":1553:1624   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1409:1631   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"F/FlashCrashAutoPause.sol\":168:939  contract FlashCrashAutoPause is Pausable, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"F/FlashCrashAutoPause.sol\":168:939  contract FlashCrashAutoPause is Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc7f898f0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe0c70b66\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x053f14da\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42cde4e8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"F/FlashCrashAutoPause.sol\":224:248  uint256 public lastPrice */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FlashCrashAutoPause.sol\":872:937  function unpause() external onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"F/FlashCrashAutoPause.sol\":254:278  uint256 public threshold */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FlashCrashAutoPause.sol\":382:771  function reportPrice(uint256 price) external onlyOwner {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"F/FlashCrashAutoPause.sol\":777:866  function executeTrade() external whenNotPaused {... */\n    tag_10:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"F/FlashCrashAutoPause.sol\":224:248  uint256 public lastPrice */\n    tag_14:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"F/FlashCrashAutoPause.sol\":872:937  function unpause() external onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_43:\n        /* \"F/FlashCrashAutoPause.sol\":920:930  _unpause() */\n      tag_46\n        /* \"F/FlashCrashAutoPause.sol\":920:928  _unpause */\n      tag_47\n        /* \"F/FlashCrashAutoPause.sol\":920:930  _unpause() */\n      jump\t// in\n    tag_46:\n        /* \"F/FlashCrashAutoPause.sol\":872:937  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"F/FlashCrashAutoPause.sol\":254:278  uint256 public threshold */\n    tag_20:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"F/FlashCrashAutoPause.sol\":382:771  function reportPrice(uint256 price) external onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"F/FlashCrashAutoPause.sol\":463:464  0 */\n      0x00\n        /* \"F/FlashCrashAutoPause.sol\":455:460  price */\n      dup2\n        /* \"F/FlashCrashAutoPause.sol\":455:464  price > 0 */\n      gt\n        /* \"F/FlashCrashAutoPause.sol\":447:482  require(price > 0, \"Invalid price\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"F/FlashCrashAutoPause.sol\":509:510  0 */\n      0x00\n        /* \"F/FlashCrashAutoPause.sol\":497:506  lastPrice */\n      sload(0x01)\n        /* \"F/FlashCrashAutoPause.sol\":497:510  lastPrice > 0 */\n      gt\n        /* \"F/FlashCrashAutoPause.sol\":493:737  if (lastPrice > 0) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"F/FlashCrashAutoPause.sol\":526:538  uint256 drop */\n      0x00\n        /* \"F/FlashCrashAutoPause.sol\":553:558  price */\n      dup2\n        /* \"F/FlashCrashAutoPause.sol\":541:550  lastPrice */\n      sload(0x01)\n        /* \"F/FlashCrashAutoPause.sol\":541:558  lastPrice > price */\n      gt\n        /* \"F/FlashCrashAutoPause.sol\":541:582  lastPrice > price ? lastPrice - price : 0 */\n      tag_62\n      jumpi\n        /* \"F/FlashCrashAutoPause.sol\":581:582  0 */\n      0x00\n        /* \"F/FlashCrashAutoPause.sol\":541:582  lastPrice > price ? lastPrice - price : 0 */\n      jump(tag_63)\n    tag_62:\n        /* \"F/FlashCrashAutoPause.sol\":573:578  price */\n      dup2\n        /* \"F/FlashCrashAutoPause.sol\":561:570  lastPrice */\n      sload(0x01)\n        /* \"F/FlashCrashAutoPause.sol\":561:578  lastPrice - price */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"F/FlashCrashAutoPause.sol\":541:582  lastPrice > price ? lastPrice - price : 0 */\n    tag_63:\n        /* \"F/FlashCrashAutoPause.sol\":526:582  uint256 drop = lastPrice > price ? lastPrice - price : 0 */\n      swap1\n      pop\n        /* \"F/FlashCrashAutoPause.sol\":596:615  uint256 dropPercent */\n      0x00\n        /* \"F/FlashCrashAutoPause.sol\":633:642  lastPrice */\n      sload(0x01)\n        /* \"F/FlashCrashAutoPause.sol\":626:629  100 */\n      0x64\n        /* \"F/FlashCrashAutoPause.sol\":619:623  drop */\n      dup4\n        /* \"F/FlashCrashAutoPause.sol\":619:629  drop * 100 */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"F/FlashCrashAutoPause.sol\":618:642  (drop * 100) / lastPrice */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"F/FlashCrashAutoPause.sol\":596:642  uint256 dropPercent = (drop * 100) / lastPrice */\n      swap1\n      pop\n        /* \"F/FlashCrashAutoPause.sol\":675:684  threshold */\n      sload(0x02)\n        /* \"F/FlashCrashAutoPause.sol\":660:671  dropPercent */\n      dup2\n        /* \"F/FlashCrashAutoPause.sol\":660:684  dropPercent >= threshold */\n      lt\n        /* \"F/FlashCrashAutoPause.sol\":656:727  if (dropPercent >= threshold) {... */\n      tag_70\n      jumpi\n        /* \"F/FlashCrashAutoPause.sol\":704:712  _pause() */\n      tag_71\n        /* \"F/FlashCrashAutoPause.sol\":704:710  _pause */\n      tag_72\n        /* \"F/FlashCrashAutoPause.sol\":704:712  _pause() */\n      jump\t// in\n    tag_71:\n        /* \"F/FlashCrashAutoPause.sol\":656:727  if (dropPercent >= threshold) {... */\n    tag_70:\n        /* \"F/FlashCrashAutoPause.sol\":512:737  {... */\n      pop\n      pop\n        /* \"F/FlashCrashAutoPause.sol\":493:737  if (lastPrice > 0) {... */\n    tag_61:\n        /* \"F/FlashCrashAutoPause.sol\":759:764  price */\n      dup1\n        /* \"F/FlashCrashAutoPause.sol\":747:756  lastPrice */\n      0x01\n        /* \"F/FlashCrashAutoPause.sol\":747:764  lastPrice = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"F/FlashCrashAutoPause.sol\":382:771  function reportPrice(uint256 price) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"F/FlashCrashAutoPause.sol\":777:866  function executeTrade() external whenNotPaused {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_74\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_75\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_74:\n        /* \"F/FlashCrashAutoPause.sol\":777:866  function executeTrade() external whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_29\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_91\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_92\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_75\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_100\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_103\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_23\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_23\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_113:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_114:\n        /* \"#utility.yul\":177:201   */\n      tag_139\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_113\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_141\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_114\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_115:\n        /* \"#utility.yul\":476:483   */\n      0x00\n        /* \"#utility.yul\":519:524   */\n      dup2\n        /* \"#utility.yul\":512:525   */\n      iszero\n        /* \"#utility.yul\":505:526   */\n      iszero\n        /* \"#utility.yul\":494:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:647   */\n    tag_116:\n        /* \"#utility.yul\":619:640   */\n      tag_144\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":619:640   */\n      tag_115\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":614:617   */\n      dup3\n        /* \"#utility.yul\":607:641   */\n      mstore\n        /* \"#utility.yul\":538:647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:863   */\n    tag_25:\n        /* \"#utility.yul\":740:744   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":763:781   */\n      add\n        /* \"#utility.yul\":755:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_146\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":791:856   */\n      tag_116\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":653:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:995   */\n    tag_117:\n        /* \"#utility.yul\":906:913   */\n      0x00\n        /* \"#utility.yul\":946:988   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":939:944   */\n      dup3\n        /* \"#utility.yul\":935:989   */\n      and\n        /* \"#utility.yul\":924:989   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1097   */\n    tag_118:\n        /* \"#utility.yul\":1038:1045   */\n      0x00\n        /* \"#utility.yul\":1067:1091   */\n      tag_149\n        /* \"#utility.yul\":1085:1090   */\n      dup3\n        /* \"#utility.yul\":1067:1091   */\n      tag_117\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1056:1091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1103:1221   */\n    tag_119:\n        /* \"#utility.yul\":1190:1214   */\n      tag_151\n        /* \"#utility.yul\":1208:1213   */\n      dup2\n        /* \"#utility.yul\":1190:1214   */\n      tag_118\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1185:1188   */\n      dup3\n        /* \"#utility.yul\":1178:1215   */\n      mstore\n        /* \"#utility.yul\":1103:1221   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1449   */\n    tag_31:\n        /* \"#utility.yul\":1320:1324   */\n      0x00\n        /* \"#utility.yul\":1358:1360   */\n      0x20\n        /* \"#utility.yul\":1347:1356   */\n      dup3\n        /* \"#utility.yul\":1343:1361   */\n      add\n        /* \"#utility.yul\":1335:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1442   */\n      tag_153\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1371:1442   */\n      tag_119\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1227:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:1653   */\n    tag_121:\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      0x00\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1782:1904   */\n    tag_123:\n        /* \"#utility.yul\":1855:1879   */\n      tag_158\n        /* \"#utility.yul\":1873:1878   */\n      dup2\n        /* \"#utility.yul\":1855:1879   */\n      tag_113\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1845:1880   */\n      eq\n        /* \"#utility.yul\":1835:1898   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1894:1895   */\n      0x00\n        /* \"#utility.yul\":1891:1892   */\n      0x00\n        /* \"#utility.yul\":1884:1896   */\n      revert\n        /* \"#utility.yul\":1835:1898   */\n    tag_159:\n        /* \"#utility.yul\":1782:1904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2049   */\n    tag_124:\n        /* \"#utility.yul\":1956:1961   */\n      0x00\n        /* \"#utility.yul\":1994:2000   */\n      dup2\n        /* \"#utility.yul\":1981:2001   */\n      calldataload\n        /* \"#utility.yul\":1972:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2010:2043   */\n      tag_161\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2010:2043   */\n      tag_123\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1910:2049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2384   */\n    tag_34:\n        /* \"#utility.yul\":2114:2120   */\n      0x00\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2151:2160   */\n      dup3\n        /* \"#utility.yul\":2142:2149   */\n      dup5\n        /* \"#utility.yul\":2138:2161   */\n      sub\n        /* \"#utility.yul\":2134:2166   */\n      slt\n        /* \"#utility.yul\":2131:2250   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2169:2248   */\n      tag_164\n      tag_121\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2131:2250   */\n    tag_163:\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2314:2367   */\n      tag_165\n        /* \"#utility.yul\":2359:2366   */\n      dup5\n        /* \"#utility.yul\":2350:2356   */\n      dup3\n        /* \"#utility.yul\":2339:2348   */\n      dup6\n        /* \"#utility.yul\":2335:2357   */\n      add\n        /* \"#utility.yul\":2314:2367   */\n      tag_124\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2304:2367   */\n      swap2\n      pop\n        /* \"#utility.yul\":2260:2377   */\n      pop\n        /* \"#utility.yul\":2055:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_125:\n        /* \"#utility.yul\":2463:2487   */\n      tag_167\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_118\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_168:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_126:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_170\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_125\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_40:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_173\n      tag_121\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2739:2858   */\n    tag_172:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_174\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_126\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3167   */\n    tag_127:\n        /* \"#utility.yul\":3082:3093   */\n      0x00\n        /* \"#utility.yul\":3116:3122   */\n      dup3\n        /* \"#utility.yul\":3111:3114   */\n      dup3\n        /* \"#utility.yul\":3104:3123   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x20\n        /* \"#utility.yul\":3151:3154   */\n      dup3\n        /* \"#utility.yul\":3147:3161   */\n      add\n        /* \"#utility.yul\":3132:3161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3336   */\n    tag_128:\n        /* \"#utility.yul\":3313:3328   */\n      0x496e76616c696420707269636500000000000000000000000000000000000000\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3297:3311   */\n      add\n        /* \"#utility.yul\":3290:3329   */\n      mstore\n        /* \"#utility.yul\":3173:3336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3708   */\n    tag_129:\n        /* \"#utility.yul\":3484:3487   */\n      0x00\n        /* \"#utility.yul\":3505:3572   */\n      tag_178\n        /* \"#utility.yul\":3569:3571   */\n      0x0d\n        /* \"#utility.yul\":3564:3567   */\n      dup4\n        /* \"#utility.yul\":3505:3572   */\n      tag_127\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3498:3572   */\n      swap2\n      pop\n        /* \"#utility.yul\":3581:3674   */\n      tag_179\n        /* \"#utility.yul\":3670:3673   */\n      dup3\n        /* \"#utility.yul\":3581:3674   */\n      tag_128\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3699:3701   */\n      0x20\n        /* \"#utility.yul\":3694:3697   */\n      dup3\n        /* \"#utility.yul\":3690:3702   */\n      add\n        /* \"#utility.yul\":3683:3702   */\n      swap1\n      pop\n        /* \"#utility.yul\":3342:3708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:4133   */\n    tag_60:\n        /* \"#utility.yul\":3880:3884   */\n      0x00\n        /* \"#utility.yul\":3918:3920   */\n      0x20\n        /* \"#utility.yul\":3907:3916   */\n      dup3\n        /* \"#utility.yul\":3903:3921   */\n      add\n        /* \"#utility.yul\":3895:3921   */\n      swap1\n      pop\n        /* \"#utility.yul\":3967:3976   */\n      dup2\n        /* \"#utility.yul\":3961:3965   */\n      dup2\n        /* \"#utility.yul\":3957:3977   */\n      sub\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3942:3951   */\n      dup4\n        /* \"#utility.yul\":3938:3955   */\n      add\n        /* \"#utility.yul\":3931:3978   */\n      mstore\n        /* \"#utility.yul\":3995:4126   */\n      tag_181\n        /* \"#utility.yul\":4121:4125   */\n      dup2\n        /* \"#utility.yul\":3995:4126   */\n      tag_129\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3987:4126   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:4133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4319   */\n    tag_130:\n        /* \"#utility.yul\":4187:4264   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4184:4185   */\n      0x00\n        /* \"#utility.yul\":4177:4265   */\n      mstore\n        /* \"#utility.yul\":4284:4288   */\n      0x11\n        /* \"#utility.yul\":4281:4282   */\n      0x04\n        /* \"#utility.yul\":4274:4289   */\n      mstore\n        /* \"#utility.yul\":4308:4312   */\n      0x24\n        /* \"#utility.yul\":4305:4306   */\n      0x00\n        /* \"#utility.yul\":4298:4313   */\n      revert\n        /* \"#utility.yul\":4325:4519   */\n    tag_65:\n        /* \"#utility.yul\":4365:4369   */\n      0x00\n        /* \"#utility.yul\":4385:4405   */\n      tag_184\n        /* \"#utility.yul\":4403:4404   */\n      dup3\n        /* \"#utility.yul\":4385:4405   */\n      tag_113\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4380:4405   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4439   */\n      tag_185\n        /* \"#utility.yul\":4437:4438   */\n      dup4\n        /* \"#utility.yul\":4419:4439   */\n      tag_113\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4414:4439   */\n      swap3\n      pop\n        /* \"#utility.yul\":4463:4464   */\n      dup3\n        /* \"#utility.yul\":4460:4461   */\n      dup3\n        /* \"#utility.yul\":4456:4465   */\n      sub\n        /* \"#utility.yul\":4448:4465   */\n      swap1\n      pop\n        /* \"#utility.yul\":4487:4488   */\n      dup2\n        /* \"#utility.yul\":4481:4485   */\n      dup2\n        /* \"#utility.yul\":4478:4489   */\n      gt\n        /* \"#utility.yul\":4475:4512   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4492:4510   */\n      tag_187\n      tag_130\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4475:4512   */\n    tag_186:\n        /* \"#utility.yul\":4325:4519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4525:4935   */\n    tag_67:\n        /* \"#utility.yul\":4565:4572   */\n      0x00\n        /* \"#utility.yul\":4588:4608   */\n      tag_189\n        /* \"#utility.yul\":4606:4607   */\n      dup3\n        /* \"#utility.yul\":4588:4608   */\n      tag_113\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4583:4608   */\n      swap2\n      pop\n        /* \"#utility.yul\":4622:4642   */\n      tag_190\n        /* \"#utility.yul\":4640:4641   */\n      dup4\n        /* \"#utility.yul\":4622:4642   */\n      tag_113\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4617:4642   */\n      swap3\n      pop\n        /* \"#utility.yul\":4677:4678   */\n      dup3\n        /* \"#utility.yul\":4674:4675   */\n      dup3\n        /* \"#utility.yul\":4670:4679   */\n      mul\n        /* \"#utility.yul\":4699:4729   */\n      tag_191\n        /* \"#utility.yul\":4717:4728   */\n      dup2\n        /* \"#utility.yul\":4699:4729   */\n      tag_113\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4688:4729   */\n      swap2\n      pop\n        /* \"#utility.yul\":4878:4879   */\n      dup3\n        /* \"#utility.yul\":4869:4876   */\n      dup3\n        /* \"#utility.yul\":4865:4880   */\n      div\n        /* \"#utility.yul\":4862:4863   */\n      dup5\n        /* \"#utility.yul\":4859:4881   */\n      eq\n        /* \"#utility.yul\":4839:4840   */\n      dup4\n        /* \"#utility.yul\":4832:4841   */\n      iszero\n        /* \"#utility.yul\":4812:4895   */\n      or\n        /* \"#utility.yul\":4789:4928   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":4908:4926   */\n      tag_193\n      tag_130\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4789:4928   */\n    tag_192:\n        /* \"#utility.yul\":4573:4935   */\n      pop\n        /* \"#utility.yul\":4525:4935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4941:5121   */\n    tag_131:\n        /* \"#utility.yul\":4989:5066   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4986:4987   */\n      0x00\n        /* \"#utility.yul\":4979:5067   */\n      mstore\n        /* \"#utility.yul\":5086:5090   */\n      0x12\n        /* \"#utility.yul\":5083:5084   */\n      0x04\n        /* \"#utility.yul\":5076:5091   */\n      mstore\n        /* \"#utility.yul\":5110:5114   */\n      0x24\n        /* \"#utility.yul\":5107:5108   */\n      0x00\n        /* \"#utility.yul\":5100:5115   */\n      revert\n        /* \"#utility.yul\":5127:5312   */\n    tag_69:\n        /* \"#utility.yul\":5167:5168   */\n      0x00\n        /* \"#utility.yul\":5184:5204   */\n      tag_196\n        /* \"#utility.yul\":5202:5203   */\n      dup3\n        /* \"#utility.yul\":5184:5204   */\n      tag_113\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5179:5204   */\n      swap2\n      pop\n        /* \"#utility.yul\":5218:5238   */\n      tag_197\n        /* \"#utility.yul\":5236:5237   */\n      dup4\n        /* \"#utility.yul\":5218:5238   */\n      tag_113\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5213:5238   */\n      swap3\n      pop\n        /* \"#utility.yul\":5257:5258   */\n      dup3\n        /* \"#utility.yul\":5247:5282   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":5262:5280   */\n      tag_199\n      tag_131\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5247:5282   */\n    tag_198:\n        /* \"#utility.yul\":5304:5305   */\n      dup3\n        /* \"#utility.yul\":5301:5302   */\n      dup3\n        /* \"#utility.yul\":5297:5306   */\n      div\n        /* \"#utility.yul\":5292:5306   */\n      swap1\n      pop\n        /* \"#utility.yul\":5127:5312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5318:5484   */\n    tag_132:\n        /* \"#utility.yul\":5458:5476   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":5454:5455   */\n      0x00\n        /* \"#utility.yul\":5446:5452   */\n      dup3\n        /* \"#utility.yul\":5442:5456   */\n      add\n        /* \"#utility.yul\":5435:5477   */\n      mstore\n        /* \"#utility.yul\":5318:5484   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5490:5856   */\n    tag_133:\n        /* \"#utility.yul\":5632:5635   */\n      0x00\n        /* \"#utility.yul\":5653:5720   */\n      tag_202\n        /* \"#utility.yul\":5717:5719   */\n      0x10\n        /* \"#utility.yul\":5712:5715   */\n      dup4\n        /* \"#utility.yul\":5653:5720   */\n      tag_127\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5646:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5729:5822   */\n      tag_203\n        /* \"#utility.yul\":5818:5821   */\n      dup3\n        /* \"#utility.yul\":5729:5822   */\n      tag_132\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5847:5849   */\n      0x20\n        /* \"#utility.yul\":5842:5845   */\n      dup3\n        /* \"#utility.yul\":5838:5850   */\n      add\n        /* \"#utility.yul\":5831:5850   */\n      swap1\n      pop\n        /* \"#utility.yul\":5490:5856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5862:6281   */\n    tag_106:\n        /* \"#utility.yul\":6028:6032   */\n      0x00\n        /* \"#utility.yul\":6066:6068   */\n      0x20\n        /* \"#utility.yul\":6055:6064   */\n      dup3\n        /* \"#utility.yul\":6051:6069   */\n      add\n        /* \"#utility.yul\":6043:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6124   */\n      dup2\n        /* \"#utility.yul\":6109:6113   */\n      dup2\n        /* \"#utility.yul\":6105:6125   */\n      sub\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6090:6099   */\n      dup4\n        /* \"#utility.yul\":6086:6103   */\n      add\n        /* \"#utility.yul\":6079:6126   */\n      mstore\n        /* \"#utility.yul\":6143:6274   */\n      tag_205\n        /* \"#utility.yul\":6269:6273   */\n      dup2\n        /* \"#utility.yul\":6143:6274   */\n      tag_133\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6135:6274   */\n      swap1\n      pop\n        /* \"#utility.yul\":5862:6281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6287:6457   */\n    tag_134:\n        /* \"#utility.yul\":6427:6449   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":6423:6424   */\n      0x00\n        /* \"#utility.yul\":6415:6421   */\n      dup3\n        /* \"#utility.yul\":6411:6425   */\n      add\n        /* \"#utility.yul\":6404:6450   */\n      mstore\n        /* \"#utility.yul\":6287:6457   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6829   */\n    tag_135:\n        /* \"#utility.yul\":6605:6608   */\n      0x00\n        /* \"#utility.yul\":6626:6693   */\n      tag_208\n        /* \"#utility.yul\":6690:6692   */\n      0x14\n        /* \"#utility.yul\":6685:6688   */\n      dup4\n        /* \"#utility.yul\":6626:6693   */\n      tag_127\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6619:6693   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6795   */\n      tag_209\n        /* \"#utility.yul\":6791:6794   */\n      dup3\n        /* \"#utility.yul\":6702:6795   */\n      tag_134\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6820:6822   */\n      0x20\n        /* \"#utility.yul\":6815:6818   */\n      dup3\n        /* \"#utility.yul\":6811:6823   */\n      add\n        /* \"#utility.yul\":6804:6823   */\n      swap1\n      pop\n        /* \"#utility.yul\":6463:6829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7254   */\n    tag_112:\n        /* \"#utility.yul\":7001:7005   */\n      0x00\n        /* \"#utility.yul\":7039:7041   */\n      0x20\n        /* \"#utility.yul\":7028:7037   */\n      dup3\n        /* \"#utility.yul\":7024:7042   */\n      add\n        /* \"#utility.yul\":7016:7042   */\n      swap1\n      pop\n        /* \"#utility.yul\":7088:7097   */\n      dup2\n        /* \"#utility.yul\":7082:7086   */\n      dup2\n        /* \"#utility.yul\":7078:7098   */\n      sub\n        /* \"#utility.yul\":7074:7075   */\n      0x00\n        /* \"#utility.yul\":7063:7072   */\n      dup4\n        /* \"#utility.yul\":7059:7076   */\n      add\n        /* \"#utility.yul\":7052:7099   */\n      mstore\n        /* \"#utility.yul\":7116:7247   */\n      tag_211\n        /* \"#utility.yul\":7242:7246   */\n      dup2\n        /* \"#utility.yul\":7116:7247   */\n      tag_135\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7108:7247   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:7254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e44b1c5fbfe8ab0f66608fb099911766f0337a9f8fa6d1500b9c68e06074a36464736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 215,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1634:4",
										"nodeType": "YulBlock",
										"src": "0:1634:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "608:80:4",
													"nodeType": "YulBlock",
													"src": "608:80:4",
													"statements": [
														{
															"nativeSrc": "618:22:4",
															"nodeType": "YulAssignment",
															"src": "618:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																},
																"nativeSrc": "627:13:4",
																"nodeType": "YulFunctionCall",
																"src": "627:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:4"
																},
																"nativeSrc": "649:33:4",
																"nodeType": "YulFunctionCall",
																"src": "649:33:4"
															},
															"nativeSrc": "649:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:4",
														"nodeType": "YulTypedName",
														"src": "586:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:4",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:4",
														"nodeType": "YulTypedName",
														"src": "602:5:4",
														"type": ""
													}
												],
												"src": "545:143:4"
											},
											{
												"body": {
													"nativeSrc": "771:274:4",
													"nodeType": "YulBlock",
													"src": "771:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:4",
																"nodeType": "YulBlock",
																"src": "817:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:4"
																			},
																			"nativeSrc": "819:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:4"
																		},
																		"nativeSrc": "819:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:4"
																		},
																		"nativeSrc": "788:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:4",
																		"nodeType": "YulLiteral",
																		"src": "813:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:4"
																},
																"nativeSrc": "784:32:4",
																"nodeType": "YulFunctionCall",
																"src": "784:32:4"
															},
															"nativeSrc": "781:119:4",
															"nodeType": "YulIf",
															"src": "781:119:4"
														},
														{
															"nativeSrc": "910:128:4",
															"nodeType": "YulBlock",
															"src": "910:128:4",
															"statements": [
																{
																	"nativeSrc": "925:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:4",
																		"nodeType": "YulLiteral",
																		"src": "939:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:4",
																			"nodeType": "YulTypedName",
																			"src": "929:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:4",
																	"nodeType": "YulAssignment",
																	"src": "954:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:4"
																				},
																				"nativeSrc": "996:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:4"
																		},
																		"nativeSrc": "964:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:4",
														"nodeType": "YulTypedName",
														"src": "741:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:4",
														"nodeType": "YulTypedName",
														"src": "752:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:4",
														"nodeType": "YulTypedName",
														"src": "764:6:4",
														"type": ""
													}
												],
												"src": "694:351:4"
											},
											{
												"body": {
													"nativeSrc": "1096:81:4",
													"nodeType": "YulBlock",
													"src": "1096:81:4",
													"statements": [
														{
															"nativeSrc": "1106:65:4",
															"nodeType": "YulAssignment",
															"src": "1106:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1121:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1121:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1128:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1128:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1117:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:4"
																},
																"nativeSrc": "1117:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1117:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1106:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1106:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1051:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:4",
														"nodeType": "YulTypedName",
														"src": "1078:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1088:7:4",
														"nodeType": "YulTypedName",
														"src": "1088:7:4",
														"type": ""
													}
												],
												"src": "1051:126:4"
											},
											{
												"body": {
													"nativeSrc": "1228:51:4",
													"nodeType": "YulBlock",
													"src": "1228:51:4",
													"statements": [
														{
															"nativeSrc": "1238:35:4",
															"nodeType": "YulAssignment",
															"src": "1238:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1267:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1267:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1249:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1249:17:4"
																},
																"nativeSrc": "1249:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1249:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1238:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1238:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1183:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1210:5:4",
														"nodeType": "YulTypedName",
														"src": "1210:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1220:7:4",
														"nodeType": "YulTypedName",
														"src": "1220:7:4",
														"type": ""
													}
												],
												"src": "1183:96:4"
											},
											{
												"body": {
													"nativeSrc": "1350:53:4",
													"nodeType": "YulBlock",
													"src": "1350:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1390:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1390:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1372:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1372:17:4"
																		},
																		"nativeSrc": "1372:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:4"
																},
																"nativeSrc": "1360:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1360:37:4"
															},
															"nativeSrc": "1360:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1360:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1285:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:4",
														"nodeType": "YulTypedName",
														"src": "1338:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:4",
														"nodeType": "YulTypedName",
														"src": "1345:3:4",
														"type": ""
													}
												],
												"src": "1285:118:4"
											},
											{
												"body": {
													"nativeSrc": "1507:124:4",
													"nodeType": "YulBlock",
													"src": "1507:124:4",
													"statements": [
														{
															"nativeSrc": "1517:26:4",
															"nodeType": "YulAssignment",
															"src": "1517:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1529:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1529:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1540:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1525:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:4"
																},
																"nativeSrc": "1525:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1525:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1517:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1517:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1597:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1610:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1621:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1606:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:4"
																		},
																		"nativeSrc": "1606:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1553:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:4"
																},
																"nativeSrc": "1553:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1553:71:4"
															},
															"nativeSrc": "1553:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1553:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1409:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1479:9:4",
														"nodeType": "YulTypedName",
														"src": "1479:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1491:6:4",
														"nodeType": "YulTypedName",
														"src": "1491:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1502:4:4",
														"nodeType": "YulTypedName",
														"src": "1502:4:4",
														"type": ""
													}
												],
												"src": "1409:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610bfb380380610bfb833981810160405281019061003191906101d1565b335f5f5f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ba575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b1919061023b565b60405180910390fd5b6100c9816100d760201b60201c565b508060028190555050610254565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f819050919050565b6101b08161019e565b81146101ba575f5ffd5b50565b5f815190506101cb816101a7565b92915050565b5f602082840312156101e6576101e561019a565b5b5f6101f3848285016101bd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610225826101fc565b9050919050565b6102358161021b565b82525050565b5f60208201905061024e5f83018461022c565b92915050565b61099a806102615f395ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063715018a611610064578063715018a6146100f95780638da5cb5b14610103578063c7f898f014610121578063e0c70b661461013d578063f2fde38b1461014757610091565b8063053f14da146100955780633f4ba83a146100b357806342cde4e8146100bd5780635c975abb146100db575b5f5ffd5b61009d610163565b6040516100aa91906105cc565b60405180910390f35b6100bb610169565b005b6100c561017b565b6040516100d291906105cc565b60405180910390f35b6100e3610181565b6040516100f091906105ff565b60405180910390f35b610101610195565b005b61010b6101a8565b6040516101189190610657565b60405180910390f35b61013b6004803603810190610136919061069e565b6101d0565b005b610145610281565b005b610161600480360381019061015c91906106f3565b61028b565b005b60015481565b61017161030f565b610179610396565b565b60025481565b5f5f5f9054906101000a900460ff16905090565b61019d61030f565b6101a65f6103f6565b565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d861030f565b5f811161021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610778565b60405180910390fd5b5f6001541115610277575f8160015411610234575f610243565b8160015461024291906107c3565b5b90505f60015460648361025691906107f6565b6102609190610864565b90506002548110610274576102736104b9565b5b50505b8060018190555050565b61028961051a565b565b61029361030f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610303575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102fa9190610657565b60405180910390fd5b61030c816103f6565b50565b610317610564565b73ffffffffffffffffffffffffffffffffffffffff166103356101a8565b73ffffffffffffffffffffffffffffffffffffffff161461039457610358610564565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161038b9190610657565b60405180910390fd5b565b61039e61056b565b5f5f5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6103df610564565b6040516103ec9190610657565b60405180910390a1565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6104c161051a565b60015f5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610503610564565b6040516105109190610657565b60405180910390a1565b610522610181565b15610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906108de565b60405180910390fd5b565b5f33905090565b610573610181565b6105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610946565b60405180910390fd5b565b5f819050919050565b6105c6816105b4565b82525050565b5f6020820190506105df5f8301846105bd565b92915050565b5f8115159050919050565b6105f9816105e5565b82525050565b5f6020820190506106125f8301846105f0565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61064182610618565b9050919050565b61065181610637565b82525050565b5f60208201905061066a5f830184610648565b92915050565b5f5ffd5b61067d816105b4565b8114610687575f5ffd5b50565b5f8135905061069881610674565b92915050565b5f602082840312156106b3576106b2610670565b5b5f6106c08482850161068a565b91505092915050565b6106d281610637565b81146106dc575f5ffd5b50565b5f813590506106ed816106c9565b92915050565b5f6020828403121561070857610707610670565b5b5f610715848285016106df565b91505092915050565b5f82825260208201905092915050565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f610762600d8361071e565b915061076d8261072e565b602082019050919050565b5f6020820190508181035f83015261078f81610756565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107cd826105b4565b91506107d8836105b4565b92508282039050818111156107f0576107ef610796565b5b92915050565b5f610800826105b4565b915061080b836105b4565b9250828202610819816105b4565b915082820484148315176108305761082f610796565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61086e826105b4565b9150610879836105b4565b92508261088957610888610837565b5b828204905092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6108c860108361071e565b91506108d382610894565b602082019050919050565b5f6020820190508181035f8301526108f5816108bc565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61093060148361071e565b915061093b826108fc565b602082019050919050565b5f6020820190508181035f83015261095d81610924565b905091905056fea2646970667358221220e44b1c5fbfe8ab0f66608fb099911766f0337a9f8fa6d1500b9c68e06074a36464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBFB CODESIZE SUB DUP1 PUSH2 0xBFB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1D1 JUMP JUMPDEST CALLER PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9 DUP2 PUSH2 0xD7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0x254 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0 DUP2 PUSH2 0x19E JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CB DUP2 PUSH2 0x1A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x19A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x225 DUP3 PUSH2 0x1FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x235 DUP2 PUSH2 0x21B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24E PUSH0 DUP4 ADD DUP5 PUSH2 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x99A DUP1 PUSH2 0x261 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xC7F898F0 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xE0C70B66 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x147 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xDB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x195 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x69E JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x281 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x179 PUSH2 0x396 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x30F JUMP JUMPDEST PUSH2 0x1A6 PUSH0 PUSH2 0x3F6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x30F JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x277 JUMPI PUSH0 DUP2 PUSH1 0x1 SLOAD GT PUSH2 0x234 JUMPI PUSH0 PUSH2 0x243 JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD PUSH1 0x64 DUP4 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT PUSH2 0x274 JUMPI PUSH2 0x273 PUSH2 0x4B9 JUMP JUMPDEST JUMPDEST POP POP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x289 PUSH2 0x51A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x303 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30C DUP2 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x317 PUSH2 0x564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x335 PUSH2 0x1A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x394 JUMPI PUSH2 0x358 PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x39E PUSH2 0x56B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3DF PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x503 PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x522 PUSH2 0x181 JUMP JUMPDEST ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x573 PUSH2 0x181 JUMP JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C6 DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DF PUSH0 DUP4 ADD DUP5 PUSH2 0x5BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F9 DUP2 PUSH2 0x5E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x612 PUSH0 DUP4 ADD DUP5 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x641 DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x637 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x66A PUSH0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x67D DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x687 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x698 DUP2 PUSH2 0x674 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x670 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C0 DUP5 DUP3 DUP6 ADD PUSH2 0x68A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D2 DUP2 PUSH2 0x637 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6ED DUP2 PUSH2 0x6C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0x670 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x715 DUP5 DUP3 DUP6 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x762 PUSH1 0xD DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x76D DUP3 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x78F DUP2 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7CD DUP3 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D8 DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x796 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x800 DUP3 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x80B DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x819 DUP2 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x830 JUMPI PUSH2 0x82F PUSH2 0x796 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x86E DUP3 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x879 DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x837 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8C8 PUSH1 0x10 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x8D3 DUP3 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8F5 DUP2 PUSH2 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x930 PUSH1 0x14 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x93B DUP3 PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x95D DUP2 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETF 0x4B SHR PUSH0 0xBF 0xE8 0xAB 0xF PUSH7 0x608FB099911766 CREATE CALLER PUSH27 0x9F8FA6D1500B9C68E06074A36464736F6C634300081D0033000000 ",
							"sourceMap": "168:771:3:-:0;;;285:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;325:10;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;359:10:3::1;347:9;:22;;;;285:91:::0;168:771;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:126::-;1088:7;1128:42;1121:5;1117:54;1106:65;;1051:126;;;:::o;1183:96::-;1220:7;1249:24;1267:5;1249:24;:::i;:::-;1238:35;;1183:96;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;168:771:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 783,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_267": {
									"entryPoint": 1380,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_238": {
									"entryPoint": 1209,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_211": {
									"entryPoint": 1306,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_222": {
									"entryPoint": 1387,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1014,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_254": {
									"entryPoint": 918,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeTrade_369": {
									"entryPoint": 641,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastPrice_295": {
									"entryPoint": 355,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 424,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_199": {
									"entryPoint": 385,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 405,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reportPrice_363": {
									"entryPoint": 464,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@threshold_297": {
									"entryPoint": 379,
									"id": 297,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 651,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_378": {
									"entryPoint": 361,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7257:4",
										"nodeType": "YulBlock",
										"src": "0:7257:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:4",
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nativeSrc": "62:16:4",
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:4",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nativeSrc": "155:53:4",
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nativeSrc": "177:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nativeSrc": "165:37:4",
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nativeSrc": "165:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:4",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:4",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nativeSrc": "312:124:4",
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nativeSrc": "322:26:4",
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:4",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nativeSrc": "330:18:4",
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:4",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nativeSrc": "411:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nativeSrc": "358:71:4",
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nativeSrc": "358:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:4",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:4",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:4",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nativeSrc": "484:48:4",
													"nodeType": "YulBlock",
													"src": "484:48:4",
													"statements": [
														{
															"nativeSrc": "494:32:4",
															"nodeType": "YulAssignment",
															"src": "494:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "519:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "512:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "512:6:4"
																		},
																		"nativeSrc": "512:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "512:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "505:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:4"
																},
																"nativeSrc": "505:21:4",
																"nodeType": "YulFunctionCall",
																"src": "505:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "494:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "494:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "442:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "466:5:4",
														"nodeType": "YulTypedName",
														"src": "466:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "476:7:4",
														"nodeType": "YulTypedName",
														"src": "476:7:4",
														"type": ""
													}
												],
												"src": "442:90:4"
											},
											{
												"body": {
													"nativeSrc": "597:50:4",
													"nodeType": "YulBlock",
													"src": "597:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "614:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "614:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "619:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "619:14:4"
																		},
																		"nativeSrc": "619:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "619:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "607:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:4"
																},
																"nativeSrc": "607:34:4",
																"nodeType": "YulFunctionCall",
																"src": "607:34:4"
															},
															"nativeSrc": "607:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "607:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "538:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "585:5:4",
														"nodeType": "YulTypedName",
														"src": "585:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "592:3:4",
														"nodeType": "YulTypedName",
														"src": "592:3:4",
														"type": ""
													}
												],
												"src": "538:109:4"
											},
											{
												"body": {
													"nativeSrc": "745:118:4",
													"nodeType": "YulBlock",
													"src": "745:118:4",
													"statements": [
														{
															"nativeSrc": "755:26:4",
															"nodeType": "YulAssignment",
															"src": "755:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "767:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "767:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:2:4",
																		"nodeType": "YulLiteral",
																		"src": "778:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "763:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:4"
																},
																"nativeSrc": "763:18:4",
																"nodeType": "YulFunctionCall",
																"src": "763:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "755:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "755:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "829:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:1:4",
																				"nodeType": "YulLiteral",
																				"src": "853:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:4"
																		},
																		"nativeSrc": "838:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "791:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "791:37:4"
																},
																"nativeSrc": "791:65:4",
																"nodeType": "YulFunctionCall",
																"src": "791:65:4"
															},
															"nativeSrc": "791:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "653:210:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "717:9:4",
														"nodeType": "YulTypedName",
														"src": "717:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "729:6:4",
														"nodeType": "YulTypedName",
														"src": "729:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "740:4:4",
														"nodeType": "YulTypedName",
														"src": "740:4:4",
														"type": ""
													}
												],
												"src": "653:210:4"
											},
											{
												"body": {
													"nativeSrc": "914:81:4",
													"nodeType": "YulBlock",
													"src": "914:81:4",
													"statements": [
														{
															"nativeSrc": "924:65:4",
															"nodeType": "YulAssignment",
															"src": "924:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "939:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "939:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "946:42:4",
																		"nodeType": "YulLiteral",
																		"src": "946:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:54:4",
																"nodeType": "YulFunctionCall",
																"src": "935:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "924:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "924:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "869:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "896:5:4",
														"nodeType": "YulTypedName",
														"src": "896:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "906:7:4",
														"nodeType": "YulTypedName",
														"src": "906:7:4",
														"type": ""
													}
												],
												"src": "869:126:4"
											},
											{
												"body": {
													"nativeSrc": "1046:51:4",
													"nodeType": "YulBlock",
													"src": "1046:51:4",
													"statements": [
														{
															"nativeSrc": "1056:35:4",
															"nodeType": "YulAssignment",
															"src": "1056:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1085:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1085:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1067:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1067:17:4"
																},
																"nativeSrc": "1067:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1067:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1056:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1056:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1001:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1028:5:4",
														"nodeType": "YulTypedName",
														"src": "1028:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1038:7:4",
														"nodeType": "YulTypedName",
														"src": "1038:7:4",
														"type": ""
													}
												],
												"src": "1001:96:4"
											},
											{
												"body": {
													"nativeSrc": "1168:53:4",
													"nodeType": "YulBlock",
													"src": "1168:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1185:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1185:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1208:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1208:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1190:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1190:17:4"
																		},
																		"nativeSrc": "1190:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1190:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1178:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:4"
																},
																"nativeSrc": "1178:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1178:37:4"
															},
															"nativeSrc": "1178:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1178:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1103:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1156:5:4",
														"nodeType": "YulTypedName",
														"src": "1156:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1163:3:4",
														"nodeType": "YulTypedName",
														"src": "1163:3:4",
														"type": ""
													}
												],
												"src": "1103:118:4"
											},
											{
												"body": {
													"nativeSrc": "1325:124:4",
													"nodeType": "YulBlock",
													"src": "1325:124:4",
													"statements": [
														{
															"nativeSrc": "1335:26:4",
															"nodeType": "YulAssignment",
															"src": "1335:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1347:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1347:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1343:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:4"
																},
																"nativeSrc": "1343:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1343:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1335:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1335:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1424:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:4"
																		},
																		"nativeSrc": "1424:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1371:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1371:43:4"
																},
																"nativeSrc": "1371:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1371:71:4"
															},
															"nativeSrc": "1371:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1371:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1227:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1297:9:4",
														"nodeType": "YulTypedName",
														"src": "1297:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1309:6:4",
														"nodeType": "YulTypedName",
														"src": "1309:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1320:4:4",
														"nodeType": "YulTypedName",
														"src": "1320:4:4",
														"type": ""
													}
												],
												"src": "1227:222:4"
											},
											{
												"body": {
													"nativeSrc": "1495:35:4",
													"nodeType": "YulBlock",
													"src": "1495:35:4",
													"statements": [
														{
															"nativeSrc": "1505:19:4",
															"nodeType": "YulAssignment",
															"src": "1505:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1521:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1515:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1515:5:4"
																},
																"nativeSrc": "1515:9:4",
																"nodeType": "YulFunctionCall",
																"src": "1515:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1505:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1455:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1488:6:4",
														"nodeType": "YulTypedName",
														"src": "1488:6:4",
														"type": ""
													}
												],
												"src": "1455:75:4"
											},
											{
												"body": {
													"nativeSrc": "1625:28:4",
													"nodeType": "YulBlock",
													"src": "1625:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1642:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1645:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1635:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:4"
																},
																"nativeSrc": "1635:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1635:12:4"
															},
															"nativeSrc": "1635:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1635:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1536:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1536:117:4"
											},
											{
												"body": {
													"nativeSrc": "1748:28:4",
													"nodeType": "YulBlock",
													"src": "1748:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1765:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1768:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1768:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1758:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:4"
																},
																"nativeSrc": "1758:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1758:12:4"
															},
															"nativeSrc": "1758:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1758:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1659:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:117:4"
											},
											{
												"body": {
													"nativeSrc": "1825:79:4",
													"nodeType": "YulBlock",
													"src": "1825:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1882:16:4",
																"nodeType": "YulBlock",
																"src": "1882:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1891:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1894:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1884:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:4"
																			},
																			"nativeSrc": "1884:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:4"
																		},
																		"nativeSrc": "1884:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1848:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1873:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1873:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1855:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1855:17:4"
																				},
																				"nativeSrc": "1855:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1855:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1845:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1845:2:4"
																		},
																		"nativeSrc": "1845:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1845:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1838:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:4"
																},
																"nativeSrc": "1838:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1838:43:4"
															},
															"nativeSrc": "1835:63:4",
															"nodeType": "YulIf",
															"src": "1835:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1782:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1818:5:4",
														"nodeType": "YulTypedName",
														"src": "1818:5:4",
														"type": ""
													}
												],
												"src": "1782:122:4"
											},
											{
												"body": {
													"nativeSrc": "1962:87:4",
													"nodeType": "YulBlock",
													"src": "1962:87:4",
													"statements": [
														{
															"nativeSrc": "1972:29:4",
															"nodeType": "YulAssignment",
															"src": "1972:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1994:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1994:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1981:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:4"
																},
																"nativeSrc": "1981:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1981:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1972:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1972:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2037:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2037:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2010:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2010:26:4"
																},
																"nativeSrc": "2010:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2010:33:4"
															},
															"nativeSrc": "2010:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2010:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1910:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1940:6:4",
														"nodeType": "YulTypedName",
														"src": "1940:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1948:3:4",
														"nodeType": "YulTypedName",
														"src": "1948:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1956:5:4",
														"nodeType": "YulTypedName",
														"src": "1956:5:4",
														"type": ""
													}
												],
												"src": "1910:139:4"
											},
											{
												"body": {
													"nativeSrc": "2121:263:4",
													"nodeType": "YulBlock",
													"src": "2121:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2167:83:4",
																"nodeType": "YulBlock",
																"src": "2167:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2169:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2169:77:4"
																			},
																			"nativeSrc": "2169:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2169:79:4"
																		},
																		"nativeSrc": "2169:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2142:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2142:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2151:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2151:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2138:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:4"
																		},
																		"nativeSrc": "2138:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2163:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2134:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:4"
																},
																"nativeSrc": "2134:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2134:32:4"
															},
															"nativeSrc": "2131:119:4",
															"nodeType": "YulIf",
															"src": "2131:119:4"
														},
														{
															"nativeSrc": "2260:117:4",
															"nodeType": "YulBlock",
															"src": "2260:117:4",
															"statements": [
																{
																	"nativeSrc": "2275:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2275:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2289:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2289:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2279:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2279:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2304:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2304:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2339:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2339:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2350:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2350:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2335:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2335:3:4"
																				},
																				"nativeSrc": "2335:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2335:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2359:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2359:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2314:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2314:20:4"
																		},
																		"nativeSrc": "2314:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2314:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2304:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2304:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2055:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2091:9:4",
														"nodeType": "YulTypedName",
														"src": "2091:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2102:7:4",
														"nodeType": "YulTypedName",
														"src": "2102:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2114:6:4",
														"nodeType": "YulTypedName",
														"src": "2114:6:4",
														"type": ""
													}
												],
												"src": "2055:329:4"
											},
											{
												"body": {
													"nativeSrc": "2433:79:4",
													"nodeType": "YulBlock",
													"src": "2433:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2490:16:4",
																"nodeType": "YulBlock",
																"src": "2490:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2502:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2492:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:4"
																			},
																			"nativeSrc": "2492:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:4"
																		},
																		"nativeSrc": "2492:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2456:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2481:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2463:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:4"
																				},
																				"nativeSrc": "2463:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2453:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:4"
																		},
																		"nativeSrc": "2453:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2446:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:4"
																},
																"nativeSrc": "2446:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2446:43:4"
															},
															"nativeSrc": "2443:63:4",
															"nodeType": "YulIf",
															"src": "2443:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2390:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2426:5:4",
														"nodeType": "YulTypedName",
														"src": "2426:5:4",
														"type": ""
													}
												],
												"src": "2390:122:4"
											},
											{
												"body": {
													"nativeSrc": "2570:87:4",
													"nodeType": "YulBlock",
													"src": "2570:87:4",
													"statements": [
														{
															"nativeSrc": "2580:29:4",
															"nodeType": "YulAssignment",
															"src": "2580:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2602:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2589:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:4"
																},
																"nativeSrc": "2589:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2589:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2580:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2645:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2618:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:4"
																},
																"nativeSrc": "2618:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2618:33:4"
															},
															"nativeSrc": "2618:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2518:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2548:6:4",
														"nodeType": "YulTypedName",
														"src": "2548:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2556:3:4",
														"nodeType": "YulTypedName",
														"src": "2556:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2564:5:4",
														"nodeType": "YulTypedName",
														"src": "2564:5:4",
														"type": ""
													}
												],
												"src": "2518:139:4"
											},
											{
												"body": {
													"nativeSrc": "2729:263:4",
													"nodeType": "YulBlock",
													"src": "2729:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2775:83:4",
																"nodeType": "YulBlock",
																"src": "2775:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2777:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:4"
																			},
																			"nativeSrc": "2777:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:4"
																		},
																		"nativeSrc": "2777:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2746:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:4"
																		},
																		"nativeSrc": "2746:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2742:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:4"
																},
																"nativeSrc": "2742:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:4"
															},
															"nativeSrc": "2739:119:4",
															"nodeType": "YulIf",
															"src": "2739:119:4"
														},
														{
															"nativeSrc": "2868:117:4",
															"nodeType": "YulBlock",
															"src": "2868:117:4",
															"statements": [
																{
																	"nativeSrc": "2883:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2897:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2887:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2912:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2912:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2947:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2958:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2943:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:4"
																				},
																				"nativeSrc": "2943:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2967:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2922:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:4"
																		},
																		"nativeSrc": "2922:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2912:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2663:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2699:9:4",
														"nodeType": "YulTypedName",
														"src": "2699:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2710:7:4",
														"nodeType": "YulTypedName",
														"src": "2710:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2722:6:4",
														"nodeType": "YulTypedName",
														"src": "2722:6:4",
														"type": ""
													}
												],
												"src": "2663:329:4"
											},
											{
												"body": {
													"nativeSrc": "3094:73:4",
													"nodeType": "YulBlock",
													"src": "3094:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3111:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3116:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3104:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:4"
																},
																"nativeSrc": "3104:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3104:19:4"
															},
															"nativeSrc": "3104:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3104:19:4"
														},
														{
															"nativeSrc": "3132:29:4",
															"nodeType": "YulAssignment",
															"src": "3132:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3151:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3156:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3147:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:4"
																},
																"nativeSrc": "3147:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3147:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3132:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3132:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2998:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3066:3:4",
														"nodeType": "YulTypedName",
														"src": "3066:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3071:6:4",
														"nodeType": "YulTypedName",
														"src": "3071:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3082:11:4",
														"nodeType": "YulTypedName",
														"src": "3082:11:4",
														"type": ""
													}
												],
												"src": "2998:169:4"
											},
											{
												"body": {
													"nativeSrc": "3279:57:4",
													"nodeType": "YulBlock",
													"src": "3279:57:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3301:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3309:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3309:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3297:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:4"
																		},
																		"nativeSrc": "3297:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:14:4"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "3313:15:4",
																		"nodeType": "YulLiteral",
																		"src": "3313:15:4",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:4"
																},
																"nativeSrc": "3290:39:4",
																"nodeType": "YulFunctionCall",
																"src": "3290:39:4"
															},
															"nativeSrc": "3290:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "3290:39:4"
														}
													]
												},
												"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
												"nativeSrc": "3173:163:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3271:6:4",
														"nodeType": "YulTypedName",
														"src": "3271:6:4",
														"type": ""
													}
												],
												"src": "3173:163:4"
											},
											{
												"body": {
													"nativeSrc": "3488:220:4",
													"nodeType": "YulBlock",
													"src": "3488:220:4",
													"statements": [
														{
															"nativeSrc": "3498:74:4",
															"nodeType": "YulAssignment",
															"src": "3498:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3564:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3564:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3569:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3569:2:4",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3505:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "3505:58:4"
																},
																"nativeSrc": "3505:67:4",
																"nodeType": "YulFunctionCall",
																"src": "3505:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3498:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3670:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3670:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																	"nativeSrc": "3581:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "3581:88:4"
																},
																"nativeSrc": "3581:93:4",
																"nodeType": "YulFunctionCall",
																"src": "3581:93:4"
															},
															"nativeSrc": "3581:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "3581:93:4"
														},
														{
															"nativeSrc": "3683:19:4",
															"nodeType": "YulAssignment",
															"src": "3683:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3694:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3694:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3699:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3699:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3690:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3690:3:4"
																},
																"nativeSrc": "3690:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3690:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3683:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3683:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3342:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3476:3:4",
														"nodeType": "YulTypedName",
														"src": "3476:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3484:3:4",
														"nodeType": "YulTypedName",
														"src": "3484:3:4",
														"type": ""
													}
												],
												"src": "3342:366:4"
											},
											{
												"body": {
													"nativeSrc": "3885:248:4",
													"nodeType": "YulBlock",
													"src": "3885:248:4",
													"statements": [
														{
															"nativeSrc": "3895:26:4",
															"nodeType": "YulAssignment",
															"src": "3895:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3907:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3907:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3918:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3918:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3903:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3903:3:4"
																},
																"nativeSrc": "3903:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3903:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3895:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3895:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3942:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3942:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3953:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3953:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3938:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:4"
																		},
																		"nativeSrc": "3938:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3938:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3961:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "3961:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3967:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3967:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3957:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:4"
																		},
																		"nativeSrc": "3957:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3957:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3931:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:4"
																},
																"nativeSrc": "3931:47:4",
																"nodeType": "YulFunctionCall",
																"src": "3931:47:4"
															},
															"nativeSrc": "3931:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "3931:47:4"
														},
														{
															"nativeSrc": "3987:139:4",
															"nodeType": "YulAssignment",
															"src": "3987:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4121:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4121:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3995:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "3995:124:4"
																},
																"nativeSrc": "3995:131:4",
																"nodeType": "YulFunctionCall",
																"src": "3995:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3987:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3987:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3714:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3865:9:4",
														"nodeType": "YulTypedName",
														"src": "3865:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3880:4:4",
														"nodeType": "YulTypedName",
														"src": "3880:4:4",
														"type": ""
													}
												],
												"src": "3714:419:4"
											},
											{
												"body": {
													"nativeSrc": "4167:152:4",
													"nodeType": "YulBlock",
													"src": "4167:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4184:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4184:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:77:4",
																		"nodeType": "YulLiteral",
																		"src": "4187:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4177:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:4"
																},
																"nativeSrc": "4177:88:4",
																"nodeType": "YulFunctionCall",
																"src": "4177:88:4"
															},
															"nativeSrc": "4177:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "4177:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4281:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4281:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4284:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4284:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4274:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4274:6:4"
																},
																"nativeSrc": "4274:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4274:15:4"
															},
															"nativeSrc": "4274:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4274:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4305:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4305:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4308:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4308:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4298:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:4"
																},
																"nativeSrc": "4298:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4298:15:4"
															},
															"nativeSrc": "4298:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4298:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4139:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "4139:180:4"
											},
											{
												"body": {
													"nativeSrc": "4370:149:4",
													"nodeType": "YulBlock",
													"src": "4370:149:4",
													"statements": [
														{
															"nativeSrc": "4380:25:4",
															"nodeType": "YulAssignment",
															"src": "4380:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4403:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4403:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4385:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4385:17:4"
																},
																"nativeSrc": "4385:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4385:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4380:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4380:1:4"
																}
															]
														},
														{
															"nativeSrc": "4414:25:4",
															"nodeType": "YulAssignment",
															"src": "4414:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4437:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4437:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4419:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4419:17:4"
																},
																"nativeSrc": "4419:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4419:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4414:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4414:1:4"
																}
															]
														},
														{
															"nativeSrc": "4448:17:4",
															"nodeType": "YulAssignment",
															"src": "4448:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4460:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4460:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4463:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4463:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4456:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4456:3:4"
																},
																"nativeSrc": "4456:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4456:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4448:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4448:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4490:22:4",
																"nodeType": "YulBlock",
																"src": "4490:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4492:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4492:16:4"
																			},
																			"nativeSrc": "4492:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4492:18:4"
																		},
																		"nativeSrc": "4492:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4492:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4481:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4481:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4487:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4487:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4478:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4478:2:4"
																},
																"nativeSrc": "4478:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4478:11:4"
															},
															"nativeSrc": "4475:37:4",
															"nodeType": "YulIf",
															"src": "4475:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4325:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4356:1:4",
														"nodeType": "YulTypedName",
														"src": "4356:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4359:1:4",
														"nodeType": "YulTypedName",
														"src": "4359:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4365:4:4",
														"nodeType": "YulTypedName",
														"src": "4365:4:4",
														"type": ""
													}
												],
												"src": "4325:194:4"
											},
											{
												"body": {
													"nativeSrc": "4573:362:4",
													"nodeType": "YulBlock",
													"src": "4573:362:4",
													"statements": [
														{
															"nativeSrc": "4583:25:4",
															"nodeType": "YulAssignment",
															"src": "4583:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4606:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4606:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4588:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4588:17:4"
																},
																"nativeSrc": "4588:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4588:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4583:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4583:1:4"
																}
															]
														},
														{
															"nativeSrc": "4617:25:4",
															"nodeType": "YulAssignment",
															"src": "4617:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4640:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4640:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4622:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4622:17:4"
																},
																"nativeSrc": "4622:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4622:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4617:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4617:1:4"
																}
															]
														},
														{
															"nativeSrc": "4651:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4651:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4674:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4674:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4677:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4677:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4670:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:4"
																},
																"nativeSrc": "4670:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4670:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4655:11:4",
																	"nodeType": "YulTypedName",
																	"src": "4655:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4688:41:4",
															"nodeType": "YulAssignment",
															"src": "4688:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4717:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "4717:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4699:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4699:17:4"
																},
																"nativeSrc": "4699:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4699:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4688:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4688:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4906:22:4",
																"nodeType": "YulBlock",
																"src": "4906:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4908:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4908:16:4"
																			},
																			"nativeSrc": "4908:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4908:18:4"
																		},
																		"nativeSrc": "4908:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4908:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4839:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4839:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4832:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "4832:6:4"
																				},
																				"nativeSrc": "4832:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4832:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4862:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4862:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4869:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "4869:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4878:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "4878:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4865:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4865:3:4"
																						},
																						"nativeSrc": "4865:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4865:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4859:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4859:2:4"
																				},
																				"nativeSrc": "4859:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4859:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4812:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4812:2:4"
																		},
																		"nativeSrc": "4812:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4812:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4792:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:4"
																},
																"nativeSrc": "4792:113:4",
																"nodeType": "YulFunctionCall",
																"src": "4792:113:4"
															},
															"nativeSrc": "4789:139:4",
															"nodeType": "YulIf",
															"src": "4789:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4525:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4556:1:4",
														"nodeType": "YulTypedName",
														"src": "4556:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4559:1:4",
														"nodeType": "YulTypedName",
														"src": "4559:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4565:7:4",
														"nodeType": "YulTypedName",
														"src": "4565:7:4",
														"type": ""
													}
												],
												"src": "4525:410:4"
											},
											{
												"body": {
													"nativeSrc": "4969:152:4",
													"nodeType": "YulBlock",
													"src": "4969:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4986:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4986:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4989:77:4",
																		"nodeType": "YulLiteral",
																		"src": "4989:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4979:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4979:6:4"
																},
																"nativeSrc": "4979:88:4",
																"nodeType": "YulFunctionCall",
																"src": "4979:88:4"
															},
															"nativeSrc": "4979:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "4979:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5083:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5086:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5086:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5076:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:4"
																},
																"nativeSrc": "5076:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5076:15:4"
															},
															"nativeSrc": "5076:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5076:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5107:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5110:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5100:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5100:6:4"
																},
																"nativeSrc": "5100:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5100:15:4"
															},
															"nativeSrc": "5100:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5100:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4941:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "4941:180:4"
											},
											{
												"body": {
													"nativeSrc": "5169:143:4",
													"nodeType": "YulBlock",
													"src": "5169:143:4",
													"statements": [
														{
															"nativeSrc": "5179:25:4",
															"nodeType": "YulAssignment",
															"src": "5179:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5202:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5202:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5184:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5184:17:4"
																},
																"nativeSrc": "5184:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5184:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5179:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5179:1:4"
																}
															]
														},
														{
															"nativeSrc": "5213:25:4",
															"nodeType": "YulAssignment",
															"src": "5213:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5236:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5236:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5218:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5218:17:4"
																},
																"nativeSrc": "5218:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5218:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5213:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5213:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5260:22:4",
																"nodeType": "YulBlock",
																"src": "5260:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5262:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5262:16:4"
																			},
																			"nativeSrc": "5262:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5262:18:4"
																		},
																		"nativeSrc": "5262:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5262:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5257:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5257:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5250:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:4"
																},
																"nativeSrc": "5250:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5250:9:4"
															},
															"nativeSrc": "5247:35:4",
															"nodeType": "YulIf",
															"src": "5247:35:4"
														},
														{
															"nativeSrc": "5292:14:4",
															"nodeType": "YulAssignment",
															"src": "5292:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5301:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5301:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5304:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5297:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5297:3:4"
																},
																"nativeSrc": "5297:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5297:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5292:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5292:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5127:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5158:1:4",
														"nodeType": "YulTypedName",
														"src": "5158:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5161:1:4",
														"nodeType": "YulTypedName",
														"src": "5161:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5167:1:4",
														"nodeType": "YulTypedName",
														"src": "5167:1:4",
														"type": ""
													}
												],
												"src": "5127:185:4"
											},
											{
												"body": {
													"nativeSrc": "5424:60:4",
													"nodeType": "YulBlock",
													"src": "5424:60:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5446:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5446:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5454:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5454:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5442:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5442:3:4"
																		},
																		"nativeSrc": "5442:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5442:14:4"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5458:18:4",
																		"nodeType": "YulLiteral",
																		"src": "5458:18:4",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5435:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5435:6:4"
																},
																"nativeSrc": "5435:42:4",
																"nodeType": "YulFunctionCall",
																"src": "5435:42:4"
															},
															"nativeSrc": "5435:42:4",
															"nodeType": "YulExpressionStatement",
															"src": "5435:42:4"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "5318:166:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5416:6:4",
														"nodeType": "YulTypedName",
														"src": "5416:6:4",
														"type": ""
													}
												],
												"src": "5318:166:4"
											},
											{
												"body": {
													"nativeSrc": "5636:220:4",
													"nodeType": "YulBlock",
													"src": "5636:220:4",
													"statements": [
														{
															"nativeSrc": "5646:74:4",
															"nodeType": "YulAssignment",
															"src": "5646:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5712:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5712:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5717:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5717:2:4",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5653:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "5653:58:4"
																},
																"nativeSrc": "5653:67:4",
																"nodeType": "YulFunctionCall",
																"src": "5653:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5646:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5818:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5818:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "5729:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "5729:88:4"
																},
																"nativeSrc": "5729:93:4",
																"nodeType": "YulFunctionCall",
																"src": "5729:93:4"
															},
															"nativeSrc": "5729:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "5729:93:4"
														},
														{
															"nativeSrc": "5831:19:4",
															"nodeType": "YulAssignment",
															"src": "5831:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5842:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5842:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5847:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5847:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5838:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:4"
																},
																"nativeSrc": "5838:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5838:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5831:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5831:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5490:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5624:3:4",
														"nodeType": "YulTypedName",
														"src": "5624:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5632:3:4",
														"nodeType": "YulTypedName",
														"src": "5632:3:4",
														"type": ""
													}
												],
												"src": "5490:366:4"
											},
											{
												"body": {
													"nativeSrc": "6033:248:4",
													"nodeType": "YulBlock",
													"src": "6033:248:4",
													"statements": [
														{
															"nativeSrc": "6043:26:4",
															"nodeType": "YulAssignment",
															"src": "6043:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6055:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6055:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6066:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6066:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6051:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6051:3:4"
																},
																"nativeSrc": "6051:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6051:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6043:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6043:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6090:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6101:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6101:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6086:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:4"
																		},
																		"nativeSrc": "6086:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6086:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6109:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6109:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6115:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6105:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6105:3:4"
																		},
																		"nativeSrc": "6105:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6105:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6079:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:4"
																},
																"nativeSrc": "6079:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6079:47:4"
															},
															"nativeSrc": "6079:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6079:47:4"
														},
														{
															"nativeSrc": "6135:139:4",
															"nodeType": "YulAssignment",
															"src": "6135:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6269:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6269:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6143:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6143:124:4"
																},
																"nativeSrc": "6143:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6143:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6135:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5862:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6013:9:4",
														"nodeType": "YulTypedName",
														"src": "6013:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6028:4:4",
														"nodeType": "YulTypedName",
														"src": "6028:4:4",
														"type": ""
													}
												],
												"src": "5862:419:4"
											},
											{
												"body": {
													"nativeSrc": "6393:64:4",
													"nodeType": "YulBlock",
													"src": "6393:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6415:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6415:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6423:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6423:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6411:3:4"
																		},
																		"nativeSrc": "6411:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6411:14:4"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "6427:22:4",
																		"nodeType": "YulLiteral",
																		"src": "6427:22:4",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6404:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:4"
																},
																"nativeSrc": "6404:46:4",
																"nodeType": "YulFunctionCall",
																"src": "6404:46:4"
															},
															"nativeSrc": "6404:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "6404:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "6287:170:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6385:6:4",
														"nodeType": "YulTypedName",
														"src": "6385:6:4",
														"type": ""
													}
												],
												"src": "6287:170:4"
											},
											{
												"body": {
													"nativeSrc": "6609:220:4",
													"nodeType": "YulBlock",
													"src": "6609:220:4",
													"statements": [
														{
															"nativeSrc": "6619:74:4",
															"nodeType": "YulAssignment",
															"src": "6619:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6685:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6685:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6690:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6690:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6626:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6626:58:4"
																},
																"nativeSrc": "6626:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6626:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6619:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6791:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6791:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "6702:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6702:88:4"
																},
																"nativeSrc": "6702:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6702:93:4"
															},
															"nativeSrc": "6702:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6702:93:4"
														},
														{
															"nativeSrc": "6804:19:4",
															"nodeType": "YulAssignment",
															"src": "6804:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6815:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6815:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6820:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6820:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6811:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6811:3:4"
																},
																"nativeSrc": "6811:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6811:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6804:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6804:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6463:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6597:3:4",
														"nodeType": "YulTypedName",
														"src": "6597:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6605:3:4",
														"nodeType": "YulTypedName",
														"src": "6605:3:4",
														"type": ""
													}
												],
												"src": "6463:366:4"
											},
											{
												"body": {
													"nativeSrc": "7006:248:4",
													"nodeType": "YulBlock",
													"src": "7006:248:4",
													"statements": [
														{
															"nativeSrc": "7016:26:4",
															"nodeType": "YulAssignment",
															"src": "7016:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7028:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7028:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7039:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7039:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7024:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7024:3:4"
																},
																"nativeSrc": "7024:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7024:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7016:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7016:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7063:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7063:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7074:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7074:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7059:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7059:3:4"
																		},
																		"nativeSrc": "7059:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7082:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7082:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7088:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7088:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7078:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:4"
																		},
																		"nativeSrc": "7078:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7052:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:4"
																},
																"nativeSrc": "7052:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7052:47:4"
															},
															"nativeSrc": "7052:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7052:47:4"
														},
														{
															"nativeSrc": "7108:139:4",
															"nodeType": "YulAssignment",
															"src": "7108:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7242:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7242:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7116:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7116:124:4"
																},
																"nativeSrc": "7116:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7116:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7108:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7108:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6835:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6986:9:4",
														"nodeType": "YulTypedName",
														"src": "6986:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7001:4:4",
														"nodeType": "YulTypedName",
														"src": "7001:4:4",
														"type": ""
													}
												],
												"src": "6835:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price\")\n\n    }\n\n    function abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063715018a611610064578063715018a6146100f95780638da5cb5b14610103578063c7f898f014610121578063e0c70b661461013d578063f2fde38b1461014757610091565b8063053f14da146100955780633f4ba83a146100b357806342cde4e8146100bd5780635c975abb146100db575b5f5ffd5b61009d610163565b6040516100aa91906105cc565b60405180910390f35b6100bb610169565b005b6100c561017b565b6040516100d291906105cc565b60405180910390f35b6100e3610181565b6040516100f091906105ff565b60405180910390f35b610101610195565b005b61010b6101a8565b6040516101189190610657565b60405180910390f35b61013b6004803603810190610136919061069e565b6101d0565b005b610145610281565b005b610161600480360381019061015c91906106f3565b61028b565b005b60015481565b61017161030f565b610179610396565b565b60025481565b5f5f5f9054906101000a900460ff16905090565b61019d61030f565b6101a65f6103f6565b565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d861030f565b5f811161021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610778565b60405180910390fd5b5f6001541115610277575f8160015411610234575f610243565b8160015461024291906107c3565b5b90505f60015460648361025691906107f6565b6102609190610864565b90506002548110610274576102736104b9565b5b50505b8060018190555050565b61028961051a565b565b61029361030f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610303575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102fa9190610657565b60405180910390fd5b61030c816103f6565b50565b610317610564565b73ffffffffffffffffffffffffffffffffffffffff166103356101a8565b73ffffffffffffffffffffffffffffffffffffffff161461039457610358610564565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161038b9190610657565b60405180910390fd5b565b61039e61056b565b5f5f5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6103df610564565b6040516103ec9190610657565b60405180910390a1565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6104c161051a565b60015f5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610503610564565b6040516105109190610657565b60405180910390a1565b610522610181565b15610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906108de565b60405180910390fd5b565b5f33905090565b610573610181565b6105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610946565b60405180910390fd5b565b5f819050919050565b6105c6816105b4565b82525050565b5f6020820190506105df5f8301846105bd565b92915050565b5f8115159050919050565b6105f9816105e5565b82525050565b5f6020820190506106125f8301846105f0565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61064182610618565b9050919050565b61065181610637565b82525050565b5f60208201905061066a5f830184610648565b92915050565b5f5ffd5b61067d816105b4565b8114610687575f5ffd5b50565b5f8135905061069881610674565b92915050565b5f602082840312156106b3576106b2610670565b5b5f6106c08482850161068a565b91505092915050565b6106d281610637565b81146106dc575f5ffd5b50565b5f813590506106ed816106c9565b92915050565b5f6020828403121561070857610707610670565b5b5f610715848285016106df565b91505092915050565b5f82825260208201905092915050565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f610762600d8361071e565b915061076d8261072e565b602082019050919050565b5f6020820190508181035f83015261078f81610756565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107cd826105b4565b91506107d8836105b4565b92508282039050818111156107f0576107ef610796565b5b92915050565b5f610800826105b4565b915061080b836105b4565b9250828202610819816105b4565b915082820484148315176108305761082f610796565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61086e826105b4565b9150610879836105b4565b92508261088957610888610837565b5b828204905092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6108c860108361071e565b91506108d382610894565b602082019050919050565b5f6020820190508181035f8301526108f5816108bc565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61093060148361071e565b915061093b826108fc565b602082019050919050565b5f6020820190508181035f83015261095d81610924565b905091905056fea2646970667358221220e44b1c5fbfe8ab0f66608fb099911766f0337a9f8fa6d1500b9c68e06074a36464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xC7F898F0 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xE0C70B66 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x147 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xDB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x195 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x69E JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x281 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x179 PUSH2 0x396 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x30F JUMP JUMPDEST PUSH2 0x1A6 PUSH0 PUSH2 0x3F6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x30F JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x277 JUMPI PUSH0 DUP2 PUSH1 0x1 SLOAD GT PUSH2 0x234 JUMPI PUSH0 PUSH2 0x243 JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD PUSH1 0x64 DUP4 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT PUSH2 0x274 JUMPI PUSH2 0x273 PUSH2 0x4B9 JUMP JUMPDEST JUMPDEST POP POP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x289 PUSH2 0x51A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x293 PUSH2 0x30F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x303 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30C DUP2 PUSH2 0x3F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x317 PUSH2 0x564 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x335 PUSH2 0x1A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x394 JUMPI PUSH2 0x358 PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x39E PUSH2 0x56B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x3DF PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x503 PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x522 PUSH2 0x181 JUMP JUMPDEST ISZERO PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x573 PUSH2 0x181 JUMP JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C6 DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DF PUSH0 DUP4 ADD DUP5 PUSH2 0x5BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F9 DUP2 PUSH2 0x5E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x612 PUSH0 DUP4 ADD DUP5 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x641 DUP3 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x637 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x66A PUSH0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x67D DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x687 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x698 DUP2 PUSH2 0x674 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x670 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C0 DUP5 DUP3 DUP6 ADD PUSH2 0x68A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D2 DUP2 PUSH2 0x637 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6ED DUP2 PUSH2 0x6C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0x670 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x715 DUP5 DUP3 DUP6 ADD PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x762 PUSH1 0xD DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x76D DUP3 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x78F DUP2 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7CD DUP3 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D8 DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x796 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x800 DUP3 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x80B DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x819 DUP2 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x830 JUMPI PUSH2 0x82F PUSH2 0x796 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x86E DUP3 PUSH2 0x5B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x879 DUP4 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x837 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8C8 PUSH1 0x10 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x8D3 DUP3 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8F5 DUP2 PUSH2 0x8BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x930 PUSH1 0x14 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x93B DUP3 PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x95D DUP2 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETF 0x4B SHR PUSH0 0xBF 0xE8 0xAB 0xF PUSH7 0x608FB099911766 CREATE CALLER PUSH27 0x9F8FA6D1500B9C68E06074A36464736F6C634300081D0033000000 ",
							"sourceMap": "168:771:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;872:65;;;:::i;:::-;;254:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:389:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;777:89;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;224:24:3;;;;:::o;872:65::-;1531:13:0;:11;:13::i;:::-;920:10:3::1;:8;:10::i;:::-;872:65::o:0;254:24::-;;;;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;382:389:3:-;1531:13:0;:11;:13::i;:::-;463:1:3::1;455:5;:9;447:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;509:1;497:9;;:13;493:244;;;526:12;553:5;541:9;;:17;:41;;581:1;541:41;;;573:5;561:9;;:17;;;;:::i;:::-;541:41;526:56;;596:19;633:9;;626:3;619:4;:10;;;;:::i;:::-;618:24;;;;:::i;:::-;596:46;;675:9;;660:11;:24;656:71;;704:8;:6;:8::i;:::-;656:71;512:225;;493:244;759:5;747:9;:17;;;;382:389:::0;:::o;777:89::-;1239:19:1;:17;:19::i;:::-;777:89:3:o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;869:126::-;906:7;946:42;939:5;935:54;924:65;;869:126;;;:::o;1001:96::-;1038:7;1067:24;1085:5;1067:24;:::i;:::-;1056:35;;1001:96;;;:::o;1103:118::-;1190:24;1208:5;1190:24;:::i;:::-;1185:3;1178:37;1103:118;;:::o;1227:222::-;1320:4;1358:2;1347:9;1343:18;1335:26;;1371:71;1439:1;1428:9;1424:17;1415:6;1371:71;:::i;:::-;1227:222;;;;:::o;1536:117::-;1645:1;1642;1635:12;1782:122;1855:24;1873:5;1855:24;:::i;:::-;1848:5;1845:35;1835:63;;1894:1;1891;1884:12;1835:63;1782:122;:::o;1910:139::-;1956:5;1994:6;1981:20;1972:29;;2010:33;2037:5;2010:33;:::i;:::-;1910:139;;;;:::o;2055:329::-;2114:6;2163:2;2151:9;2142:7;2138:23;2134:32;2131:119;;;2169:79;;:::i;:::-;2131:119;2289:1;2314:53;2359:7;2350:6;2339:9;2335:22;2314:53;:::i;:::-;2304:63;;2260:117;2055:329;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:169::-;3082:11;3116:6;3111:3;3104:19;3156:4;3151:3;3147:14;3132:29;;2998:169;;;;:::o;3173:163::-;3313:15;3309:1;3301:6;3297:14;3290:39;3173:163;:::o;3342:366::-;3484:3;3505:67;3569:2;3564:3;3505:67;:::i;:::-;3498:74;;3581:93;3670:3;3581:93;:::i;:::-;3699:2;3694:3;3690:12;3683:19;;3342:366;;;:::o;3714:419::-;3880:4;3918:2;3907:9;3903:18;3895:26;;3967:9;3961:4;3957:20;3953:1;3942:9;3938:17;3931:47;3995:131;4121:4;3995:131;:::i;:::-;3987:139;;3714:419;;;:::o;4139:180::-;4187:77;4184:1;4177:88;4284:4;4281:1;4274:15;4308:4;4305:1;4298:15;4325:194;4365:4;4385:20;4403:1;4385:20;:::i;:::-;4380:25;;4419:20;4437:1;4419:20;:::i;:::-;4414:25;;4463:1;4460;4456:9;4448:17;;4487:1;4481:4;4478:11;4475:37;;;4492:18;;:::i;:::-;4475:37;4325:194;;;;:::o;4525:410::-;4565:7;4588:20;4606:1;4588:20;:::i;:::-;4583:25;;4622:20;4640:1;4622:20;:::i;:::-;4617:25;;4677:1;4674;4670:9;4699:30;4717:11;4699:30;:::i;:::-;4688:41;;4878:1;4869:7;4865:15;4862:1;4859:22;4839:1;4832:9;4812:83;4789:139;;4908:18;;:::i;:::-;4789:139;4573:362;4525:410;;;;:::o;4941:180::-;4989:77;4986:1;4979:88;5086:4;5083:1;5076:15;5110:4;5107:1;5100:15;5127:185;5167:1;5184:20;5202:1;5184:20;:::i;:::-;5179:25;;5218:20;5236:1;5218:20;:::i;:::-;5213:25;;5257:1;5247:35;;5262:18;;:::i;:::-;5247:35;5304:1;5301;5297:9;5292:14;;5127:185;;;;:::o;5318:166::-;5458:18;5454:1;5446:6;5442:14;5435:42;5318:166;:::o;5490:366::-;5632:3;5653:67;5717:2;5712:3;5653:67;:::i;:::-;5646:74;;5729:93;5818:3;5729:93;:::i;:::-;5847:2;5842:3;5838:12;5831:19;;5490:366;;;:::o;5862:419::-;6028:4;6066:2;6055:9;6051:18;6043:26;;6115:9;6109:4;6105:20;6101:1;6090:9;6086:17;6079:47;6143:131;6269:4;6143:131;:::i;:::-;6135:139;;5862:419;;;:::o;6287:170::-;6427:22;6423:1;6415:6;6411:14;6404:46;6287:170;:::o;6463:366::-;6605:3;6626:67;6690:2;6685:3;6626:67;:::i;:::-;6619:74;;6702:93;6791:3;6702:93;:::i;:::-;6820:2;6815:3;6811:12;6804:19;;6463:366;;;:::o;6835:419::-;7001:4;7039:2;7028:9;7024:18;7016:26;;7088:9;7082:4;7078:20;7074:1;7063:9;7059:17;7052:47;7116:131;7242:4;7116:131;:::i;:::-;7108:139;;6835:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "491600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"executeTrade()": "2696",
								"lastPrice()": "2426",
								"owner()": "2587",
								"paused()": "2539",
								"renounceOwnership()": "infinite",
								"reportPrice(uint256)": "infinite",
								"threshold()": "2470",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 285,
									"end": 376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 285,
									"end": 376,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 325,
									"end": 335,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 359,
									"end": 369,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 347,
									"end": 356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 285,
									"end": 376,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1088,
									"end": 1095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1171,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1227,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1267,
									"end": 1272,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1249,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1390,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1372,
									"end": 1396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1367,
									"end": 1370,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1397,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1619,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1606,
									"end": 1623,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1553,
									"end": 1624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 168,
									"end": 939,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 168,
									"end": 939,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 939,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e44b1c5fbfe8ab0f66608fb099911766f0337a9f8fa6d1500b9c68e06074a36464736f6c634300081d0033",
									".code": [
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "C7F898F0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "E0C70B66"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "53F14DA"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "3F4BA83A"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "42CDE4E8"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "5C975ABB"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 939,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 872,
											"end": 937,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 872,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 872,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 872,
											"end": 937,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 872,
											"end": 937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 937,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 254,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 382,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 382,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 382,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 777,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 777,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 777,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 777,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 777,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 777,
											"end": 866,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 248,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 248,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 872,
											"end": 937,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 872,
											"end": 937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 920,
											"end": 928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 920,
											"end": 930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 920,
											"end": 930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 872,
											"end": 937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 254,
											"end": 278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 382,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 455,
											"end": 464,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 447,
											"end": 482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 447,
											"end": 482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 509,
											"end": 510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 497,
											"end": 506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 497,
											"end": 510,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 493,
											"end": 737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 493,
											"end": 737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 493,
											"end": 737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 526,
											"end": 538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 541,
											"end": 550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 550,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 541,
											"end": 558,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 581,
											"end": 582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 573,
											"end": 578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 561,
											"end": 570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 561,
											"end": 578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 561,
											"end": 578,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 561,
											"end": 578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 561,
											"end": 578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 561,
											"end": 578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 541,
											"end": 582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 526,
											"end": 582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 526,
											"end": 582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 642,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 626,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 619,
											"end": 623,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 619,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 619,
											"end": 629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 619,
											"end": 629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 619,
											"end": 629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 619,
											"end": 629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 619,
											"end": 629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 619,
											"end": 629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 618,
											"end": 642,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 618,
											"end": 642,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 642,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 618,
											"end": 642,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 675,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 675,
											"end": 684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 660,
											"end": 671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 660,
											"end": 684,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 656,
											"end": 727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 727,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 704,
											"end": 712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 704,
											"end": 710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 704,
											"end": 712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 704,
											"end": 712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 704,
											"end": 712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 656,
											"end": 727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 512,
											"end": 737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 493,
											"end": 737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 493,
											"end": 737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 747,
											"end": 764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 747,
											"end": 764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 764,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 747,
											"end": 764,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 382,
											"end": 771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 777,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 777,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 512,
											"end": 525,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 505,
											"end": 526,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 494,
											"end": 526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 647,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 619,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 614,
											"end": 617,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 607,
											"end": 641,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 863,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 763,
											"end": 781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 755,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 653,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 869,
											"end": 995,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 869,
											"end": 995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 906,
											"end": 913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 988,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 935,
											"end": 989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 924,
											"end": 989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 924,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 869,
											"end": 995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 869,
											"end": 995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 869,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1067,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1067,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1190,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1190,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1371,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1371,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2010,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2169,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2314,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3336,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3173,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C696420707269636500000000000000000000000000000000000000"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3708,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3342,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3569,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3505,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3505,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3670,
											"end": 3673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3581,
											"end": 3674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3674,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3581,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4133,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3714,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 3977,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 3978,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3995,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4126,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3995,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4319,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4139,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4264,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4288,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4281,
											"end": 4282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4312,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4519,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4325,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4385,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4385,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4380,
											"end": 4405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4380,
											"end": 4405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4419,
											"end": 4439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4465,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4448,
											"end": 4465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4448,
											"end": 4465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4485,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4489,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4492,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4519,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4935,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4525,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4606,
											"end": 4607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4588,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4622,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4642,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4622,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4642,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4717,
											"end": 4728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4699,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4729,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4699,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4869,
											"end": 4876,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4865,
											"end": 4880,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4859,
											"end": 4881,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 4895,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4789,
											"end": 4928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4908,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4908,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4928,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4789,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4935,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 5121,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4941,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5066,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4986,
											"end": 4987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5083,
											"end": 5084,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5076,
											"end": 5091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5312,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5127,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5167,
											"end": 5168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5184,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5184,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5184,
											"end": 5204,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 5184,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5179,
											"end": 5204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5179,
											"end": 5204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5236,
											"end": 5237,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5218,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5218,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5247,
											"end": 5282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5262,
											"end": 5280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5282,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5247,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5306,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5292,
											"end": 5306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5292,
											"end": 5306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5312,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5127,
											"end": 5312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5484,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5318,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5490,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5717,
											"end": 5719,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 5712,
											"end": 5715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5653,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 5720,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5653,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5818,
											"end": 5821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5729,
											"end": 5822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5729,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5845,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5850,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6281,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5862,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6086,
											"end": 6103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6079,
											"end": 6126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6143,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6274,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6143,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6287,
											"end": 6457,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6287,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6427,
											"end": 6449,
											"name": "PUSH",
											"source": 4,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6421,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6404,
											"end": 6450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6287,
											"end": 6457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6287,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6829,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6463,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6685,
											"end": 6688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6626,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6619,
											"end": 6693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6619,
											"end": 6693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6702,
											"end": 6795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6702,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6811,
											"end": 6823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6804,
											"end": 6823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6804,
											"end": 6823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 7254,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6835,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7041,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7028,
											"end": 7037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7016,
											"end": 7042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7016,
											"end": 7042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7088,
											"end": 7097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7078,
											"end": 7098,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7052,
											"end": 7099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7116,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7242,
											"end": 7246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7116,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 7116,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7116,
											"end": 7247,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7116,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 7254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 7254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 7254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 7254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"F/FlashCrashAutoPause.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"executeTrade()": "e0c70b66",
							"lastPrice()": "053f14da",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"reportPrice(uint256)": "c7f898f0",
							"threshold()": "42cde4e8",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"reportPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/FlashCrashAutoPause.sol\":\"FlashCrashAutoPause\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"F/FlashCrashAutoPause.sol\":{\"keccak256\":\"0x4cebe6f9f4088dee2d79e1d4b9c338a35d3a59de45e3ff439a2ea566a7ce222a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdea938e603dd220998674a030ab1992be89f8e91db705d85bf1dde5952ae8b0\",\"dweb:/ipfs/QmaVZUcojXxKcXh65usw8r9v1dA6y9esJSFFQK1HXam1dd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "F/FlashCrashAutoPause.sol:FlashCrashAutoPause",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "F/FlashCrashAutoPause.sol:FlashCrashAutoPause",
								"label": "_owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "F/FlashCrashAutoPause.sol:FlashCrashAutoPause",
								"label": "lastPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 297,
								"contract": "F/FlashCrashAutoPause.sol:FlashCrashAutoPause",
								"label": "threshold",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							285
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 286,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 285,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 285,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								285
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 267,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							285
						],
						"Pausable": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 256,
							"sourceUnit": 286,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 285,
										"src": "632:7:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255,
								285
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 158,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 163,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 255,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 164,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 174,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 255,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 177,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 182,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 185,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 188,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 190,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 255,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 204,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 255,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 255,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 233,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 232,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 225,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 255,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 241,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 190,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 255,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								158,
								163
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 263,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 262,
												"id": 265,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 285,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 272,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 271,
												"id": 274,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 285,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 280,
												"id": 282,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 285,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 286,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"F/FlashCrashAutoPause.sol": {
				"ast": {
					"absolutePath": "F/FlashCrashAutoPause.sol",
					"exportedSymbols": {
						"Context": [
							285
						],
						"FlashCrashAutoPause": [
							379
						],
						"Ownable": [
							147
						],
						"Pausable": [
							255
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 380,
							"sourceUnit": 256,
							"src": "58:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 380,
							"sourceUnit": 148,
							"src": "114:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 290,
										"name": "Pausable",
										"nameLocations": [
											"200:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "200:8:3"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "200:8:3"
								},
								{
									"baseName": {
										"id": 292,
										"name": "Ownable",
										"nameLocations": [
											"210:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "210:7:3"
									},
									"id": 293,
									"nodeType": "InheritanceSpecifier",
									"src": "210:7:3"
								}
							],
							"canonicalName": "FlashCrashAutoPause",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 379,
							"linearizedBaseContracts": [
								379,
								147,
								255,
								285
							],
							"name": "FlashCrashAutoPause",
							"nameLocation": "177:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "053f14da",
									"id": 295,
									"mutability": "mutable",
									"name": "lastPrice",
									"nameLocation": "239:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 379,
									"src": "224:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "224:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42cde4e8",
									"id": 297,
									"mutability": "mutable",
									"name": "threshold",
									"nameLocation": "269:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 379,
									"src": "254:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 296,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "337:39:3",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "347:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 307,
														"name": "_threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "359:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "347:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "347:22:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "325:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "329:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "325:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 304,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 301,
												"name": "Ownable",
												"nameLocations": [
													"317:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "317:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "317:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "_threshold",
												"nameLocation": "305:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "297:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:20:3"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:0:3"
									},
									"scope": 379,
									"src": "285:91:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "437:334:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "455:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "463:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "455:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "466:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "447:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "447:35:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 325,
														"name": "lastPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "497:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "509:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "497:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "493:244:3",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "512:225:3",
													"statements": [
														{
															"assignments": [
																329
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 329,
																	"mutability": "mutable",
																	"name": "drop",
																	"nameLocation": "534:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "526:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 328,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "526:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 338,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 330,
																		"name": "lastPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "541:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 331,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "553:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "541:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "30",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "581:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "541:41:3",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 333,
																		"name": "lastPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "561:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 334,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "573:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "561:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "526:56:3"
														},
														{
															"assignments": [
																340
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 340,
																	"mutability": "mutable",
																	"name": "dropPercent",
																	"nameLocation": "604:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 356,
																	"src": "596:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 339,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "596:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 347,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 341,
																				"name": "drop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "619:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "626:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "619:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 344,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "618:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 345,
																	"name": "lastPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "633:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "618:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "596:46:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 348,
																	"name": "dropPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "660:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 349,
																	"name": "threshold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "675:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "660:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 355,
															"nodeType": "IfStatement",
															"src": "656:71:3",
															"trueBody": {
																"id": 354,
																"nodeType": "Block",
																"src": "686:41:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 351,
																				"name": "_pause",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 238,
																				"src": "704:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "704:8:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 353,
																		"nodeType": "ExpressionStatement",
																		"src": "704:8:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "lastPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "747:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 359,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "759:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "747:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "747:17:3"
											}
										]
									},
									"functionSelector": "c7f898f0",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyOwner",
												"nameLocations": [
													"427:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "427:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "427:9:3"
										}
									],
									"name": "reportPrice",
									"nameLocation": "391:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "411:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "403:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:15:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:0:3"
									},
									"scope": 379,
									"src": "382:389:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "824:42:3",
										"statements": []
									},
									"functionSelector": "e0c70b66",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 365,
												"name": "whenNotPaused",
												"nameLocations": [
													"810:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "810:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "810:13:3"
										}
									],
									"name": "executeTrade",
									"nameLocation": "786:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:2:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:3"
									},
									"scope": 379,
									"src": "777:89:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "910:27:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 374,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "920:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "920:10:3"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 372,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 371,
												"name": "onlyOwner",
												"nameLocations": [
													"900:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "900:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "900:9:3"
										}
									],
									"name": "unpause",
									"nameLocation": "881:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:0:3"
									},
									"scope": 379,
									"src": "872:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "168:771:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								158,
								163
							]
						}
					],
					"src": "32:908:3"
				},
				"id": 3
			}
		}
	}
}