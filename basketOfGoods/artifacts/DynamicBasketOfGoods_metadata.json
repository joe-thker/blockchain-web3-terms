{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "good",
						"type": "string"
					}
				],
				"name": "GoodAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "good",
						"type": "string"
					}
				],
				"name": "GoodRemoved",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_good",
						"type": "string"
					}
				],
				"name": "addGood",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getGoods",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "goods",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "removeGood",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addGood(string)": {
					"params": {
						"_good": "The name or identifier of the good to add."
					}
				},
				"getGoods()": {
					"returns": {
						"_0": "An array of goods."
					}
				},
				"removeGood(uint256)": {
					"params": {
						"index": "The index of the good to remove."
					}
				}
			},
			"title": "DynamicBasketOfGoods",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addGood(string)": {
					"notice": "Adds a new good to the basket."
				},
				"getGoods()": {
					"notice": "Retrieves the list of goods in the basket."
				},
				"removeGood(uint256)": {
					"notice": "Removes a good from the basket by index."
				}
			},
			"notice": "A contract representing a dynamic basket of goods where items can be added or removed.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"basketOfGoods/Dynamic Basket of Goods.sol": "DynamicBasketOfGoods"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"basketOfGoods/Dynamic Basket of Goods.sol": {
			"keccak256": "0x60e75262007e2b294995567385a0e598d2c0f37dac4ec966a5d4f7b4503bd65d",
			"license": "MIT",
			"urls": [
				"bzz-raw://bc6353f3a38b695d94cccdc41419930f7beabcf9392b9d689bb4fcfc31c5c98e",
				"dweb:/ipfs/QmdNrNRaGuZThbBea7GytsoQwtAphYPMgeNKRradMwx32w"
			]
		}
	},
	"version": 1
}