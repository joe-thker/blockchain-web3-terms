{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_owners",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_required",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "Confirmation",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "Execution",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "ExecutionFailure",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "Submission",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "confirmTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "confirmations",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "executeTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "getConfirmationCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"name": "getTransaction",
				"outputs": [
					{
						"internalType": "address",
						"name": "destination",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "executed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "owners",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "required",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "destination",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "submitTransaction",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "transactions",
				"outputs": [
					{
						"internalType": "address",
						"name": "destination",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "executed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"confirmTransaction(uint256)": {
					"params": {
						"transactionId": "The ID of the transaction to confirm."
					}
				},
				"constructor": {
					"params": {
						"_owners": "An array of owner addresses.",
						"_required": "The number of confirmations required to execute a transaction."
					}
				},
				"executeTransaction(uint256)": {
					"params": {
						"transactionId": "The ID of the transaction to execute."
					}
				},
				"getConfirmationCount(uint256)": {
					"params": {
						"transactionId": "The ID of the transaction."
					},
					"returns": {
						"count": "The number of confirmations."
					}
				},
				"getTransaction(uint256)": {
					"params": {
						"transactionId": "The ID of the transaction."
					},
					"returns": {
						"data": "The data payload.",
						"destination": "The destination address.",
						"executed": "Whether the transaction has been executed.",
						"value": "The amount of Ether (in wei)."
					}
				},
				"isOwner(address)": {
					"params": {
						"_addr": "The address to check."
					},
					"returns": {
						"_0": "True if the address is an owner, false otherwise."
					}
				},
				"submitTransaction(address,uint256,bytes)": {
					"params": {
						"data": "The data payload for the transaction.",
						"destination": "The address to which the transaction is directed.",
						"value": "The amount of Ether (in wei) to send."
					},
					"returns": {
						"transactionId": "The index of the newly created transaction."
					}
				}
			},
			"title": "ElectrumWallet",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"confirmTransaction(uint256)": {
					"notice": "Confirms a transaction. Each owner can confirm only once."
				},
				"constructor": {
					"notice": "Constructor initializes the wallet with a list of owners and the required number of confirmations."
				},
				"executeTransaction(uint256)": {
					"notice": "Executes a transaction if the required number of confirmations has been reached."
				},
				"getConfirmationCount(uint256)": {
					"notice": "Returns the number of confirmations for a transaction."
				},
				"getTransaction(uint256)": {
					"notice": "Retrieves the details of a transaction."
				},
				"isOwner(address)": {
					"notice": "Checks if an address is an owner."
				},
				"submitTransaction(address,uint256,bytes)": {
					"notice": "Submits a transaction for approval."
				}
			},
			"notice": "A simple multi-signature wallet that requires a certain number of confirmations from a set of owners to execute a transaction. This is a dynamic, optimized wallet contract.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/electrumWallet.sol": "ElectrumWallet"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"E/electrumWallet.sol": {
			"keccak256": "0x4a05aeac73fdcc0273da196da6ac9e373f088797f7e25e6b2c3a6dacb1a1cf01",
			"license": "MIT",
			"urls": [
				"bzz-raw://0f2a23bc157fd7f79ac177d81cc259b5764a54ba7794c3623036420190f1ab34",
				"dweb:/ipfs/QmcLALfe5EGUFaAyKLu8hduoH2eqBNgo6NHEKdebih4wHs"
			]
		}
	},
	"version": 1
}