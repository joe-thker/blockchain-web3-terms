{
	"compiler": {
		"version": "0.8.29+commit.ab55807c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fixedStart",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fixedDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_slidingStart",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_slidingDuration",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newStart",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newDuration",
						"type": "uint256"
					}
				],
				"name": "FixedEpochUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newEpoch",
						"type": "uint256"
					}
				],
				"name": "ManualEpochAdvanced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newEpochCount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newStart",
						"type": "uint256"
					}
				],
				"name": "SlidingEpochAdvanced",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "advanceManualEpoch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentFixedEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentManualEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentSlidingEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fixedEpochDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fixedEpochStart",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "manualEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "slidingEpochCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "slidingEpochDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "slidingEpochStart",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newStart",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newDuration",
						"type": "uint256"
					}
				],
				"name": "updateFixedEpoch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_fixedDuration": "The fixed epoch duration in seconds.",
						"_fixedStart": "The fixed epoch start time.",
						"_slidingDuration": "The sliding epoch duration in seconds.",
						"_slidingStart": "The initial sliding epoch start time."
					}
				},
				"currentFixedEpoch()": {
					"returns": {
						"_0": "The current fixed epoch number. Returns 0 if the current time is before fixedEpochStart."
					}
				},
				"currentManualEpoch()": {
					"returns": {
						"_0": "The current manual epoch."
					}
				},
				"currentSlidingEpoch()": {
					"returns": {
						"_0": "The current sliding epoch number."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateFixedEpoch(uint256,uint256)": {
					"params": {
						"newDuration": "The new fixed epoch duration in seconds.",
						"newStart": "The new fixed epoch start time."
					}
				}
			},
			"title": "EpochTypesDemo",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"advanceManualEpoch()": {
					"notice": "Allows the owner to manually advance the manual epoch."
				},
				"constructor": {
					"notice": "Constructor sets initial parameters for fixed and sliding epochs, and initializes the manual epoch."
				},
				"currentFixedEpoch()": {
					"notice": "Returns the current fixed epoch number based on fixedEpochStart and fixedEpochDuration."
				},
				"currentManualEpoch()": {
					"notice": "Returns the current manual epoch number."
				},
				"currentSlidingEpoch()": {
					"notice": "Returns the current sliding epoch number. If the current time exceeds slidingEpochStart + slidingEpochDuration, the epoch is automatically advanced."
				},
				"fixedEpochDuration()": {
					"notice": "The duration (in seconds) of each fixed epoch."
				},
				"fixedEpochStart()": {
					"notice": "The fixed epoch schedule starts at this Unix timestamp."
				},
				"manualEpoch()": {
					"notice": "The current manual epoch number."
				},
				"slidingEpochCount()": {
					"notice": "The current sliding epoch number."
				},
				"slidingEpochDuration()": {
					"notice": "The duration (in seconds) of each sliding epoch."
				},
				"slidingEpochStart()": {
					"notice": "The start timestamp of the current sliding epoch."
				},
				"updateFixedEpoch(uint256,uint256)": {
					"notice": "Allows the owner to update the fixed epoch parameters."
				}
			},
			"notice": "This contract demonstrates three different epoch mechanisms:         1) Fixed Epoch – determined by a fixed start time and fixed duration.         2) Sliding Epoch – automatically advances when the current epoch expires.         3) Manual Epoch – a counter that the owner can manually advance.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/epochTypes.sol": "EpochTypesDemo"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"E/epochTypes.sol": {
			"keccak256": "0x4ac98c18af73a81abe8805943e9ac5cd19e6f5c87d55ee8b351059dd4aa31a1c",
			"license": "MIT",
			"urls": [
				"bzz-raw://680af46a6f5c04decc0105a5c0f953cb37e2560927436bfbad2fee0204eaae04",
				"dweb:/ipfs/QmVzZ7KtXh5RGTjpLY7yVugzPvKMXoQSqCq4d6oXBfLrnq"
			]
		}
	},
	"version": 1
}