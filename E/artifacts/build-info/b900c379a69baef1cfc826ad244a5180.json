{
	"id": "b900c379a69baef1cfc826ad244a5180",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/eip-1559.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title EIP1559Simulator\n/// @notice This contract simulates an EIP-1559â€“style fee mechanism for a DApp service.\n/// Users call performAction() and must pay a fee that includes a dynamic base fee plus an optional tip.\n/// At the end of a time period, the base fee is adjusted based on the number of actions performed relative to a target.\n/// The tip (if any) is forwarded to a designated feeRecipient.\ncontract EIP1559Simulator is Ownable, ReentrancyGuard {\n    /// @notice The dynamic base fee (in wei) that must be paid for each action.\n    uint256 public baseFee;\n    /// @notice The target number of transactions per period.\n    uint256 public targetTxCount;\n    /// @notice The number of transactions performed in the current period.\n    uint256 public txCount;\n    /// @notice Timestamp marking the start of the current period.\n    uint256 public periodStart;\n    /// @notice Duration of each period in seconds.\n    uint256 public periodLength;\n    /// @notice The address that will receive any tip paid above the base fee.\n    address public feeRecipient;\n\n    /// @notice Emitted when a user performs an action.\n    /// @param user The user address.\n    /// @param feePaid The base fee paid.\n    /// @param tip The tip amount paid.\n    /// @param timestamp The time when the action occurred.\n    event ActionPerformed(address indexed user, uint256 feePaid, uint256 tip, uint256 timestamp);\n\n    /// @notice Emitted when the base fee is updated at the end of a period.\n    /// @param newBaseFee The new base fee after adjustment.\n    event BaseFeeUpdated(uint256 newBaseFee);\n\n    /**\n     * @notice Constructor sets the initial parameters.\n     * @param _initialBaseFee The starting base fee in wei.\n     * @param _targetTxCount The target number of transactions per period.\n     * @param _periodLength The duration of each period in seconds.\n     * @param _feeRecipient The address that receives tips (if nonzero).\n     */\n    constructor(\n        uint256 _initialBaseFee,\n        uint256 _targetTxCount,\n        uint256 _periodLength,\n        address _feeRecipient\n    ) Ownable(msg.sender) {\n        require(_initialBaseFee > 0, \"Initial base fee must be > 0\");\n        require(_targetTxCount > 0, \"Target tx count must be > 0\");\n        require(_periodLength > 0, \"Period length must be > 0\");\n        // feeRecipient may be zero if the tip should be burned or kept.\n\n        baseFee = _initialBaseFee;\n        targetTxCount = _targetTxCount;\n        periodLength = _periodLength;\n        periodStart = block.timestamp;\n        feeRecipient = _feeRecipient;\n    }\n\n    /**\n     * @notice Performs an action that requires payment of a fee.\n     * The caller must send at least `baseFee` wei.\n     * The fee consists of a dynamic base fee plus an optional tip.\n     * After the action, the contract updates its transaction count and adjusts the base fee if the period has ended.\n     */\n    function performAction() external payable nonReentrant {\n        require(msg.value >= baseFee, \"Insufficient fee provided\");\n\n        // Calculate tip as any amount sent over the baseFee.\n        uint256 tip = msg.value - baseFee;\n        // Increment the transaction count.\n        txCount++;\n\n        // Check if the current period has ended.\n        if (block.timestamp >= periodStart + periodLength) {\n            // Adjust the base fee:\n            // If more transactions than target, increase baseFee by 10% per excess ratio (simplified);\n            // If fewer transactions than target, decrease baseFee by 10% per shortfall, not going below 1 wei.\n            if (txCount > targetTxCount) {\n                // Increase baseFee proportionally; here we simply add 10% of baseFee.\n                baseFee = baseFee + (baseFee / 10);\n            } else if (txCount < targetTxCount) {\n                uint256 decrease = baseFee / 10;\n                if (decrease >= baseFee) {\n                    baseFee = 1;\n                } else {\n                    baseFee = baseFee - decrease;\n                }\n            }\n            // Reset period counters.\n            periodStart = block.timestamp;\n            txCount = 0;\n            emit BaseFeeUpdated(baseFee);\n        }\n\n        // If a tip is provided and a feeRecipient is set, forward the tip.\n        if (tip > 0 && feeRecipient != address(0)) {\n            (bool success, ) = payable(feeRecipient).call{value: tip}(\"\");\n            require(success, \"Tip transfer failed\");\n        }\n\n        // The base fee remains in the contract (acting like a burn or pool).\n        emit ActionPerformed(msg.sender, baseFee, tip, block.timestamp);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/eip-1559.sol": {
				"EIP1559Simulator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialBaseFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_targetTxCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_periodLength",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feePaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tip",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ActionPerformed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBaseFee",
									"type": "uint256"
								}
							],
							"name": "BaseFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "performAction",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetTxCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "txCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ActionPerformed(address,uint256,uint256,uint256)": {
								"params": {
									"feePaid": "The base fee paid.",
									"timestamp": "The time when the action occurred.",
									"tip": "The tip amount paid.",
									"user": "The user address."
								}
							},
							"BaseFeeUpdated(uint256)": {
								"params": {
									"newBaseFee": "The new base fee after adjustment."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_feeRecipient": "The address that receives tips (if nonzero).",
									"_initialBaseFee": "The starting base fee in wei.",
									"_periodLength": "The duration of each period in seconds.",
									"_targetTxCount": "The target number of transactions per period."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "EIP1559Simulator",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/eip-1559.sol\":583:4789  contract EIP1559Simulator is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"E/eip-1559.sol\":2117:2756  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"E/eip-1559.sol\":2270:2280  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/eip-1559.sol\":2318:2319  0 */\n  0x00\n    /* \"E/eip-1559.sol\":2300:2315  _initialBaseFee */\n  dup5\n    /* \"E/eip-1559.sol\":2300:2319  _initialBaseFee > 0 */\n  gt\n    /* \"E/eip-1559.sol\":2292:2352  require(_initialBaseFee > 0, \"Initial base fee must be > 0\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"E/eip-1559.sol\":2387:2388  0 */\n  0x00\n    /* \"E/eip-1559.sol\":2370:2384  _targetTxCount */\n  dup4\n    /* \"E/eip-1559.sol\":2370:2388  _targetTxCount > 0 */\n  gt\n    /* \"E/eip-1559.sol\":2362:2420  require(_targetTxCount > 0, \"Target tx count must be > 0\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"E/eip-1559.sol\":2454:2455  0 */\n  0x00\n    /* \"E/eip-1559.sol\":2438:2451  _periodLength */\n  dup3\n    /* \"E/eip-1559.sol\":2438:2455  _periodLength > 0 */\n  gt\n    /* \"E/eip-1559.sol\":2430:2485  require(_periodLength > 0, \"Period length must be > 0\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"E/eip-1559.sol\":2579:2594  _initialBaseFee */\n  dup4\n    /* \"E/eip-1559.sol\":2569:2576  baseFee */\n  0x02\n    /* \"E/eip-1559.sol\":2569:2594  baseFee = _initialBaseFee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/eip-1559.sol\":2620:2634  _targetTxCount */\n  dup3\n    /* \"E/eip-1559.sol\":2604:2617  targetTxCount */\n  0x03\n    /* \"E/eip-1559.sol\":2604:2634  targetTxCount = _targetTxCount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/eip-1559.sol\":2659:2672  _periodLength */\n  dup2\n    /* \"E/eip-1559.sol\":2644:2656  periodLength */\n  0x06\n    /* \"E/eip-1559.sol\":2644:2672  periodLength = _periodLength */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/eip-1559.sol\":2696:2711  block.timestamp */\n  timestamp\n    /* \"E/eip-1559.sol\":2682:2693  periodStart */\n  0x05\n    /* \"E/eip-1559.sol\":2682:2711  periodStart = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/eip-1559.sol\":2736:2749  _feeRecipient */\n  dup1\n    /* \"E/eip-1559.sol\":2721:2733  feeRecipient */\n  0x07\n  0x00\n    /* \"E/eip-1559.sol\":2721:2749  feeRecipient = _feeRecipient */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"E/eip-1559.sol\":2117:2756  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"E/eip-1559.sol\":583:4789  contract EIP1559Simulator is Ownable, ReentrancyGuard {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_27:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_29:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_30:\n    /* \"#utility.yul\":490:514   */\n  tag_50\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_29\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_51:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_31:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_53\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_30\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_32:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_33:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_56\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_34:\n    /* \"#utility.yul\":1001:1025   */\n  tag_58\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_33\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_59:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_35:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_61\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  dup1\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_64\n  tag_27\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1343:1463   */\ntag_63:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_65\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_31\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_66\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_31\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_67\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_31\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_68\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_35\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2149   */\ntag_36:\n    /* \"#utility.yul\":2118:2142   */\n  tag_70\n    /* \"#utility.yul\":2136:2141   */\n  dup2\n    /* \"#utility.yul\":2118:2142   */\n  tag_33\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2113:2116   */\n  dup3\n    /* \"#utility.yul\":2106:2143   */\n  mstore\n    /* \"#utility.yul\":2031:2149   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2155:2377   */\ntag_10:\n    /* \"#utility.yul\":2248:2252   */\n  0x00\n    /* \"#utility.yul\":2286:2288   */\n  0x20\n    /* \"#utility.yul\":2275:2284   */\n  dup3\n    /* \"#utility.yul\":2271:2289   */\n  add\n    /* \"#utility.yul\":2263:2289   */\n  swap1\n  pop\n    /* \"#utility.yul\":2299:2370   */\n  tag_72\n    /* \"#utility.yul\":2367:2368   */\n  0x00\n    /* \"#utility.yul\":2356:2365   */\n  dup4\n    /* \"#utility.yul\":2352:2369   */\n  add\n    /* \"#utility.yul\":2343:2349   */\n  dup5\n    /* \"#utility.yul\":2299:2370   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2155:2377   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2383:2552   */\ntag_37:\n    /* \"#utility.yul\":2467:2478   */\n  0x00\n    /* \"#utility.yul\":2501:2507   */\n  dup3\n    /* \"#utility.yul\":2496:2499   */\n  dup3\n    /* \"#utility.yul\":2489:2508   */\n  mstore\n    /* \"#utility.yul\":2541:2545   */\n  0x20\n    /* \"#utility.yul\":2536:2539   */\n  dup3\n    /* \"#utility.yul\":2532:2546   */\n  add\n    /* \"#utility.yul\":2517:2546   */\n  swap1\n  pop\n    /* \"#utility.yul\":2383:2552   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2558:2736   */\ntag_38:\n    /* \"#utility.yul\":2698:2728   */\n  0x496e697469616c206261736520666565206d757374206265203e203000000000\n    /* \"#utility.yul\":2694:2695   */\n  0x00\n    /* \"#utility.yul\":2686:2692   */\n  dup3\n    /* \"#utility.yul\":2682:2696   */\n  add\n    /* \"#utility.yul\":2675:2729   */\n  mstore\n    /* \"#utility.yul\":2558:2736   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2742:3108   */\ntag_39:\n    /* \"#utility.yul\":2884:2887   */\n  0x00\n    /* \"#utility.yul\":2905:2972   */\n  tag_76\n    /* \"#utility.yul\":2969:2971   */\n  0x1c\n    /* \"#utility.yul\":2964:2967   */\n  dup4\n    /* \"#utility.yul\":2905:2972   */\n  tag_37\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2898:2972   */\n  swap2\n  pop\n    /* \"#utility.yul\":2981:3074   */\n  tag_77\n    /* \"#utility.yul\":3070:3073   */\n  dup3\n    /* \"#utility.yul\":2981:3074   */\n  tag_38\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3099:3101   */\n  0x20\n    /* \"#utility.yul\":3094:3097   */\n  dup3\n    /* \"#utility.yul\":3090:3102   */\n  add\n    /* \"#utility.yul\":3083:3102   */\n  swap1\n  pop\n    /* \"#utility.yul\":2742:3108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3114:3533   */\ntag_17:\n    /* \"#utility.yul\":3280:3284   */\n  0x00\n    /* \"#utility.yul\":3318:3320   */\n  0x20\n    /* \"#utility.yul\":3307:3316   */\n  dup3\n    /* \"#utility.yul\":3303:3321   */\n  add\n    /* \"#utility.yul\":3295:3321   */\n  swap1\n  pop\n    /* \"#utility.yul\":3367:3376   */\n  dup2\n    /* \"#utility.yul\":3361:3365   */\n  dup2\n    /* \"#utility.yul\":3357:3377   */\n  sub\n    /* \"#utility.yul\":3353:3354   */\n  0x00\n    /* \"#utility.yul\":3342:3351   */\n  dup4\n    /* \"#utility.yul\":3338:3355   */\n  add\n    /* \"#utility.yul\":3331:3378   */\n  mstore\n    /* \"#utility.yul\":3395:3526   */\n  tag_79\n    /* \"#utility.yul\":3521:3525   */\n  dup2\n    /* \"#utility.yul\":3395:3526   */\n  tag_39\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3387:3526   */\n  swap1\n  pop\n    /* \"#utility.yul\":3114:3533   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3539:3716   */\ntag_40:\n    /* \"#utility.yul\":3679:3708   */\n  0x54617267657420747820636f756e74206d757374206265203e20300000000000\n    /* \"#utility.yul\":3675:3676   */\n  0x00\n    /* \"#utility.yul\":3667:3673   */\n  dup3\n    /* \"#utility.yul\":3663:3677   */\n  add\n    /* \"#utility.yul\":3656:3709   */\n  mstore\n    /* \"#utility.yul\":3539:3716   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3722:4088   */\ntag_41:\n    /* \"#utility.yul\":3864:3867   */\n  0x00\n    /* \"#utility.yul\":3885:3952   */\n  tag_82\n    /* \"#utility.yul\":3949:3951   */\n  0x1b\n    /* \"#utility.yul\":3944:3947   */\n  dup4\n    /* \"#utility.yul\":3885:3952   */\n  tag_37\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3878:3952   */\n  swap2\n  pop\n    /* \"#utility.yul\":3961:4054   */\n  tag_83\n    /* \"#utility.yul\":4050:4053   */\n  dup3\n    /* \"#utility.yul\":3961:4054   */\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4079:4081   */\n  0x20\n    /* \"#utility.yul\":4074:4077   */\n  dup3\n    /* \"#utility.yul\":4070:4082   */\n  add\n    /* \"#utility.yul\":4063:4082   */\n  swap1\n  pop\n    /* \"#utility.yul\":3722:4088   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4094:4513   */\ntag_20:\n    /* \"#utility.yul\":4260:4264   */\n  0x00\n    /* \"#utility.yul\":4298:4300   */\n  0x20\n    /* \"#utility.yul\":4287:4296   */\n  dup3\n    /* \"#utility.yul\":4283:4301   */\n  add\n    /* \"#utility.yul\":4275:4301   */\n  swap1\n  pop\n    /* \"#utility.yul\":4347:4356   */\n  dup2\n    /* \"#utility.yul\":4341:4345   */\n  dup2\n    /* \"#utility.yul\":4337:4357   */\n  sub\n    /* \"#utility.yul\":4333:4334   */\n  0x00\n    /* \"#utility.yul\":4322:4331   */\n  dup4\n    /* \"#utility.yul\":4318:4335   */\n  add\n    /* \"#utility.yul\":4311:4358   */\n  mstore\n    /* \"#utility.yul\":4375:4506   */\n  tag_85\n    /* \"#utility.yul\":4501:4505   */\n  dup2\n    /* \"#utility.yul\":4375:4506   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4367:4506   */\n  swap1\n  pop\n    /* \"#utility.yul\":4094:4513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4519:4694   */\ntag_42:\n    /* \"#utility.yul\":4659:4686   */\n  0x506572696f64206c656e677468206d757374206265203e203000000000000000\n    /* \"#utility.yul\":4655:4656   */\n  0x00\n    /* \"#utility.yul\":4647:4653   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  add\n    /* \"#utility.yul\":4636:4687   */\n  mstore\n    /* \"#utility.yul\":4519:4694   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4700:5066   */\ntag_43:\n    /* \"#utility.yul\":4842:4845   */\n  0x00\n    /* \"#utility.yul\":4863:4930   */\n  tag_88\n    /* \"#utility.yul\":4927:4929   */\n  0x19\n    /* \"#utility.yul\":4922:4925   */\n  dup4\n    /* \"#utility.yul\":4863:4930   */\n  tag_37\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4856:4930   */\n  swap2\n  pop\n    /* \"#utility.yul\":4939:5032   */\n  tag_89\n    /* \"#utility.yul\":5028:5031   */\n  dup3\n    /* \"#utility.yul\":4939:5032   */\n  tag_42\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":5057:5059   */\n  0x20\n    /* \"#utility.yul\":5052:5055   */\n  dup3\n    /* \"#utility.yul\":5048:5060   */\n  add\n    /* \"#utility.yul\":5041:5060   */\n  swap1\n  pop\n    /* \"#utility.yul\":4700:5066   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5491   */\ntag_23:\n    /* \"#utility.yul\":5238:5242   */\n  0x00\n    /* \"#utility.yul\":5276:5278   */\n  0x20\n    /* \"#utility.yul\":5265:5274   */\n  dup3\n    /* \"#utility.yul\":5261:5279   */\n  add\n    /* \"#utility.yul\":5253:5279   */\n  swap1\n  pop\n    /* \"#utility.yul\":5325:5334   */\n  dup2\n    /* \"#utility.yul\":5319:5323   */\n  dup2\n    /* \"#utility.yul\":5315:5335   */\n  sub\n    /* \"#utility.yul\":5311:5312   */\n  0x00\n    /* \"#utility.yul\":5300:5309   */\n  dup4\n    /* \"#utility.yul\":5296:5313   */\n  add\n    /* \"#utility.yul\":5289:5336   */\n  mstore\n    /* \"#utility.yul\":5353:5484   */\n  tag_91\n    /* \"#utility.yul\":5479:5483   */\n  dup2\n    /* \"#utility.yul\":5353:5484   */\n  tag_43\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":5345:5484   */\n  swap1\n  pop\n    /* \"#utility.yul\":5072:5491   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"E/eip-1559.sol\":583:4789  contract EIP1559Simulator is Ownable, ReentrancyGuard {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/eip-1559.sol\":583:4789  contract EIP1559Simulator is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd2ca2115\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xeda4e6d6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x16897518\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3c540687\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6c18f73e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6ef25c3a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"E/eip-1559.sol\":814:842  uint256 public targetTxCount */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/eip-1559.sol\":924:946  uint256 public txCount */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/eip-1559.sol\":1215:1242  address public feeRecipient */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/eip-1559.sol\":3082:4787  function performAction() external payable nonReentrant {... */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"E/eip-1559.sol\":724:746  uint256 public baseFee */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/eip-1559.sol\":1103:1130  uint256 public periodLength */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/eip-1559.sol\":1019:1045  uint256 public periodStart */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"E/eip-1559.sol\":814:842  uint256 public targetTxCount */\n    tag_15:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"E/eip-1559.sol\":924:946  uint256 public txCount */\n    tag_20:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"E/eip-1559.sol\":1215:1242  address public feeRecipient */\n    tag_24:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"E/eip-1559.sol\":3082:4787  function performAction() external payable nonReentrant {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_55\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_54:\n        /* \"E/eip-1559.sol\":3168:3175  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":3155:3164  msg.value */\n      callvalue\n        /* \"E/eip-1559.sol\":3155:3175  msg.value >= baseFee */\n      lt\n      iszero\n        /* \"E/eip-1559.sol\":3147:3205  require(msg.value >= baseFee, \"Insufficient fee provided\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"E/eip-1559.sol\":3278:3289  uint256 tip */\n      0x00\n        /* \"E/eip-1559.sol\":3304:3311  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":3292:3301  msg.value */\n      callvalue\n        /* \"E/eip-1559.sol\":3292:3311  msg.value - baseFee */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"E/eip-1559.sol\":3278:3311  uint256 tip = msg.value - baseFee */\n      swap1\n      pop\n        /* \"E/eip-1559.sol\":3365:3372  txCount */\n      0x04\n      0x00\n        /* \"E/eip-1559.sol\":3365:3374  txCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"E/eip-1559.sol\":3472:3484  periodLength */\n      sload(0x06)\n        /* \"E/eip-1559.sol\":3458:3469  periodStart */\n      sload(0x05)\n        /* \"E/eip-1559.sol\":3458:3484  periodStart + periodLength */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"E/eip-1559.sol\":3439:3454  block.timestamp */\n      timestamp\n        /* \"E/eip-1559.sol\":3439:3484  block.timestamp >= periodStart + periodLength */\n      lt\n        /* \"E/eip-1559.sol\":3435:4361  if (block.timestamp >= periodStart + periodLength) {... */\n      tag_66\n      jumpi\n        /* \"E/eip-1559.sol\":3766:3779  targetTxCount */\n      sload(0x03)\n        /* \"E/eip-1559.sol\":3756:3763  txCount */\n      sload(0x04)\n        /* \"E/eip-1559.sol\":3756:3779  txCount > targetTxCount */\n      gt\n        /* \"E/eip-1559.sol\":3752:4203  if (txCount > targetTxCount) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"E/eip-1559.sol\":3917:3919  10 */\n      0x0a\n        /* \"E/eip-1559.sol\":3907:3914  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":3907:3919  baseFee / 10 */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"E/eip-1559.sol\":3896:3903  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":3896:3920  baseFee + (baseFee / 10) */\n      tag_70\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_70:\n        /* \"E/eip-1559.sol\":3886:3893  baseFee */\n      0x02\n        /* \"E/eip-1559.sol\":3886:3920  baseFee = baseFee + (baseFee / 10) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/eip-1559.sol\":3752:4203  if (txCount > targetTxCount) {... */\n      jump(tag_71)\n    tag_67:\n        /* \"E/eip-1559.sol\":3955:3968  targetTxCount */\n      sload(0x03)\n        /* \"E/eip-1559.sol\":3945:3952  txCount */\n      sload(0x04)\n        /* \"E/eip-1559.sol\":3945:3968  txCount < targetTxCount */\n      lt\n        /* \"E/eip-1559.sol\":3941:4203  if (txCount < targetTxCount) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"E/eip-1559.sol\":3988:4004  uint256 decrease */\n      0x00\n        /* \"E/eip-1559.sol\":4017:4019  10 */\n      0x0a\n        /* \"E/eip-1559.sol\":4007:4014  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":4007:4019  baseFee / 10 */\n      tag_73\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_73:\n        /* \"E/eip-1559.sol\":3988:4019  uint256 decrease = baseFee / 10 */\n      swap1\n      pop\n        /* \"E/eip-1559.sol\":4053:4060  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":4041:4049  decrease */\n      dup2\n        /* \"E/eip-1559.sol\":4041:4060  decrease >= baseFee */\n      lt\n        /* \"E/eip-1559.sol\":4037:4189  if (decrease >= baseFee) {... */\n      tag_74\n      jumpi\n        /* \"E/eip-1559.sol\":4094:4095  1 */\n      0x01\n        /* \"E/eip-1559.sol\":4084:4091  baseFee */\n      0x02\n        /* \"E/eip-1559.sol\":4084:4095  baseFee = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/eip-1559.sol\":4037:4189  if (decrease >= baseFee) {... */\n      jump(tag_75)\n    tag_74:\n        /* \"E/eip-1559.sol\":4162:4170  decrease */\n      dup1\n        /* \"E/eip-1559.sol\":4152:4159  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":4152:4170  baseFee - decrease */\n      tag_76\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_76:\n        /* \"E/eip-1559.sol\":4142:4149  baseFee */\n      0x02\n        /* \"E/eip-1559.sol\":4142:4170  baseFee = baseFee - decrease */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/eip-1559.sol\":4037:4189  if (decrease >= baseFee) {... */\n    tag_75:\n        /* \"E/eip-1559.sol\":3970:4203  {... */\n      pop\n        /* \"E/eip-1559.sol\":3941:4203  if (txCount < targetTxCount) {... */\n    tag_72:\n        /* \"E/eip-1559.sol\":3752:4203  if (txCount > targetTxCount) {... */\n    tag_71:\n        /* \"E/eip-1559.sol\":4268:4283  block.timestamp */\n      timestamp\n        /* \"E/eip-1559.sol\":4254:4265  periodStart */\n      0x05\n        /* \"E/eip-1559.sol\":4254:4283  periodStart = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/eip-1559.sol\":4307:4308  0 */\n      0x00\n        /* \"E/eip-1559.sol\":4297:4304  txCount */\n      0x04\n        /* \"E/eip-1559.sol\":4297:4308  txCount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/eip-1559.sol\":4327:4350  BaseFeeUpdated(baseFee) */\n      0x803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c3\n        /* \"E/eip-1559.sol\":4342:4349  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":4327:4350  BaseFeeUpdated(baseFee) */\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/eip-1559.sol\":3435:4361  if (block.timestamp >= periodStart + periodLength) {... */\n    tag_66:\n        /* \"E/eip-1559.sol\":4457:4458  0 */\n      0x00\n        /* \"E/eip-1559.sol\":4451:4454  tip */\n      dup2\n        /* \"E/eip-1559.sol\":4451:4458  tip > 0 */\n      gt\n        /* \"E/eip-1559.sol\":4451:4488  tip > 0 && feeRecipient != address(0) */\n      dup1\n      iszero\n      tag_78\n      jumpi\n      pop\n        /* \"E/eip-1559.sol\":4486:4487  0 */\n      0x00\n        /* \"E/eip-1559.sol\":4462:4488  feeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/eip-1559.sol\":4462:4474  feeRecipient */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/eip-1559.sol\":4462:4488  feeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"E/eip-1559.sol\":4451:4488  tip > 0 && feeRecipient != address(0) */\n    tag_78:\n        /* \"E/eip-1559.sol\":4447:4629  if (tip > 0 && feeRecipient != address(0)) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"E/eip-1559.sol\":4505:4517  bool success */\n      0x00\n        /* \"E/eip-1559.sol\":4531:4543  feeRecipient */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/eip-1559.sol\":4523:4549  payable(feeRecipient).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/eip-1559.sol\":4557:4560  tip */\n      dup3\n        /* \"E/eip-1559.sol\":4523:4565  payable(feeRecipient).call{value: tip}(\"\") */\n      mload(0x40)\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_84\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_83)\n    tag_84:\n      0x60\n      swap2\n      pop\n    tag_83:\n      pop\n        /* \"E/eip-1559.sol\":4504:4565  (bool success, ) = payable(feeRecipient).call{value: tip}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"E/eip-1559.sol\":4587:4594  success */\n      dup1\n        /* \"E/eip-1559.sol\":4579:4618  require(success, \"Tip transfer failed\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"E/eip-1559.sol\":4490:4629  {... */\n      pop\n        /* \"E/eip-1559.sol\":4447:4629  if (tip > 0 && feeRecipient != address(0)) {... */\n    tag_79:\n        /* \"E/eip-1559.sol\":4738:4748  msg.sender */\n      caller\n        /* \"E/eip-1559.sol\":4722:4780  ActionPerformed(msg.sender, baseFee, tip, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc713f14d184cf4a1747825a79806a836b3f4e1b7f092edc852f56ce98f44d438\n        /* \"E/eip-1559.sol\":4750:4757  baseFee */\n      sload(0x02)\n        /* \"E/eip-1559.sol\":4759:4762  tip */\n      dup4\n        /* \"E/eip-1559.sol\":4764:4779  block.timestamp */\n      timestamp\n        /* \"E/eip-1559.sol\":4722:4780  ActionPerformed(msg.sender, baseFee, tip, block.timestamp) */\n      mload(0x40)\n      tag_88\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"E/eip-1559.sol\":3137:4787  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_91\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_90:\n        /* \"E/eip-1559.sol\":3082:4787  function performAction() external payable nonReentrant {... */\n      jump\t// out\n        /* \"E/eip-1559.sol\":724:746  uint256 public baseFee */\n    tag_31:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"E/eip-1559.sol\":1103:1130  uint256 public periodLength */\n    tag_42:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"E/eip-1559.sol\":1019:1045  uint256 public periodStart */\n    tag_46:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_119:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_120:\n        /* \"#utility.yul\":177:201   */\n      tag_144\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_119\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_17:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_146\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_120\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_121:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_122:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_149\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_121\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_123:\n        /* \"#utility.yul\":763:787   */\n      tag_151\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_122\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_26:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_153\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_123\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_125:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_127:\n        /* \"#utility.yul\":1428:1452   */\n      tag_158\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_122\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_159:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_128:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_161\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_127\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_51:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_164\n      tag_125\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1704:1823   */\n    tag_163:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_165\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_128\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_129:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2313   */\n    tag_130:\n        /* \"#utility.yul\":2278:2305   */\n      0x496e73756666696369656e74206665652070726f766964656400000000000000\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2306   */\n      mstore\n        /* \"#utility.yul\":2138:2313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2319:2685   */\n    tag_131:\n        /* \"#utility.yul\":2461:2464   */\n      0x00\n        /* \"#utility.yul\":2482:2549   */\n      tag_169\n        /* \"#utility.yul\":2546:2548   */\n      0x19\n        /* \"#utility.yul\":2541:2544   */\n      dup4\n        /* \"#utility.yul\":2482:2549   */\n      tag_129\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2475:2549   */\n      swap2\n      pop\n        /* \"#utility.yul\":2558:2651   */\n      tag_170\n        /* \"#utility.yul\":2647:2650   */\n      dup3\n        /* \"#utility.yul\":2558:2651   */\n      tag_130\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2676:2678   */\n      0x20\n        /* \"#utility.yul\":2671:2674   */\n      dup3\n        /* \"#utility.yul\":2667:2679   */\n      add\n        /* \"#utility.yul\":2660:2679   */\n      swap1\n      pop\n        /* \"#utility.yul\":2319:2685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:3110   */\n    tag_59:\n        /* \"#utility.yul\":2857:2861   */\n      0x00\n        /* \"#utility.yul\":2895:2897   */\n      0x20\n        /* \"#utility.yul\":2884:2893   */\n      dup3\n        /* \"#utility.yul\":2880:2898   */\n      add\n        /* \"#utility.yul\":2872:2898   */\n      swap1\n      pop\n        /* \"#utility.yul\":2944:2953   */\n      dup2\n        /* \"#utility.yul\":2938:2942   */\n      dup2\n        /* \"#utility.yul\":2934:2954   */\n      sub\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2919:2928   */\n      dup4\n        /* \"#utility.yul\":2915:2932   */\n      add\n        /* \"#utility.yul\":2908:2955   */\n      mstore\n        /* \"#utility.yul\":2972:3103   */\n      tag_172\n        /* \"#utility.yul\":3098:3102   */\n      dup2\n        /* \"#utility.yul\":2972:3103   */\n      tag_131\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2964:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":2691:3110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3116:3296   */\n    tag_132:\n        /* \"#utility.yul\":3164:3241   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3154:3242   */\n      mstore\n        /* \"#utility.yul\":3261:3265   */\n      0x11\n        /* \"#utility.yul\":3258:3259   */\n      0x04\n        /* \"#utility.yul\":3251:3266   */\n      mstore\n        /* \"#utility.yul\":3285:3289   */\n      0x24\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3275:3290   */\n      revert\n        /* \"#utility.yul\":3302:3496   */\n    tag_61:\n        /* \"#utility.yul\":3342:3346   */\n      0x00\n        /* \"#utility.yul\":3362:3382   */\n      tag_175\n        /* \"#utility.yul\":3380:3381   */\n      dup3\n        /* \"#utility.yul\":3362:3382   */\n      tag_119\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3357:3382   */\n      swap2\n      pop\n        /* \"#utility.yul\":3396:3416   */\n      tag_176\n        /* \"#utility.yul\":3414:3415   */\n      dup4\n        /* \"#utility.yul\":3396:3416   */\n      tag_119\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3391:3416   */\n      swap3\n      pop\n        /* \"#utility.yul\":3440:3441   */\n      dup3\n        /* \"#utility.yul\":3437:3438   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      sub\n        /* \"#utility.yul\":3425:3442   */\n      swap1\n      pop\n        /* \"#utility.yul\":3464:3465   */\n      dup2\n        /* \"#utility.yul\":3458:3462   */\n      dup2\n        /* \"#utility.yul\":3455:3466   */\n      gt\n        /* \"#utility.yul\":3452:3489   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":3469:3487   */\n      tag_178\n      tag_132\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3452:3489   */\n    tag_177:\n        /* \"#utility.yul\":3302:3496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3502:3735   */\n    tag_63:\n        /* \"#utility.yul\":3541:3544   */\n      0x00\n        /* \"#utility.yul\":3564:3588   */\n      tag_180\n        /* \"#utility.yul\":3582:3587   */\n      dup3\n        /* \"#utility.yul\":3564:3588   */\n      tag_119\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3555:3588   */\n      swap2\n      pop\n        /* \"#utility.yul\":3610:3676   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3603:3608   */\n      dup3\n        /* \"#utility.yul\":3600:3677   */\n      sub\n        /* \"#utility.yul\":3597:3700   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":3680:3698   */\n      tag_182\n      tag_132\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3597:3700   */\n    tag_181:\n        /* \"#utility.yul\":3727:3728   */\n      0x01\n        /* \"#utility.yul\":3720:3725   */\n      dup3\n        /* \"#utility.yul\":3716:3729   */\n      add\n        /* \"#utility.yul\":3709:3729   */\n      swap1\n      pop\n        /* \"#utility.yul\":3502:3735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3741:3932   */\n    tag_65:\n        /* \"#utility.yul\":3781:3784   */\n      0x00\n        /* \"#utility.yul\":3800:3820   */\n      tag_184\n        /* \"#utility.yul\":3818:3819   */\n      dup3\n        /* \"#utility.yul\":3800:3820   */\n      tag_119\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3795:3820   */\n      swap2\n      pop\n        /* \"#utility.yul\":3834:3854   */\n      tag_185\n        /* \"#utility.yul\":3852:3853   */\n      dup4\n        /* \"#utility.yul\":3834:3854   */\n      tag_119\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3829:3854   */\n      swap3\n      pop\n        /* \"#utility.yul\":3877:3878   */\n      dup3\n        /* \"#utility.yul\":3874:3875   */\n      dup3\n        /* \"#utility.yul\":3870:3879   */\n      add\n        /* \"#utility.yul\":3863:3879   */\n      swap1\n      pop\n        /* \"#utility.yul\":3898:3901   */\n      dup1\n        /* \"#utility.yul\":3895:3896   */\n      dup3\n        /* \"#utility.yul\":3892:3902   */\n      gt\n        /* \"#utility.yul\":3889:3925   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":3905:3923   */\n      tag_187\n      tag_132\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3889:3925   */\n    tag_186:\n        /* \"#utility.yul\":3741:3932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3938:4118   */\n    tag_133:\n        /* \"#utility.yul\":3986:4063   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3983:3984   */\n      0x00\n        /* \"#utility.yul\":3976:4064   */\n      mstore\n        /* \"#utility.yul\":4083:4087   */\n      0x12\n        /* \"#utility.yul\":4080:4081   */\n      0x04\n        /* \"#utility.yul\":4073:4088   */\n      mstore\n        /* \"#utility.yul\":4107:4111   */\n      0x24\n        /* \"#utility.yul\":4104:4105   */\n      0x00\n        /* \"#utility.yul\":4097:4112   */\n      revert\n        /* \"#utility.yul\":4124:4309   */\n    tag_69:\n        /* \"#utility.yul\":4164:4165   */\n      0x00\n        /* \"#utility.yul\":4181:4201   */\n      tag_190\n        /* \"#utility.yul\":4199:4200   */\n      dup3\n        /* \"#utility.yul\":4181:4201   */\n      tag_119\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4176:4201   */\n      swap2\n      pop\n        /* \"#utility.yul\":4215:4235   */\n      tag_191\n        /* \"#utility.yul\":4233:4234   */\n      dup4\n        /* \"#utility.yul\":4215:4235   */\n      tag_119\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4210:4235   */\n      swap3\n      pop\n        /* \"#utility.yul\":4254:4255   */\n      dup3\n        /* \"#utility.yul\":4244:4279   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":4259:4277   */\n      tag_193\n      tag_133\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4244:4279   */\n    tag_192:\n        /* \"#utility.yul\":4301:4302   */\n      dup3\n        /* \"#utility.yul\":4298:4299   */\n      dup3\n        /* \"#utility.yul\":4294:4303   */\n      div\n        /* \"#utility.yul\":4289:4303   */\n      swap1\n      pop\n        /* \"#utility.yul\":4124:4309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4315:4462   */\n    tag_134:\n        /* \"#utility.yul\":4416:4427   */\n      0x00\n        /* \"#utility.yul\":4453:4456   */\n      dup2\n        /* \"#utility.yul\":4438:4456   */\n      swap1\n      pop\n        /* \"#utility.yul\":4315:4462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:4582   */\n    tag_135:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4588:4986   */\n    tag_136:\n        /* \"#utility.yul\":4747:4750   */\n      0x00\n        /* \"#utility.yul\":4768:4851   */\n      tag_197\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4844:4847   */\n      dup4\n        /* \"#utility.yul\":4768:4851   */\n      tag_134\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4761:4851   */\n      swap2\n      pop\n        /* \"#utility.yul\":4860:4953   */\n      tag_198\n        /* \"#utility.yul\":4949:4952   */\n      dup3\n        /* \"#utility.yul\":4860:4953   */\n      tag_135\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4973:4976   */\n      dup3\n        /* \"#utility.yul\":4969:4980   */\n      add\n        /* \"#utility.yul\":4962:4980   */\n      swap1\n      pop\n        /* \"#utility.yul\":4588:4986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4992:5371   */\n    tag_81:\n        /* \"#utility.yul\":5176:5179   */\n      0x00\n        /* \"#utility.yul\":5198:5345   */\n      tag_200\n        /* \"#utility.yul\":5341:5344   */\n      dup3\n        /* \"#utility.yul\":5198:5345   */\n      tag_136\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5191:5345   */\n      swap2\n      pop\n        /* \"#utility.yul\":5362:5365   */\n      dup2\n        /* \"#utility.yul\":5355:5365   */\n      swap1\n      pop\n        /* \"#utility.yul\":4992:5371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5377:5546   */\n    tag_137:\n        /* \"#utility.yul\":5517:5538   */\n      0x546970207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":5513:5514   */\n      0x00\n        /* \"#utility.yul\":5505:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5515   */\n      add\n        /* \"#utility.yul\":5494:5539   */\n      mstore\n        /* \"#utility.yul\":5377:5546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5552:5918   */\n    tag_138:\n        /* \"#utility.yul\":5694:5697   */\n      0x00\n        /* \"#utility.yul\":5715:5782   */\n      tag_203\n        /* \"#utility.yul\":5779:5781   */\n      0x13\n        /* \"#utility.yul\":5774:5777   */\n      dup4\n        /* \"#utility.yul\":5715:5782   */\n      tag_129\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5708:5782   */\n      swap2\n      pop\n        /* \"#utility.yul\":5791:5884   */\n      tag_204\n        /* \"#utility.yul\":5880:5883   */\n      dup3\n        /* \"#utility.yul\":5791:5884   */\n      tag_137\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5909:5911   */\n      0x20\n        /* \"#utility.yul\":5904:5907   */\n      dup3\n        /* \"#utility.yul\":5900:5912   */\n      add\n        /* \"#utility.yul\":5893:5912   */\n      swap1\n      pop\n        /* \"#utility.yul\":5552:5918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5924:6343   */\n    tag_87:\n        /* \"#utility.yul\":6090:6094   */\n      0x00\n        /* \"#utility.yul\":6128:6130   */\n      0x20\n        /* \"#utility.yul\":6117:6126   */\n      dup3\n        /* \"#utility.yul\":6113:6131   */\n      add\n        /* \"#utility.yul\":6105:6131   */\n      swap1\n      pop\n        /* \"#utility.yul\":6177:6186   */\n      dup2\n        /* \"#utility.yul\":6171:6175   */\n      dup2\n        /* \"#utility.yul\":6167:6187   */\n      sub\n        /* \"#utility.yul\":6163:6164   */\n      0x00\n        /* \"#utility.yul\":6152:6161   */\n      dup4\n        /* \"#utility.yul\":6148:6165   */\n      add\n        /* \"#utility.yul\":6141:6188   */\n      mstore\n        /* \"#utility.yul\":6205:6336   */\n      tag_206\n        /* \"#utility.yul\":6331:6335   */\n      dup2\n        /* \"#utility.yul\":6205:6336   */\n      tag_138\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6197:6336   */\n      swap1\n      pop\n        /* \"#utility.yul\":5924:6343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6349:6791   */\n    tag_89:\n        /* \"#utility.yul\":6498:6502   */\n      0x00\n        /* \"#utility.yul\":6536:6538   */\n      0x60\n        /* \"#utility.yul\":6525:6534   */\n      dup3\n        /* \"#utility.yul\":6521:6539   */\n      add\n        /* \"#utility.yul\":6513:6539   */\n      swap1\n      pop\n        /* \"#utility.yul\":6549:6620   */\n      tag_208\n        /* \"#utility.yul\":6617:6618   */\n      0x00\n        /* \"#utility.yul\":6606:6615   */\n      dup4\n        /* \"#utility.yul\":6602:6619   */\n      add\n        /* \"#utility.yul\":6593:6599   */\n      dup7\n        /* \"#utility.yul\":6549:6620   */\n      tag_120\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6630:6702   */\n      tag_209\n        /* \"#utility.yul\":6698:6700   */\n      0x20\n        /* \"#utility.yul\":6687:6696   */\n      dup4\n        /* \"#utility.yul\":6683:6701   */\n      add\n        /* \"#utility.yul\":6674:6680   */\n      dup6\n        /* \"#utility.yul\":6630:6702   */\n      tag_120\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6712:6784   */\n      tag_210\n        /* \"#utility.yul\":6780:6782   */\n      0x40\n        /* \"#utility.yul\":6769:6778   */\n      dup4\n        /* \"#utility.yul\":6765:6783   */\n      add\n        /* \"#utility.yul\":6756:6762   */\n      dup5\n        /* \"#utility.yul\":6712:6784   */\n      tag_120\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6349:6791   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6797:6978   */\n    tag_139:\n        /* \"#utility.yul\":6937:6970   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6933:6934   */\n      0x00\n        /* \"#utility.yul\":6925:6931   */\n      dup3\n        /* \"#utility.yul\":6921:6935   */\n      add\n        /* \"#utility.yul\":6914:6971   */\n      mstore\n        /* \"#utility.yul\":6797:6978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6984:7350   */\n    tag_140:\n        /* \"#utility.yul\":7126:7129   */\n      0x00\n        /* \"#utility.yul\":7147:7214   */\n      tag_213\n        /* \"#utility.yul\":7211:7213   */\n      0x1f\n        /* \"#utility.yul\":7206:7209   */\n      dup4\n        /* \"#utility.yul\":7147:7214   */\n      tag_129\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7140:7214   */\n      swap2\n      pop\n        /* \"#utility.yul\":7223:7316   */\n      tag_214\n        /* \"#utility.yul\":7312:7315   */\n      dup3\n        /* \"#utility.yul\":7223:7316   */\n      tag_139\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7341:7343   */\n      0x20\n        /* \"#utility.yul\":7336:7339   */\n      dup3\n        /* \"#utility.yul\":7332:7344   */\n      add\n        /* \"#utility.yul\":7325:7344   */\n      swap1\n      pop\n        /* \"#utility.yul\":6984:7350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7356:7775   */\n    tag_108:\n        /* \"#utility.yul\":7522:7526   */\n      0x00\n        /* \"#utility.yul\":7560:7562   */\n      0x20\n        /* \"#utility.yul\":7549:7558   */\n      dup3\n        /* \"#utility.yul\":7545:7563   */\n      add\n        /* \"#utility.yul\":7537:7563   */\n      swap1\n      pop\n        /* \"#utility.yul\":7609:7618   */\n      dup2\n        /* \"#utility.yul\":7603:7607   */\n      dup2\n        /* \"#utility.yul\":7599:7619   */\n      sub\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7584:7593   */\n      dup4\n        /* \"#utility.yul\":7580:7597   */\n      add\n        /* \"#utility.yul\":7573:7620   */\n      mstore\n        /* \"#utility.yul\":7637:7768   */\n      tag_216\n        /* \"#utility.yul\":7763:7767   */\n      dup2\n        /* \"#utility.yul\":7637:7768   */\n      tag_140\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7629:7768   */\n      swap1\n      pop\n        /* \"#utility.yul\":7356:7775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bf4ad8b93a16d26ff5ec7a65a651e7d69a63b1cba2cb884aee5502b24c9cee6364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 504,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5494:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:4",
														"type": ""
													}
												],
												"src": "545:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:4",
														"type": ""
													}
												],
												"src": "694:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "853:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "863:7:4",
														"type": ""
													}
												],
												"src": "826:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:692:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:33:4"
															},
															"nodeType": "YulIf",
															"src": "1343:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1473:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1517:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1611:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1656:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1750:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1795:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1889:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1934:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1279:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1290:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1302:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1310:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1318:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1326:6:4",
														"type": ""
													}
												],
												"src": "1205:820:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2096:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2113:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2136:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2118:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2118:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2091:3:4",
														"type": ""
													}
												],
												"src": "2031:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2253:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2263:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2263:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2343:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2367:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2299:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2225:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2237:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2248:4:4",
														"type": ""
													}
												],
												"src": "2155:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2479:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2496:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2501:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2517:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2541:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2532:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2532:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2517:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2451:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2456:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2467:11:4",
														"type": ""
													}
												],
												"src": "2383:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2664:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:14:4"
																	},
																	{
																		"hexValue": "496e697469616c206261736520666565206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2698:30:4",
																		"type": "",
																		"value": "Initial base fee must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2656:6:4",
														"type": ""
													}
												],
												"src": "2558:178:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2898:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2964:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2969:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2905:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2905:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2898:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3070:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306",
																	"nodeType": "YulIdentifier",
																	"src": "2981:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2981:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3094:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3090:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3083:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2876:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2884:3:4",
														"type": ""
													}
												],
												"src": "2742:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3285:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3295:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3307:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3318:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3295:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3342:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3353:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3338:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3338:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3361:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3331:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3387:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3521:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3395:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3395:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3387:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3265:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3280:4:4",
														"type": ""
													}
												],
												"src": "3114:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3645:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3667:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3663:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3663:14:4"
																	},
																	{
																		"hexValue": "54617267657420747820636f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3679:29:4",
																		"type": "",
																		"value": "Target tx count must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3637:6:4",
														"type": ""
													}
												],
												"src": "3539:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3868:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3878:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3885:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3878:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4050:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785",
																	"nodeType": "YulIdentifier",
																	"src": "3961:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3961:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4063:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4070:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4063:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3856:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3864:3:4",
														"type": ""
													}
												],
												"src": "3722:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4265:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4275:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4287:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4298:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4275:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4333:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4341:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4367:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4501:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4375:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4367:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4245:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4260:4:4",
														"type": ""
													}
												],
												"src": "4094:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4625:69:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4647:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4643:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:4"
																	},
																	{
																		"hexValue": "506572696f64206c656e677468206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4659:27:4",
																		"type": "",
																		"value": "Period length must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4636:51:4"
														}
													]
												},
												"name": "store_literal_in_memory_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4617:6:4",
														"type": ""
													}
												],
												"src": "4519:175:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4846:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4856:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4927:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4863:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4856:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5028:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa",
																	"nodeType": "YulIdentifier",
																	"src": "4939:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5041:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5052:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5048:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5041:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4834:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4842:3:4",
														"type": ""
													}
												],
												"src": "4700:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5243:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5253:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5265:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5276:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5253:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5300:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5311:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5296:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5296:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5319:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5315:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5289:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5289:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5345:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5479:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5353:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5223:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5238:4:4",
														"type": ""
													}
												],
												"src": "5072:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial base fee must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785(memPtr) {\n\n        mstore(add(memPtr, 0), \"Target tx count must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Period length must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620010ed380380620010ed833981810160405281019062000036919062000356565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620003d6565b60405180910390fd5b620000bb81620001f860201b60201c565b50600180819055505f841162000108576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ff906200044f565b60405180910390fd5b5f83116200014d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014490620004bd565b60405180910390fd5b5f821162000192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000189906200052b565b60405180910390fd5b836002819055508260038190555081600681905550426005819055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200054b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f819050919050565b620002d181620002bd565b8114620002dc575f80fd5b50565b5f81519050620002ef81620002c6565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200032082620002f5565b9050919050565b620003328162000314565b81146200033d575f80fd5b50565b5f81519050620003508162000327565b92915050565b5f805f8060808587031215620003715762000370620002b9565b5b5f6200038087828801620002df565b94505060206200039387828801620002df565b9350506040620003a687828801620002df565b9250506060620003b98782880162000340565b91505092959194509250565b620003d08162000314565b82525050565b5f602082019050620003eb5f830184620003c5565b92915050565b5f82825260208201905092915050565b7f496e697469616c206261736520666565206d757374206265203e2030000000005f82015250565b5f62000437601c83620003f1565b9150620004448262000401565b602082019050919050565b5f6020820190508181035f830152620004688162000429565b9050919050565b7f54617267657420747820636f756e74206d757374206265203e203000000000005f82015250565b5f620004a5601b83620003f1565b9150620004b2826200046f565b602082019050919050565b5f6020820190508181035f830152620004d68162000497565b9050919050565b7f506572696f64206c656e677468206d757374206265203e2030000000000000005f82015250565b5f62000513601983620003f1565b91506200052082620004dd565b602082019050919050565b5f6020820190508181035f830152620005448162000505565b9050919050565b610b9480620005595f395ff3fe608060405260043610610090575f3560e01c8063715018a611610058578063715018a6146101465780638da5cb5b1461015c578063d2ca211514610186578063eda4e6d6146101b0578063f2fde38b146101da57610090565b806316897518146100945780633c540687146100be57806346904840146100e85780636c18f73e146101125780636ef25c3a1461011c575b5f80fd5b34801561009f575f80fd5b506100a8610202565b6040516100b5919061079f565b60405180910390f35b3480156100c9575f80fd5b506100d2610208565b6040516100df919061079f565b60405180910390f35b3480156100f3575f80fd5b506100fc61020e565b60405161010991906107f7565b60405180910390f35b61011a610233565b005b348015610127575f80fd5b50610130610510565b60405161013d919061079f565b60405180910390f35b348015610151575f80fd5b5061015a610516565b005b348015610167575f80fd5b50610170610529565b60405161017d91906107f7565b60405180910390f35b348015610191575f80fd5b5061019a610550565b6040516101a7919061079f565b60405180910390f35b3480156101bb575f80fd5b506101c4610556565b6040516101d1919061079f565b60405180910390f35b3480156101e5575f80fd5b5061020060048036038101906101fb919061083e565b61055c565b005b60035481565b60045481565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61023b6105e0565b600254341015610280576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610277906108c3565b60405180910390fd5b5f6002543461028f919061090e565b905060045f8154809291906102a390610941565b91905055506006546005546102b89190610988565b42106103855760035460045411156102f157600a6002546102d991906109e8565b6002546102e69190610988565b60028190555061033d565b600354600454101561033c575f600a60025461030d91906109e8565b9050600254811061032557600160028190555061033a565b80600254610333919061090e565b6002819055505b505b5b426005819055505f6004819055507f803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c360025460405161037c919061079f565b60405180910390a15b5f811180156103e157505f73ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156104b1575f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161042c90610a45565b5f6040518083038185875af1925050503d805f8114610466576040519150601f19603f3d011682016040523d82523d5f602084013e61046b565b606091505b50509050806104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a690610aa3565b60405180910390fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167fc713f14d184cf4a1747825a79806a836b3f4e1b7f092edc852f56ce98f44d43860025483426040516104fd93929190610ac1565b60405180910390a25061050e61062f565b565b60025481565b61051e610638565b6105275f6106bf565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b60055481565b610564610638565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105d4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105cb91906107f7565b60405180910390fd5b6105dd816106bf565b50565b600260015403610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061c90610b40565b60405180910390fd5b6002600181905550565b60018081905550565b610640610780565b73ffffffffffffffffffffffffffffffffffffffff1661065e610529565b73ffffffffffffffffffffffffffffffffffffffff16146106bd57610681610780565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106b491906107f7565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61079981610787565b82525050565b5f6020820190506107b25f830184610790565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107e1826107b8565b9050919050565b6107f1816107d7565b82525050565b5f60208201905061080a5f8301846107e8565b92915050565b5f80fd5b61081d816107d7565b8114610827575f80fd5b50565b5f8135905061083881610814565b92915050565b5f6020828403121561085357610852610810565b5b5f6108608482850161082a565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e74206665652070726f7669646564000000000000005f82015250565b5f6108ad601983610869565b91506108b882610879565b602082019050919050565b5f6020820190508181035f8301526108da816108a1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61091882610787565b915061092383610787565b925082820390508181111561093b5761093a6108e1565b5b92915050565b5f61094b82610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361097d5761097c6108e1565b5b600182019050919050565b5f61099282610787565b915061099d83610787565b92508282019050808211156109b5576109b46108e1565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6109f282610787565b91506109fd83610787565b925082610a0d57610a0c6109bb565b5b828204905092915050565b5f81905092915050565b50565b5f610a305f83610a18565b9150610a3b82610a22565b5f82019050919050565b5f610a4f82610a25565b9150819050919050565b7f546970207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f610a8d601383610869565b9150610a9882610a59565b602082019050919050565b5f6020820190508181035f830152610aba81610a81565b9050919050565b5f606082019050610ad45f830186610790565b610ae16020830185610790565b610aee6040830184610790565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610b2a601f83610869565b9150610b3582610af6565b602082019050919050565b5f6020820190508181035f830152610b5781610b1e565b905091905056fea2646970667358221220bf4ad8b93a16d26ff5ec7a65a651e7d69a63b1cba2cb884aee5502b24c9cee6364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10ED CODESIZE SUB DUP1 PUSH3 0x10ED DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x356 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x1F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP5 GT PUSH3 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFF SWAP1 PUSH3 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH3 0x14D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x144 SWAP1 PUSH3 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH3 0x192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x189 SWAP1 PUSH3 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x54B JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D1 DUP2 PUSH3 0x2BD JUMP JUMPDEST DUP2 EQ PUSH3 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2EF DUP2 PUSH3 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x320 DUP3 PUSH3 0x2F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x332 DUP2 PUSH3 0x314 JUMP JUMPDEST DUP2 EQ PUSH3 0x33D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x350 DUP2 PUSH3 0x327 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x371 JUMPI PUSH3 0x370 PUSH3 0x2B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x380 DUP8 DUP3 DUP9 ADD PUSH3 0x2DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x393 DUP8 DUP3 DUP9 ADD PUSH3 0x2DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x3A6 DUP8 DUP3 DUP9 ADD PUSH3 0x2DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x3B9 DUP8 DUP3 DUP9 ADD PUSH3 0x340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x3D0 DUP2 PUSH3 0x314 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3EB PUSH0 DUP4 ADD DUP5 PUSH3 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C206261736520666565206D757374206265203E203000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x437 PUSH1 0x1C DUP4 PUSH3 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH3 0x444 DUP3 PUSH3 0x401 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x468 DUP2 PUSH3 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54617267657420747820636F756E74206D757374206265203E20300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4A5 PUSH1 0x1B DUP4 PUSH3 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH3 0x4B2 DUP3 PUSH3 0x46F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x4D6 DUP2 PUSH3 0x497 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506572696F64206C656E677468206D757374206265203E203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x513 PUSH1 0x19 DUP4 PUSH3 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH3 0x520 DUP3 PUSH3 0x4DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x544 DUP2 PUSH3 0x505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB94 DUP1 PUSH3 0x559 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xD2CA2115 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xEDA4E6D6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DA JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x16897518 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x3C540687 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6C18F73E EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x6EF25C3A EQ PUSH2 0x11C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x233 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x516 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x277 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3 SWAP1 PUSH2 0x941 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x385 JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0xA PUSH1 0x2 SLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x33D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x33C JUMPI PUSH0 PUSH1 0xA PUSH1 0x2 SLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x33A JUMP JUMPDEST DUP1 PUSH1 0x2 SLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x803BEE7E92BBC6AE7A1551F9F4ED3E31A8EA8DF32E93332F41B0028F1091F9C3 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3E1 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x4B1 JUMPI PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x42C SWAP1 PUSH2 0xA45 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A6 SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC713F14D184CF4A1747825A79806A836B3F4E1B7F092EDC852F56CE98F44D438 PUSH1 0x2 SLOAD DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x4FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x50E PUSH2 0x62F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x638 JUMP JUMPDEST PUSH2 0x527 PUSH0 PUSH2 0x6BF JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x638 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x6BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61C SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x640 PUSH2 0x780 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x65E PUSH2 0x529 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH2 0x681 PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E1 DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F1 DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80A PUSH0 DUP4 ADD DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x81D DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x827 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x838 DUP2 PUSH2 0x814 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH2 0x852 PUSH2 0x810 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x860 DUP5 DUP3 DUP6 ADD PUSH2 0x82A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206665652070726F766964656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8AD PUSH1 0x19 DUP4 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B8 DUP3 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8DA DUP2 PUSH2 0x8A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x918 DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH2 0x923 DUP4 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x93B JUMPI PUSH2 0x93A PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x94B DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x992 DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH2 0x99D DUP4 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9B5 JUMPI PUSH2 0x9B4 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9F2 DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH2 0x9FD DUP4 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA30 PUSH0 DUP4 PUSH2 0xA18 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3B DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA4F DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546970207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA8D PUSH1 0x13 DUP4 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP PUSH2 0xA98 DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABA DUP2 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAD4 PUSH0 DUP4 ADD DUP7 PUSH2 0x790 JUMP JUMPDEST PUSH2 0xAE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x790 JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x790 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB2A PUSH1 0x1F DUP4 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP PUSH2 0xB35 DUP3 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB57 DUP2 PUSH2 0xB1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0x4A 0xD8 0xB9 GASPRICE AND 0xD2 PUSH16 0xF5EC7A65A651E7D69A63B1CBA2CB884A 0xEE SSTORE MUL 0xB2 0x4C SWAP13 0xEE PUSH4 0x64736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "583:4206:3:-:0;;;2117:639;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2270:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;2318:1:3::1;2300:15;:19;2292:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2387:1;2370:14;:18;2362:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2454:1;2438:13;:17;2430:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2579:15;2569:7;:25;;;;2620:14;2604:13;:30;;;;2659:13;2644:12;:28;;;;2696:15;2682:11;:29;;;;2736:13;2721:12;;:28;;;;;;;;;;;;;;;;;;2117:639:::0;;;;583:4206;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:118::-;2118:24;2136:5;2118:24;:::i;:::-;2113:3;2106:37;2031:118;;:::o;2155:222::-;2248:4;2286:2;2275:9;2271:18;2263:26;;2299:71;2367:1;2356:9;2352:17;2343:6;2299:71;:::i;:::-;2155:222;;;;:::o;2383:169::-;2467:11;2501:6;2496:3;2489:19;2541:4;2536:3;2532:14;2517:29;;2383:169;;;;:::o;2558:178::-;2698:30;2694:1;2686:6;2682:14;2675:54;2558:178;:::o;2742:366::-;2884:3;2905:67;2969:2;2964:3;2905:67;:::i;:::-;2898:74;;2981:93;3070:3;2981:93;:::i;:::-;3099:2;3094:3;3090:12;3083:19;;2742:366;;;:::o;3114:419::-;3280:4;3318:2;3307:9;3303:18;3295:26;;3367:9;3361:4;3357:20;3353:1;3342:9;3338:17;3331:47;3395:131;3521:4;3395:131;:::i;:::-;3387:139;;3114:419;;;:::o;3539:177::-;3679:29;3675:1;3667:6;3663:14;3656:53;3539:177;:::o;3722:366::-;3864:3;3885:67;3949:2;3944:3;3885:67;:::i;:::-;3878:74;;3961:93;4050:3;3961:93;:::i;:::-;4079:2;4074:3;4070:12;4063:19;;3722:366;;;:::o;4094:419::-;4260:4;4298:2;4287:9;4283:18;4275:26;;4347:9;4341:4;4337:20;4333:1;4322:9;4318:17;4311:47;4375:131;4501:4;4375:131;:::i;:::-;4367:139;;4094:419;;;:::o;4519:175::-;4659:27;4655:1;4647:6;4643:14;4636:51;4519:175;:::o;4700:366::-;4842:3;4863:67;4927:2;4922:3;4863:67;:::i;:::-;4856:74;;4939:93;5028:3;4939:93;:::i;:::-;5057:2;5052:3;5048:12;5041:19;;4700:366;;;:::o;5072:419::-;5238:4;5276:2;5265:9;5261:18;5253:26;;5325:9;5319:4;5315:20;5311:1;5300:9;5296:17;5289:47;5353:131;5479:4;5353:131;:::i;:::-;5345:139;;5072:419;;;:::o;583:4206:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1592,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_224": {
									"entryPoint": 1920,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 1583,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 1504,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1727,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@baseFee_254": {
									"entryPoint": 1296,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeRecipient_269": {
									"entryPoint": 526,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1321,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@performAction_469": {
									"entryPoint": 563,
									"id": 469,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@periodLength_266": {
									"entryPoint": 1360,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@periodStart_263": {
									"entryPoint": 1366,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1302,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@targetTxCount_257": {
									"entryPoint": 514,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1372,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@txCount_260": {
									"entryPoint": 520,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7778:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:4",
														"type": ""
													}
												],
												"src": "442:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:4",
														"type": ""
													}
												],
												"src": "574:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:4",
														"type": ""
													}
												],
												"src": "676:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:4",
														"type": ""
													}
												],
												"src": "800:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:4",
														"type": ""
													}
												],
												"src": "1028:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:4"
															},
															"nodeType": "YulIf",
															"src": "1408:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:4",
														"type": ""
													}
												],
												"src": "1355:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:4",
														"type": ""
													}
												],
												"src": "1483:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:4"
															},
															"nodeType": "YulIf",
															"src": "1704:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:4",
														"type": ""
													}
												],
												"src": "1628:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2031:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2036:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2047:11:4",
														"type": ""
													}
												],
												"src": "1963:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2244:69:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:4"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206665652070726f7669646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2278:27:4",
																		"type": "",
																		"value": "Insufficient fee provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2255:51:4"
														}
													]
												},
												"name": "store_literal_in_memory_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2236:6:4",
														"type": ""
													}
												],
												"src": "2138:175:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2465:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2475:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2541:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2546:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2482:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2475:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2647:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066",
																	"nodeType": "YulIdentifier",
																	"src": "2558:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2660:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2671:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2676:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2660:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2453:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2461:3:4",
														"type": ""
													}
												],
												"src": "2319:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2862:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2872:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2884:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2895:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2872:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2919:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2930:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2938:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2944:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2964:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3098:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2972:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2964:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2842:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2857:4:4",
														"type": ""
													}
												],
												"src": "2691:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3144:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3258:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3251:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3116:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3357:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3380:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3362:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3357:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3391:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3414:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3396:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3391:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3425:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3437:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3440:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3433:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3425:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3467:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3469:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3469:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3469:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3458:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3464:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3455:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:11:4"
															},
															"nodeType": "YulIf",
															"src": "3452:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3333:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3336:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3342:4:4",
														"type": ""
													}
												],
												"src": "3302:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3545:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3555:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3582:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3564:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3555:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3678:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3680:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3680:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3680:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3603:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3600:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:77:4"
															},
															"nodeType": "YulIf",
															"src": "3597:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3709:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3720:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3727:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3716:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3709:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3531:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3541:3:4",
														"type": ""
													}
												],
												"src": "3502:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3785:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3795:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3818:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3800:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3795:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3829:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3852:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3834:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3834:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3829:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3863:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3874:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3877:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3870:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3863:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3903:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3905:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3905:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3905:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3895:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3898:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3892:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:10:4"
															},
															"nodeType": "YulIf",
															"src": "3889:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3772:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3775:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3781:3:4",
														"type": ""
													}
												],
												"src": "3741:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3966:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3986:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3976:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4080:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4083:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4073:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3938:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4166:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4176:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4199:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4181:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4181:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4176:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4210:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4233:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4215:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4210:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4257:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4259:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4259:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4259:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4254:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:9:4"
															},
															"nodeType": "YulIf",
															"src": "4244:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4289:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4298:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4301:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4294:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4294:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4289:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4155:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4158:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4164:1:4",
														"type": ""
													}
												],
												"src": "4124:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4428:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4438:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4453:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4438:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4400:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4405:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4416:11:4",
														"type": ""
													}
												],
												"src": "4315:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4574:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4566:6:4",
														"type": ""
													}
												],
												"src": "4468:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4751:235:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4761:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4844:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4768:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:83:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4949:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "4860:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4860:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4962:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4973:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4962:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4739:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4747:3:4",
														"type": ""
													}
												],
												"src": "4588:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:191:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5191:154:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5341:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5198:141:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:147:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5191:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5355:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5362:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5167:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5176:3:4",
														"type": ""
													}
												],
												"src": "4992:379:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5483:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5505:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5513:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5501:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5501:14:4"
																	},
																	{
																		"hexValue": "546970207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5517:21:4",
																		"type": "",
																		"value": "Tip transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5494:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5494:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5475:6:4",
														"type": ""
													}
												],
												"src": "5377:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5698:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5708:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5774:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5715:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5715:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5880:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257",
																	"nodeType": "YulIdentifier",
																	"src": "5791:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5893:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5904:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5893:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5686:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5694:3:4",
														"type": ""
													}
												],
												"src": "5552:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6095:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6105:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6117:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6105:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6152:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6163:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6148:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6148:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6171:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6177:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6167:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6167:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6141:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6141:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6197:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6331:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6205:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6197:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6075:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6090:4:4",
														"type": ""
													}
												],
												"src": "5924:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6503:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6513:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6525:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6536:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6513:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6593:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6606:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6617:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6602:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6602:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6549:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6549:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6687:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6698:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6683:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6683:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6630:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6630:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6756:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6780:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6712:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6712:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6459:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6471:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6479:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6487:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6498:4:4",
														"type": ""
													}
												],
												"src": "6349:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6903:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6925:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6933:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6937:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6914:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6914:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6914:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6895:6:4",
														"type": ""
													}
												],
												"src": "6797:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7130:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7140:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7206:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7211:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7147:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7147:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7312:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7223:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7223:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7223:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7325:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7336:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7332:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7332:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7325:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7118:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7126:3:4",
														"type": ""
													}
												],
												"src": "6984:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7527:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7537:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7549:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7560:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7545:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7537:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7580:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7603:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7609:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7599:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7599:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7573:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7573:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7629:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7763:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7637:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7637:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7629:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7507:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7522:4:4",
														"type": ""
													}
												],
												"src": "7356:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient fee provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tip transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610090575f3560e01c8063715018a611610058578063715018a6146101465780638da5cb5b1461015c578063d2ca211514610186578063eda4e6d6146101b0578063f2fde38b146101da57610090565b806316897518146100945780633c540687146100be57806346904840146100e85780636c18f73e146101125780636ef25c3a1461011c575b5f80fd5b34801561009f575f80fd5b506100a8610202565b6040516100b5919061079f565b60405180910390f35b3480156100c9575f80fd5b506100d2610208565b6040516100df919061079f565b60405180910390f35b3480156100f3575f80fd5b506100fc61020e565b60405161010991906107f7565b60405180910390f35b61011a610233565b005b348015610127575f80fd5b50610130610510565b60405161013d919061079f565b60405180910390f35b348015610151575f80fd5b5061015a610516565b005b348015610167575f80fd5b50610170610529565b60405161017d91906107f7565b60405180910390f35b348015610191575f80fd5b5061019a610550565b6040516101a7919061079f565b60405180910390f35b3480156101bb575f80fd5b506101c4610556565b6040516101d1919061079f565b60405180910390f35b3480156101e5575f80fd5b5061020060048036038101906101fb919061083e565b61055c565b005b60035481565b60045481565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61023b6105e0565b600254341015610280576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610277906108c3565b60405180910390fd5b5f6002543461028f919061090e565b905060045f8154809291906102a390610941565b91905055506006546005546102b89190610988565b42106103855760035460045411156102f157600a6002546102d991906109e8565b6002546102e69190610988565b60028190555061033d565b600354600454101561033c575f600a60025461030d91906109e8565b9050600254811061032557600160028190555061033a565b80600254610333919061090e565b6002819055505b505b5b426005819055505f6004819055507f803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c360025460405161037c919061079f565b60405180910390a15b5f811180156103e157505f73ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156104b1575f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161042c90610a45565b5f6040518083038185875af1925050503d805f8114610466576040519150601f19603f3d011682016040523d82523d5f602084013e61046b565b606091505b50509050806104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a690610aa3565b60405180910390fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167fc713f14d184cf4a1747825a79806a836b3f4e1b7f092edc852f56ce98f44d43860025483426040516104fd93929190610ac1565b60405180910390a25061050e61062f565b565b60025481565b61051e610638565b6105275f6106bf565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b60055481565b610564610638565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105d4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105cb91906107f7565b60405180910390fd5b6105dd816106bf565b50565b600260015403610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061c90610b40565b60405180910390fd5b6002600181905550565b60018081905550565b610640610780565b73ffffffffffffffffffffffffffffffffffffffff1661065e610529565b73ffffffffffffffffffffffffffffffffffffffff16146106bd57610681610780565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106b491906107f7565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61079981610787565b82525050565b5f6020820190506107b25f830184610790565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107e1826107b8565b9050919050565b6107f1816107d7565b82525050565b5f60208201905061080a5f8301846107e8565b92915050565b5f80fd5b61081d816107d7565b8114610827575f80fd5b50565b5f8135905061083881610814565b92915050565b5f6020828403121561085357610852610810565b5b5f6108608482850161082a565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e74206665652070726f7669646564000000000000005f82015250565b5f6108ad601983610869565b91506108b882610879565b602082019050919050565b5f6020820190508181035f8301526108da816108a1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61091882610787565b915061092383610787565b925082820390508181111561093b5761093a6108e1565b5b92915050565b5f61094b82610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361097d5761097c6108e1565b5b600182019050919050565b5f61099282610787565b915061099d83610787565b92508282019050808211156109b5576109b46108e1565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6109f282610787565b91506109fd83610787565b925082610a0d57610a0c6109bb565b5b828204905092915050565b5f81905092915050565b50565b5f610a305f83610a18565b9150610a3b82610a22565b5f82019050919050565b5f610a4f82610a25565b9150819050919050565b7f546970207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f610a8d601383610869565b9150610a9882610a59565b602082019050919050565b5f6020820190508181035f830152610aba81610a81565b9050919050565b5f606082019050610ad45f830186610790565b610ae16020830185610790565b610aee6040830184610790565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610b2a601f83610869565b9150610b3582610af6565b602082019050919050565b5f6020820190508181035f830152610b5781610b1e565b905091905056fea2646970667358221220bf4ad8b93a16d26ff5ec7a65a651e7d69a63b1cba2cb884aee5502b24c9cee6364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xD2CA2115 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xEDA4E6D6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DA JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x16897518 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x3C540687 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6C18F73E EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x6EF25C3A EQ PUSH2 0x11C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x233 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x516 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x277 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3 SWAP1 PUSH2 0x941 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x385 JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0xA PUSH1 0x2 SLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x33D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x33C JUMPI PUSH0 PUSH1 0xA PUSH1 0x2 SLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 LT PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x33A JUMP JUMPDEST DUP1 PUSH1 0x2 SLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x803BEE7E92BBC6AE7A1551F9F4ED3E31A8EA8DF32E93332F41B0028F1091F9C3 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3E1 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x4B1 JUMPI PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x42C SWAP1 PUSH2 0xA45 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A6 SWAP1 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC713F14D184CF4A1747825A79806A836B3F4E1B7F092EDC852F56CE98F44D438 PUSH1 0x2 SLOAD DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x4FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x50E PUSH2 0x62F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x638 JUMP JUMPDEST PUSH2 0x527 PUSH0 PUSH2 0x6BF JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x564 PUSH2 0x638 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DD DUP2 PUSH2 0x6BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61C SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x640 PUSH2 0x780 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x65E PUSH2 0x529 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH2 0x681 PUSH2 0x780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E1 DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F1 DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80A PUSH0 DUP4 ADD DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x81D DUP2 PUSH2 0x7D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x827 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x838 DUP2 PUSH2 0x814 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH2 0x852 PUSH2 0x810 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x860 DUP5 DUP3 DUP6 ADD PUSH2 0x82A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206665652070726F766964656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8AD PUSH1 0x19 DUP4 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B8 DUP3 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8DA DUP2 PUSH2 0x8A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x918 DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH2 0x923 DUP4 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x93B JUMPI PUSH2 0x93A PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x94B DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x992 DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH2 0x99D DUP4 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9B5 JUMPI PUSH2 0x9B4 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9F2 DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH2 0x9FD DUP4 PUSH2 0x787 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x9BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA30 PUSH0 DUP4 PUSH2 0xA18 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3B DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA4F DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546970207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA8D PUSH1 0x13 DUP4 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP PUSH2 0xA98 DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xABA DUP2 PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAD4 PUSH0 DUP4 ADD DUP7 PUSH2 0x790 JUMP JUMPDEST PUSH2 0xAE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x790 JUMP JUMPDEST PUSH2 0xAEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x790 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB2A PUSH1 0x1F DUP4 PUSH2 0x869 JUMP JUMPDEST SWAP2 POP PUSH2 0xB35 DUP3 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB57 DUP2 PUSH2 0xB1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0x4A 0xD8 0xB9 GASPRICE AND 0xD2 PUSH16 0xF5EC7A65A651E7D69A63B1CBA2CB884A 0xEE SSTORE MUL 0xB2 0x4C SWAP13 0xEE PUSH4 0x64736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "583:4206:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;924:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1215:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3082:1705;;;:::i;:::-;;724:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1103:27:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1019:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;814:28:3;;;;:::o;924:22::-;;;;:::o;1215:27::-;;;;;;;;;;;;;:::o;3082:1705::-;2261:21:1;:19;:21::i;:::-;3168:7:3::1;;3155:9;:20;;3147:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3278:11;3304:7;;3292:9;:19;;;;:::i;:::-;3278:33;;3365:7;;:9;;;;;;;;;:::i;:::-;;;;;;3472:12;;3458:11;;:26;;;;:::i;:::-;3439:15;:45;3435:926;;3766:13;;3756:7;;:23;3752:451;;;3917:2;3907:7;;:12;;;;:::i;:::-;3896:7;;:24;;;;:::i;:::-;3886:7;:34;;;;3752:451;;;3955:13;;3945:7;;:23;3941:262;;;3988:16;4017:2;4007:7;;:12;;;;:::i;:::-;3988:31;;4053:7;;4041:8;:19;4037:152;;4094:1;4084:7;:11;;;;4037:152;;;4162:8;4152:7;;:18;;;;:::i;:::-;4142:7;:28;;;;4037:152;3970:233;3941:262;3752:451;4268:15;4254:11;:29;;;;4307:1;4297:7;:11;;;;4327:23;4342:7;;4327:23;;;;;;:::i;:::-;;;;;;;;3435:926;4457:1;4451:3;:7;:37;;;;;4486:1;4462:26;;:12;;;;;;;;;;;:26;;;;4451:37;4447:182;;;4505:12;4531;;;;;;;;;;;4523:26;;4557:3;4523:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4504:61;;;4587:7;4579:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;4490:139;4447:182;4738:10;4722:58;;;4750:7;;4759:3;4764:15;4722:58;;;;;;;;:::i;:::-;;;;;;;;3137:1650;2303:20:1::0;:18;:20::i;:::-;3082:1705:3:o;724:22::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1103:27:3:-;;;;:::o;1019:26::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:175::-;2278:27;2274:1;2266:6;2262:14;2255:51;2138:175;:::o;2319:366::-;2461:3;2482:67;2546:2;2541:3;2482:67;:::i;:::-;2475:74;;2558:93;2647:3;2558:93;:::i;:::-;2676:2;2671:3;2667:12;2660:19;;2319:366;;;:::o;2691:419::-;2857:4;2895:2;2884:9;2880:18;2872:26;;2944:9;2938:4;2934:20;2930:1;2919:9;2915:17;2908:47;2972:131;3098:4;2972:131;:::i;:::-;2964:139;;2691:419;;;:::o;3116:180::-;3164:77;3161:1;3154:88;3261:4;3258:1;3251:15;3285:4;3282:1;3275:15;3302:194;3342:4;3362:20;3380:1;3362:20;:::i;:::-;3357:25;;3396:20;3414:1;3396:20;:::i;:::-;3391:25;;3440:1;3437;3433:9;3425:17;;3464:1;3458:4;3455:11;3452:37;;;3469:18;;:::i;:::-;3452:37;3302:194;;;;:::o;3502:233::-;3541:3;3564:24;3582:5;3564:24;:::i;:::-;3555:33;;3610:66;3603:5;3600:77;3597:103;;3680:18;;:::i;:::-;3597:103;3727:1;3720:5;3716:13;3709:20;;3502:233;;;:::o;3741:191::-;3781:3;3800:20;3818:1;3800:20;:::i;:::-;3795:25;;3834:20;3852:1;3834:20;:::i;:::-;3829:25;;3877:1;3874;3870:9;3863:16;;3898:3;3895:1;3892:10;3889:36;;;3905:18;;:::i;:::-;3889:36;3741:191;;;;:::o;3938:180::-;3986:77;3983:1;3976:88;4083:4;4080:1;4073:15;4107:4;4104:1;4097:15;4124:185;4164:1;4181:20;4199:1;4181:20;:::i;:::-;4176:25;;4215:20;4233:1;4215:20;:::i;:::-;4210:25;;4254:1;4244:35;;4259:18;;:::i;:::-;4244:35;4301:1;4298;4294:9;4289:14;;4124:185;;;;:::o;4315:147::-;4416:11;4453:3;4438:18;;4315:147;;;;:::o;4468:114::-;;:::o;4588:398::-;4747:3;4768:83;4849:1;4844:3;4768:83;:::i;:::-;4761:90;;4860:93;4949:3;4860:93;:::i;:::-;4978:1;4973:3;4969:11;4962:18;;4588:398;;;:::o;4992:379::-;5176:3;5198:147;5341:3;5198:147;:::i;:::-;5191:154;;5362:3;5355:10;;4992:379;;;:::o;5377:169::-;5517:21;5513:1;5505:6;5501:14;5494:45;5377:169;:::o;5552:366::-;5694:3;5715:67;5779:2;5774:3;5715:67;:::i;:::-;5708:74;;5791:93;5880:3;5791:93;:::i;:::-;5909:2;5904:3;5900:12;5893:19;;5552:366;;;:::o;5924:419::-;6090:4;6128:2;6117:9;6113:18;6105:26;;6177:9;6171:4;6167:20;6163:1;6152:9;6148:17;6141:47;6205:131;6331:4;6205:131;:::i;:::-;6197:139;;5924:419;;;:::o;6349:442::-;6498:4;6536:2;6525:9;6521:18;6513:26;;6549:71;6617:1;6606:9;6602:17;6593:6;6549:71;:::i;:::-;6630:72;6698:2;6687:9;6683:18;6674:6;6630:72;:::i;:::-;6712;6780:2;6769:9;6765:18;6756:6;6712:72;:::i;:::-;6349:442;;;;;;:::o;6797:181::-;6937:33;6933:1;6925:6;6921:14;6914:57;6797:181;:::o;6984:366::-;7126:3;7147:67;7211:2;7206:3;7147:67;:::i;:::-;7140:74;;7223:93;7312:3;7223:93;:::i;:::-;7341:2;7336:3;7332:12;7325:19;;6984:366;;;:::o;7356:419::-;7522:4;7560:2;7549:9;7545:18;7537:26;;7609:9;7603:4;7599:20;7595:1;7584:9;7580:17;7573:47;7637:131;7763:4;7637:131;:::i;:::-;7629:139;;7356:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "592800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"baseFee()": "2514",
								"feeRecipient()": "2553",
								"owner()": "2537",
								"performAction()": "infinite",
								"periodLength()": "2469",
								"periodStart()": "2491",
								"renounceOwnership()": "infinite",
								"targetTxCount()": "2426",
								"transferOwnership(address)": "infinite",
								"txCount()": "2448"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2117,
									"end": 2756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2280,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2319,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2315,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2319,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2292,
									"end": 2352,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2292,
									"end": 2352,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2387,
									"end": 2388,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2370,
									"end": 2384,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2370,
									"end": 2388,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2362,
									"end": 2420,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2362,
									"end": 2420,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2454,
									"end": 2455,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2438,
									"end": 2451,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2438,
									"end": 2455,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2430,
									"end": 2485,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2430,
									"end": 2485,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2594,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2569,
									"end": 2576,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2569,
									"end": 2594,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2569,
									"end": 2594,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2569,
									"end": 2594,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2569,
									"end": 2594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2620,
									"end": 2634,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2604,
									"end": 2617,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2604,
									"end": 2634,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2604,
									"end": 2634,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2604,
									"end": 2634,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2604,
									"end": 2634,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2659,
									"end": 2672,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2644,
									"end": 2656,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2644,
									"end": 2672,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2696,
									"end": 2711,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": 2682,
									"end": 2693,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2682,
									"end": 2711,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2682,
									"end": 2711,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2682,
									"end": 2711,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2682,
									"end": 2711,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2736,
									"end": 2749,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2721,
									"end": 2733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2721,
									"end": 2749,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2756,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2136,
									"end": 2141,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2118,
									"end": 2142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2113,
									"end": 2116,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2143,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2031,
									"end": 2149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2288,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2275,
									"end": 2284,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2271,
									"end": 2289,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2367,
									"end": 2368,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2356,
									"end": 2365,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2369,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2343,
									"end": 2349,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 2299,
									"end": 2370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2155,
									"end": 2377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2467,
									"end": 2478,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2507,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2496,
									"end": 2499,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2489,
									"end": 2508,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2541,
									"end": 2545,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2536,
									"end": 2539,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2532,
									"end": 2546,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2517,
									"end": 2546,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2517,
									"end": 2546,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2736,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2558,
									"end": 2736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2728,
									"name": "PUSH",
									"source": 4,
									"value": "496E697469616C206261736520666565206D757374206265203E203000000000"
								},
								{
									"begin": 2694,
									"end": 2695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2682,
									"end": 2696,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2675,
									"end": 2729,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2736,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 3108,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 2742,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2884,
									"end": 2887,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2905,
									"end": 2972,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2969,
									"end": 2971,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 2964,
									"end": 2967,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2905,
									"end": 2972,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2905,
									"end": 2972,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2905,
									"end": 2972,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2905,
									"end": 2972,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2898,
									"end": 2972,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2898,
									"end": 2972,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 3070,
									"end": 3073,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2981,
									"end": 3074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2981,
									"end": 3074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3099,
									"end": 3101,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3094,
									"end": 3097,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3090,
									"end": 3102,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 3108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 3108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 3108,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2742,
									"end": 3108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3114,
									"end": 3533,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 3114,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3280,
									"end": 3284,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3318,
									"end": 3320,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3307,
									"end": 3316,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3303,
									"end": 3321,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3321,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3321,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3367,
									"end": 3376,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3361,
									"end": 3365,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3357,
									"end": 3377,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3353,
									"end": 3354,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3342,
									"end": 3351,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3338,
									"end": 3355,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3331,
									"end": 3378,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3395,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3521,
									"end": 3525,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3395,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3395,
									"end": 3526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3395,
									"end": 3526,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3395,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3387,
									"end": 3526,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3387,
									"end": 3526,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3114,
									"end": 3533,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3114,
									"end": 3533,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3114,
									"end": 3533,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3114,
									"end": 3533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3539,
									"end": 3716,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3539,
									"end": 3716,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3679,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "54617267657420747820636F756E74206D757374206265203E20300000000000"
								},
								{
									"begin": 3675,
									"end": 3676,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3667,
									"end": 3673,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3663,
									"end": 3677,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3656,
									"end": 3709,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3539,
									"end": 3716,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3539,
									"end": 3716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 4088,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3722,
									"end": 4088,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3864,
									"end": 3867,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3885,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3949,
									"end": 3951,
									"name": "PUSH",
									"source": 4,
									"value": "1B"
								},
								{
									"begin": 3944,
									"end": 3947,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3885,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3885,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3885,
									"end": 3952,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3885,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3878,
									"end": 3952,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 4050,
									"end": 4053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3961,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3961,
									"end": 4054,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3961,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4079,
									"end": 4081,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4074,
									"end": 4077,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4070,
									"end": 4082,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4063,
									"end": 4082,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4063,
									"end": 4082,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 4088,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 4088,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 4088,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 4088,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4094,
									"end": 4513,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4094,
									"end": 4513,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4260,
									"end": 4264,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4298,
									"end": 4300,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4287,
									"end": 4296,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4283,
									"end": 4301,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4275,
									"end": 4301,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4275,
									"end": 4301,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4347,
									"end": 4356,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4341,
									"end": 4345,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4337,
									"end": 4357,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4333,
									"end": 4334,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4322,
									"end": 4331,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4318,
									"end": 4335,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4311,
									"end": 4358,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4375,
									"end": 4506,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 4501,
									"end": 4505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4375,
									"end": 4506,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 4375,
									"end": 4506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4375,
									"end": 4506,
									"name": "tag",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 4375,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4506,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4367,
									"end": 4506,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4094,
									"end": 4513,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4094,
									"end": 4513,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4094,
									"end": 4513,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4094,
									"end": 4513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4519,
									"end": 4694,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 4519,
									"end": 4694,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4659,
									"end": 4686,
									"name": "PUSH",
									"source": 4,
									"value": "506572696F64206C656E677468206D757374206265203E203000000000000000"
								},
								{
									"begin": 4655,
									"end": 4656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4647,
									"end": 4653,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4636,
									"end": 4687,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4519,
									"end": 4694,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4519,
									"end": 4694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 5066,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 4700,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4842,
									"end": 4845,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4863,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4927,
									"end": 4929,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 4922,
									"end": 4925,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4863,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 4863,
									"end": 4930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4863,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4863,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4856,
									"end": 4930,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4856,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4939,
									"end": 5032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 5028,
									"end": 5031,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4939,
									"end": 5032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 4939,
									"end": 5032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4939,
									"end": 5032,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 4939,
									"end": 5032,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5057,
									"end": 5059,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5052,
									"end": 5055,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5048,
									"end": 5060,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5060,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5060,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 5066,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 5066,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 5066,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5072,
									"end": 5491,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 5072,
									"end": 5491,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5238,
									"end": 5242,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5276,
									"end": 5278,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5265,
									"end": 5274,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5261,
									"end": 5279,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5253,
									"end": 5279,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5253,
									"end": 5279,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5325,
									"end": 5334,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5319,
									"end": 5323,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5315,
									"end": 5335,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 5311,
									"end": 5312,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5309,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5296,
									"end": 5313,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5336,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 5479,
									"end": 5483,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 5353,
									"end": 5484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5484,
									"name": "tag",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 5353,
									"end": 5484,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5345,
									"end": 5484,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5345,
									"end": 5484,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5072,
									"end": 5491,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5072,
									"end": 5491,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5072,
									"end": 5491,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5072,
									"end": 5491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 4789,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf4ad8b93a16d26ff5ec7a65a651e7d69a63b1cba2cb884aee5502b24c9cee6364736f6c63430008140033",
									".code": [
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "D2CA2115"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "EDA4E6D6"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "16897518"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "3C540687"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "46904840"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "6C18F73E"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "6EF25C3A"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 4789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 814,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 814,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 924,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1215,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1215,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3082,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 724,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1103,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1103,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1019,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1019,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 814,
											"end": 842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 814,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 924,
											"end": 946,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3082,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3168,
											"end": 3175,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3164,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3175,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3175,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3147,
											"end": 3205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3147,
											"end": 3205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3304,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3301,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3292,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3292,
											"end": 3311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3292,
											"end": 3311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3365,
											"end": 3374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3472,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3458,
											"end": 3469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3458,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3458,
											"end": 3484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3458,
											"end": 3484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3454,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3484,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3435,
											"end": 4361,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3766,
											"end": 3779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3766,
											"end": 3779,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3756,
											"end": 3763,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3779,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 3919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 3907,
											"end": 3914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3907,
											"end": 3914,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3907,
											"end": 3919,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3907,
											"end": 3919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3907,
											"end": 3919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3896,
											"end": 3903,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3896,
											"end": 3920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3896,
											"end": 3920,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3896,
											"end": 3920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3886,
											"end": 3920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3920,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3920,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3955,
											"end": 3968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3945,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 4203,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3941,
											"end": 4203,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 4007,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4007,
											"end": 4014,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4007,
											"end": 4019,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4007,
											"end": 4019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4019,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4053,
											"end": 4060,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4060,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4084,
											"end": 4095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4095,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4162,
											"end": 4170,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4152,
											"end": 4159,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4152,
											"end": 4170,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4152,
											"end": 4170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4152,
											"end": 4170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4142,
											"end": 4170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4170,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4170,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4037,
											"end": 4189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3970,
											"end": 4203,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 4203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3941,
											"end": 4203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3752,
											"end": 4203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4283,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4254,
											"end": 4283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4283,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4283,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4297,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4308,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4308,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "803BEE7E92BBC6AE7A1551F9F4ED3E31A8EA8DF32E93332F41B0028F1091F9C3"
										},
										{
											"begin": 4342,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4342,
											"end": 4349,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4327,
											"end": 4350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4350,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 4361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3435,
											"end": 4361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4454,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4458,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4486,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4488,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4451,
											"end": 4488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4447,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4523,
											"end": 4549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4523,
											"end": 4565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4594,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4579,
											"end": 4618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4579,
											"end": 4618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 4629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4447,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4738,
											"end": 4748,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C713F14D184CF4A1747825A79806A836B3F4E1B7F092EDC852F56CE98F44D438"
										},
										{
											"begin": 4750,
											"end": 4757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4750,
											"end": 4757,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4779,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4722,
											"end": 4780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4780,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 4787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 4787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 724,
											"end": 746,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2313,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2138,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "496E73756666696369656E74206665652070726F766964656400000000000000"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2319,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2461,
											"end": 2464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2541,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2482,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2482,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2482,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2482,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2558,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2558,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 3110,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2691,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2897,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2954,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 2955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3098,
											"end": 3102,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2972,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 3103,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2972,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 3110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 3110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 3110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 3110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3296,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3116,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3290,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3496,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3302,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3362,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3382,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3396,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3396,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3441,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3458,
											"end": 3462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3466,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3452,
											"end": 3489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3469,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3489,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3452,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3496,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3735,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3502,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3564,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3588,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3564,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3676,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 3677,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3597,
											"end": 3700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3680,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3680,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3700,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3597,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3728,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 3729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 3729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3741,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3800,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3820,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3834,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3854,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3834,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3878,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3874,
											"end": 3875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 3879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3863,
											"end": 3879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3902,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3889,
											"end": 3925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3905,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3889,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4118,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3938,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4063,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4087,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4073,
											"end": 4088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4111,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4112,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4124,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4181,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4181,
											"end": 4201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4181,
											"end": 4201,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4181,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4215,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4235,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4215,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4244,
											"end": 4279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4259,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4279,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4244,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4302,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4315,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4462,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4582,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4468,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4986,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4588,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4747,
											"end": 4750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4768,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4851,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4768,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4761,
											"end": 4851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4761,
											"end": 4851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4949,
											"end": 4952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4860,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4953,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4860,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 4980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5371,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4992,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5198,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5345,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5198,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5355,
											"end": 5365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5355,
											"end": 5365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5546,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5377,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "546970207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5539,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5918,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5552,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5694,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5715,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5715,
											"end": 5782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5715,
											"end": 5782,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5715,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5708,
											"end": 5782,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5708,
											"end": 5782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5880,
											"end": 5883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5791,
											"end": 5884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5884,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5791,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5893,
											"end": 5912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5893,
											"end": 5912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 6343,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5924,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6117,
											"end": 6126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6177,
											"end": 6186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6171,
											"end": 6175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6187,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6205,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6336,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6205,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 6343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 6343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 6343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 6343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6538,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6617,
											"end": 6618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6615,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6593,
											"end": 6599,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6549,
											"end": 6620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6549,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6698,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6696,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6683,
											"end": 6701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6630,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6702,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6630,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6712,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6780,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6769,
											"end": 6778,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6762,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6712,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6712,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6712,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6712,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6978,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6797,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6937,
											"end": 6970,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6921,
											"end": 6935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7350,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6984,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7126,
											"end": 7129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7211,
											"end": 7213,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7147,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7147,
											"end": 7214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7147,
											"end": 7214,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7147,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7223,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7223,
											"end": 7316,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 7223,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 7350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7356,
											"end": 7775,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7356,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7549,
											"end": 7558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7537,
											"end": 7563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7537,
											"end": 7563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7603,
											"end": 7607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7619,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7580,
											"end": 7597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7620,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 7763,
											"end": 7767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7637,
											"end": 7768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7768,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 7637,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7629,
											"end": 7768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7629,
											"end": 7768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7356,
											"end": 7775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7356,
											"end": 7775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7356,
											"end": 7775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7356,
											"end": 7775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"E/eip-1559.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"baseFee()": "6ef25c3a",
							"feeRecipient()": "46904840",
							"owner()": "8da5cb5b",
							"performAction()": "6c18f73e",
							"periodLength()": "d2ca2115",
							"periodStart()": "eda4e6d6",
							"renounceOwnership()": "715018a6",
							"targetTxCount()": "16897518",
							"transferOwnership(address)": "f2fde38b",
							"txCount()": "3c540687"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialBaseFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTxCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tip\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ActionPerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseFee\",\"type\":\"uint256\"}],\"name\":\"BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performAction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTxCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ActionPerformed(address,uint256,uint256,uint256)\":{\"params\":{\"feePaid\":\"The base fee paid.\",\"timestamp\":\"The time when the action occurred.\",\"tip\":\"The tip amount paid.\",\"user\":\"The user address.\"}},\"BaseFeeUpdated(uint256)\":{\"params\":{\"newBaseFee\":\"The new base fee after adjustment.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_feeRecipient\":\"The address that receives tips (if nonzero).\",\"_initialBaseFee\":\"The starting base fee in wei.\",\"_periodLength\":\"The duration of each period in seconds.\",\"_targetTxCount\":\"The target number of transactions per period.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"EIP1559Simulator\",\"version\":1},\"userdoc\":{\"events\":{\"ActionPerformed(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user performs an action.\"},\"BaseFeeUpdated(uint256)\":{\"notice\":\"Emitted when the base fee is updated at the end of a period.\"}},\"kind\":\"user\",\"methods\":{\"baseFee()\":{\"notice\":\"The dynamic base fee (in wei) that must be paid for each action.\"},\"constructor\":{\"notice\":\"Constructor sets the initial parameters.\"},\"feeRecipient()\":{\"notice\":\"The address that will receive any tip paid above the base fee.\"},\"performAction()\":{\"notice\":\"Performs an action that requires payment of a fee. The caller must send at least `baseFee` wei. The fee consists of a dynamic base fee plus an optional tip. After the action, the contract updates its transaction count and adjusts the base fee if the period has ended.\"},\"periodLength()\":{\"notice\":\"Duration of each period in seconds.\"},\"periodStart()\":{\"notice\":\"Timestamp marking the start of the current period.\"},\"targetTxCount()\":{\"notice\":\"The target number of transactions per period.\"},\"txCount()\":{\"notice\":\"The number of transactions performed in the current period.\"}},\"notice\":\"This contract simulates an EIP-1559\\u2013style fee mechanism for a DApp service. Users call performAction() and must pay a fee that includes a dynamic base fee plus an optional tip. At the end of a time period, the base fee is adjusted based on the number of actions performed relative to a target. The tip (if any) is forwarded to a designated feeRecipient.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/eip-1559.sol\":\"EIP1559Simulator\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"E/eip-1559.sol\":{\"keccak256\":\"0x6ea00ab3a8cf72c84e89cf9b3ba8b4e3bfe0a4759bec921e4b9e63bf2fcb3337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://293baa5bee0fdc35861d634b732a8513c8bb6f6d970e7f80fbb69caf0db27e54\",\"dweb:/ipfs/QmTDK9Eu8ofc7Uvq9Vt8Botrfgf4R91jv6cw5HPGqS7kqM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "baseFee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 257,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "targetTxCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 260,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "txCount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "periodStart",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "periodLength",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 269,
								"contract": "E/eip-1559.sol:EIP1559Simulator",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ActionPerformed(address,uint256,uint256,uint256)": {
								"notice": "Emitted when a user performs an action."
							},
							"BaseFeeUpdated(uint256)": {
								"notice": "Emitted when the base fee is updated at the end of a period."
							}
						},
						"kind": "user",
						"methods": {
							"baseFee()": {
								"notice": "The dynamic base fee (in wei) that must be paid for each action."
							},
							"constructor": {
								"notice": "Constructor sets the initial parameters."
							},
							"feeRecipient()": {
								"notice": "The address that will receive any tip paid above the base fee."
							},
							"performAction()": {
								"notice": "Performs an action that requires payment of a fee. The caller must send at least `baseFee` wei. The fee consists of a dynamic base fee plus an optional tip. After the action, the contract updates its transaction count and adjusts the base fee if the period has ended."
							},
							"periodLength()": {
								"notice": "Duration of each period in seconds."
							},
							"periodStart()": {
								"notice": "Timestamp marking the start of the current period."
							},
							"targetTxCount()": {
								"notice": "The target number of transactions per period."
							},
							"txCount()": {
								"notice": "The number of transactions performed in the current period."
							}
						},
						"notice": "This contract simulates an EIP-1559â€“style fee mechanism for a DApp service. Users call performAction() and must pay a fee that includes a dynamic base fee plus an optional tip. At the end of a time period, the base fee is adjusted based on the number of actions performed relative to a target. The tip (if any) is forwarded to a designated feeRecipient.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 243,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								242
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 220,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 219,
												"id": 222,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 242,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 229,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 228,
												"id": 231,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 242,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 242,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"E/eip-1559.sol": {
				"ast": {
					"absolutePath": "E/eip-1559.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"EIP1559Simulator": [
							470
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 471,
							"sourceUnit": 148,
							"src": "58:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 471,
							"sourceUnit": 213,
							"src": "111:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 248,
										"name": "Ownable",
										"nameLocations": [
											"612:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "612:7:3"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "612:7:3"
								},
								{
									"baseName": {
										"id": 250,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"621:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "621:15:3"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "621:15:3"
								}
							],
							"canonicalName": "EIP1559Simulator",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "175:408:3",
								"text": "@title EIP1559Simulator\n @notice This contract simulates an EIP-1559â€“style fee mechanism for a DApp service.\n Users call performAction() and must pay a fee that includes a dynamic base fee plus an optional tip.\n At the end of a time period, the base fee is adjusted based on the number of actions performed relative to a target.\n The tip (if any) is forwarded to a designated feeRecipient."
							},
							"fullyImplemented": true,
							"id": 470,
							"linearizedBaseContracts": [
								470,
								212,
								147,
								242
							],
							"name": "EIP1559Simulator",
							"nameLocation": "592:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "643:76:3",
										"text": "@notice The dynamic base fee (in wei) that must be paid for each action."
									},
									"functionSelector": "6ef25c3a",
									"id": 254,
									"mutability": "mutable",
									"name": "baseFee",
									"nameLocation": "739:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "724:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "752:57:3",
										"text": "@notice The target number of transactions per period."
									},
									"functionSelector": "16897518",
									"id": 257,
									"mutability": "mutable",
									"name": "targetTxCount",
									"nameLocation": "829:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "814:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "848:71:3",
										"text": "@notice The number of transactions performed in the current period."
									},
									"functionSelector": "3c540687",
									"id": 260,
									"mutability": "mutable",
									"name": "txCount",
									"nameLocation": "939:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "924:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "924:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "952:62:3",
										"text": "@notice Timestamp marking the start of the current period."
									},
									"functionSelector": "eda4e6d6",
									"id": 263,
									"mutability": "mutable",
									"name": "periodStart",
									"nameLocation": "1034:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1019:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1019:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1051:47:3",
										"text": "@notice Duration of each period in seconds."
									},
									"functionSelector": "d2ca2115",
									"id": 266,
									"mutability": "mutable",
									"name": "periodLength",
									"nameLocation": "1118:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1103:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1103:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1136:74:3",
										"text": "@notice The address that will receive any tip paid above the base fee."
									},
									"functionSelector": "46904840",
									"id": 269,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "1230:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 470,
									"src": "1215:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1215:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1249:231:3",
										"text": "@notice Emitted when a user performs an action.\n @param user The user address.\n @param feePaid The base fee paid.\n @param tip The tip amount paid.\n @param timestamp The time when the action occurred."
									},
									"eventSelector": "c713f14d184cf4a1747825a79806a836b3f4e1b7f092edc852f56ce98f44d438",
									"id": 280,
									"name": "ActionPerformed",
									"nameLocation": "1491:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"indexed": false,
												"mutability": "mutable",
												"name": "feePaid",
												"nameLocation": "1537:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1529:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": false,
												"mutability": "mutable",
												"name": "tip",
												"nameLocation": "1554:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1546:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1567:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1559:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:71:3"
									},
									"src": "1485:93:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1584:133:3",
										"text": "@notice Emitted when the base fee is updated at the end of a period.\n @param newBaseFee The new base fee after adjustment."
									},
									"eventSelector": "803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c3",
									"id": 285,
									"name": "BaseFeeUpdated",
									"nameLocation": "1728:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBaseFee",
												"nameLocation": "1751:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "1743:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:20:3"
									},
									"src": "1722:41:3"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2282:474:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "_initialBaseFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2300:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2318:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2300:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c206261736520666565206d757374206265203e2030",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306",
																"typeString": "literal_string \"Initial base fee must be > 0\""
															},
															"value": "Initial base fee must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55b392b4a17540ba5687ed603fa8c1d66dbb264f4bd1291b2c2ec46116d63306",
																"typeString": "literal_string \"Initial base fee must be > 0\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2292:60:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "_targetTxCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "2370:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2387:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2370:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420747820636f756e74206d757374206265203e2030",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785",
																"typeString": "literal_string \"Target tx count must be > 0\""
															},
															"value": "Target tx count must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f18910e5572197f9afde4d8fbe72c1d49da69a050a5b921a156b5205e4e7785",
																"typeString": "literal_string \"Target tx count must be > 0\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2362:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2362:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "_periodLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2438:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2454:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2438:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506572696f64206c656e677468206d757374206265203e2030",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2457:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa",
																"typeString": "literal_string \"Period length must be > 0\""
															},
															"value": "Period length must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd2790c9789db755f3cdf5ad4cf81008d2592ccdc7f9b5e9ea12676f5debd4aa",
																"typeString": "literal_string \"Period length must be > 0\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2430:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2430:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2430:55:3"
											},
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "baseFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2569:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 323,
														"name": "_initialBaseFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "2579:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2569:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2569:25:3"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "targetTxCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2604:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 327,
														"name": "_targetTxCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2620:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2604:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2604:30:3"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "periodLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2644:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 331,
														"name": "_periodLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2659:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2644:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2644:28:3"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 334,
														"name": "periodStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2682:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 335,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2696:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2702:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2696:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2682:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2682:29:3"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 339,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2721:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 340,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2736:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2721:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2721:28:3"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "1769:343:3",
										"text": " @notice Constructor sets the initial parameters.\n @param _initialBaseFee The starting base fee in wei.\n @param _targetTxCount The target number of transactions per period.\n @param _periodLength The duration of each period in seconds.\n @param _feeRecipient The address that receives tips (if nonzero)."
									},
									"id": 344,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 297,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2270:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2274:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2270:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 299,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 296,
												"name": "Ownable",
												"nameLocations": [
													"2262:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2262:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2262:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "_initialBaseFee",
												"nameLocation": "2146:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2138:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "_targetTxCount",
												"nameLocation": "2179:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2171:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "_periodLength",
												"nameLocation": "2211:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2203:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "2242:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2234:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:133:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:0:3"
									},
									"scope": 470,
									"src": "2117:639:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "3137:1650:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 351,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3155:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3159:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3155:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 353,
																"name": "baseFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "3168:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3155:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206665652070726f7669646564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3177:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066",
																"typeString": "literal_string \"Insufficient fee provided\""
															},
															"value": "Insufficient fee provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6434aced0556f3ebf0c56b45dfa160d9ea476b8c166e0136ec8387e86ac2f066",
																"typeString": "literal_string \"Insufficient fee provided\""
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3147:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3147:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "3147:58:3"
											},
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "tip",
														"nameLocation": "3286:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "3278:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3278:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 360,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3292:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3296:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3292:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 362,
														"name": "baseFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3304:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3292:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3278:33:3"
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3365:9:3",
													"subExpression": {
														"id": 365,
														"name": "txCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3365:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3365:9:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 368,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3439:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3445:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3439:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 370,
															"name": "periodStart",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "3458:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 371,
															"name": "periodLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3472:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3458:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3439:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "3435:926:3",
												"trueBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "3486:875:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 374,
																	"name": "txCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3756:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 375,
																	"name": "targetTxCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "3766:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3756:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 387,
																		"name": "txCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "3945:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 388,
																		"name": "targetTxCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3955:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3945:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 413,
																"nodeType": "IfStatement",
																"src": "3941:262:3",
																"trueBody": {
																	"id": 412,
																	"nodeType": "Block",
																	"src": "3970:233:3",
																	"statements": [
																		{
																			"assignments": [
																				391
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 391,
																					"mutability": "mutable",
																					"name": "decrease",
																					"nameLocation": "3996:8:3",
																					"nodeType": "VariableDeclaration",
																					"scope": 412,
																					"src": "3988:16:3",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 390,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3988:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 395,
																			"initialValue": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 392,
																					"name": "baseFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "4007:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "3130",
																					"id": 393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4017:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"src": "4007:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "3988:31:3"
																		},
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 396,
																					"name": "decrease",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 391,
																					"src": "4041:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 397,
																					"name": "baseFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "4053:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4041:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 410,
																				"nodeType": "Block",
																				"src": "4120:69:3",
																				"statements": [
																					{
																						"expression": {
																							"id": 408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 404,
																								"name": "baseFee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 254,
																								"src": "4142:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 407,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 405,
																									"name": "baseFee",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 254,
																									"src": "4152:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 406,
																									"name": "decrease",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 391,
																									"src": "4162:8:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4152:18:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4142:28:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 409,
																						"nodeType": "ExpressionStatement",
																						"src": "4142:28:3"
																					}
																				]
																			},
																			"id": 411,
																			"nodeType": "IfStatement",
																			"src": "4037:152:3",
																			"trueBody": {
																				"id": 403,
																				"nodeType": "Block",
																				"src": "4062:52:3",
																				"statements": [
																					{
																						"expression": {
																							"id": 401,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 399,
																								"name": "baseFee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 254,
																								"src": "4084:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "31",
																								"id": 400,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4094:1:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "4084:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 402,
																						"nodeType": "ExpressionStatement",
																						"src": "4084:11:3"
																					}
																				]
																			}
																		}
																	]
																}
															},
															"id": 414,
															"nodeType": "IfStatement",
															"src": "3752:451:3",
															"trueBody": {
																"id": 386,
																"nodeType": "Block",
																"src": "3781:154:3",
																"statements": [
																	{
																		"expression": {
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 377,
																				"name": "baseFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "3886:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 378,
																					"name": "baseFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "3896:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 381,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 379,
																								"name": "baseFee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 254,
																								"src": "3907:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "3130",
																								"id": 380,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3917:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"src": "3907:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 382,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3906:14:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3896:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3886:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 385,
																		"nodeType": "ExpressionStatement",
																		"src": "3886:34:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 415,
																	"name": "periodStart",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "4254:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 416,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4268:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4274:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4268:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4254:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 419,
															"nodeType": "ExpressionStatement",
															"src": "4254:29:3"
														},
														{
															"expression": {
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 420,
																	"name": "txCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "4297:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4307:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4297:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "4297:11:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 425,
																		"name": "baseFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "4342:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 424,
																	"name": "BaseFeeUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "4327:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4327:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 427,
															"nodeType": "EmitStatement",
															"src": "4322:28:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 430,
															"name": "tip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "4451:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4457:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4451:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 433,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4462:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4486:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4478:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4478:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4478:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4462:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4451:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "4447:182:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "4490:139:3",
													"statements": [
														{
															"assignments": [
																441,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 441,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "4510:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 457,
																	"src": "4505:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4505:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 451,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4562:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 444,
																					"name": "feeRecipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "4531:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4523:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 442,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4523:8:3",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4523:21:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4545:4:3",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "4523:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 447,
																			"name": "tip",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "4557:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "4523:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4523:42:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4504:61:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 453,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4587:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546970207472616e73666572206661696c6564",
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4596:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257",
																			"typeString": "literal_string \"Tip transfer failed\""
																		},
																		"value": "Tip transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c03b7923bbf4dfa9bbca1ebd2725730426840d5b599060d56ec01eedb7a50257",
																			"typeString": "literal_string \"Tip transfer failed\""
																		}
																	],
																	"id": 452,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4579:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4579:39:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "ExpressionStatement",
															"src": "4579:39:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 460,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4738:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4742:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4738:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "baseFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 463,
															"name": "tip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "4759:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4764:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4770:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4764:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "ActionPerformed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "4722:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4722:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "EmitStatement",
												"src": "4717:63:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2762:315:3",
										"text": " @notice Performs an action that requires payment of a fee.\n The caller must send at least `baseFee` wei.\n The fee consists of a dynamic base fee plus an optional tip.\n After the action, the contract updates its transaction count and adjusts the base fee if the period has ended."
									},
									"functionSelector": "6c18f73e",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 347,
												"name": "nonReentrant",
												"nameLocations": [
													"3124:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3124:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3124:12:3"
										}
									],
									"name": "performAction",
									"nameLocation": "3091:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3104:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3137:0:3"
									},
									"scope": 470,
									"src": "3082:1705:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 471,
							"src": "583:4206:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								280,
								285
							]
						}
					],
					"src": "32:4758:3"
				},
				"id": 3
			}
		}
	}
}