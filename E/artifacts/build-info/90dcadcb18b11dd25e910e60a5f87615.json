{
	"id": "90dcadcb18b11dd25e910e60a5f87615",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/emission.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title EmissionToken\n/// @notice An ERC20 token with a dynamic emission schedule. Tokens are minted continuously\n/// based on an emission rate (tokens per second, scaled by 1e18) and sent to a treasury address.\n/// Anyone can trigger emission via mintEmission(); the owner can update the emission rate and treasury.\ncontract EmissionToken is ERC20, Ownable, ReentrancyGuard {\n    /// @notice Emission rate in tokens per second (scaled by 1e18 for precision).\n    uint256 public emissionRate;\n    /// @notice Timestamp of the last emission update.\n    uint256 public lastEmissionTime;\n    /// @notice The treasury address to which emitted tokens are minted.\n    address public treasury;\n\n    /// @notice Emitted when new tokens are minted via emission.\n    /// @param amount The amount of tokens minted.\n    /// @param timestamp The time when tokens were minted.\n    event EmissionMinted(uint256 amount, uint256 timestamp);\n    /// @notice Emitted when the emission rate is updated.\n    /// @param newEmissionRate The new emission rate.\n    event EmissionRateUpdated(uint256 newEmissionRate);\n    /// @notice Emitted when the treasury address is updated.\n    /// @param newTreasury The new treasury address.\n    event TreasuryUpdated(address newTreasury);\n\n    /**\n     * @notice Constructor sets the token parameters, initial emission rate, and treasury.\n     * @param initialSupply The initial token supply minted to the deployer.\n     * @param initialEmissionRate The initial emission rate (tokens per second, scaled by 1e18).\n     * @param _treasury The treasury address that will receive emitted tokens.\n     */\n    constructor(\n        uint256 initialSupply,\n        uint256 initialEmissionRate,\n        address _treasury\n    ) ERC20(\"EmissionToken\", \"EMT\") Ownable(msg.sender) {\n        require(_treasury != address(0), \"Invalid treasury address\");\n        require(initialEmissionRate > 0, \"Emission rate must be > 0\");\n\n        _mint(msg.sender, initialSupply);\n        emissionRate = initialEmissionRate;\n        treasury = _treasury;\n        lastEmissionTime = block.timestamp;\n    }\n\n    /**\n     * @notice Triggers the emission of new tokens based on time elapsed.\n     * Anyone can call this function. It calculates:\n     *   tokensToMint = emissionRate * (currentTime - lastEmissionTime) / 1e18.\n     * Emitted tokens are minted to the treasury address.\n     */\n    function mintEmission() external nonReentrant {\n        uint256 currentTime = block.timestamp;\n        require(currentTime > lastEmissionTime, \"No time elapsed\");\n\n        uint256 elapsed = currentTime - lastEmissionTime;\n        uint256 tokensToMint = (emissionRate * elapsed) / 1e18;\n        require(tokensToMint > 0, \"No tokens to mint\");\n\n        lastEmissionTime = currentTime;\n        _mint(treasury, tokensToMint);\n        emit EmissionMinted(tokensToMint, currentTime);\n    }\n\n    /**\n     * @notice Allows the owner to update the emission rate.\n     * @param newEmissionRate The new emission rate (tokens per second, scaled by 1e18).\n     */\n    function updateEmissionRate(uint256 newEmissionRate) external onlyOwner {\n        require(newEmissionRate > 0, \"Emission rate must be > 0\");\n        emissionRate = newEmissionRate;\n        emit EmissionRateUpdated(newEmissionRate);\n    }\n\n    /**\n     * @notice Allows the owner to update the treasury address.\n     * @param newTreasury The new treasury address.\n     */\n    function updateTreasury(address newTreasury) external onlyOwner {\n        require(newTreasury != address(0), \"Invalid treasury address\");\n        treasury = newTreasury;\n        emit TreasuryUpdated(newTreasury);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/emission.sol": {
				"EmissionToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "initialEmissionRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "EmissionMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newEmissionRate",
									"type": "uint256"
								}
							],
							"name": "EmissionRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emissionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastEmissionTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintEmission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newEmissionRate",
									"type": "uint256"
								}
							],
							"name": "updateEmissionRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EmissionMinted(uint256,uint256)": {
								"params": {
									"amount": "The amount of tokens minted.",
									"timestamp": "The time when tokens were minted."
								}
							},
							"EmissionRateUpdated(uint256)": {
								"params": {
									"newEmissionRate": "The new emission rate."
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"TreasuryUpdated(address)": {
								"params": {
									"newTreasury": "The new treasury address."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"_treasury": "The treasury address that will receive emitted tokens.",
									"initialEmissionRate": "The initial emission rate (tokens per second, scaled by 1e18).",
									"initialSupply": "The initial token supply minted to the deployer."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateEmissionRate(uint256)": {
								"params": {
									"newEmissionRate": "The new emission rate (tokens per second, scaled by 1e18)."
								}
							},
							"updateTreasury(address)": {
								"params": {
									"newTreasury": "The new treasury address."
								}
							}
						},
						"title": "EmissionToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/emission.sol\":551:3864  contract EmissionToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"E/emission.sol\":1855:2327  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"E/emission.sol\":2006:2016  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x456d697373696f6e546f6b656e00000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x454d540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/emission.sol\":2057:2058  0 */\n  0x00\n    /* \"E/emission.sol\":2036:2059  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"E/emission.sol\":2036:2045  _treasury */\n  dup2\n    /* \"E/emission.sol\":2036:2059  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"E/emission.sol\":2028:2088  require(_treasury != address(0), \"Invalid treasury address\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"E/emission.sol\":2128:2129  0 */\n  0x00\n    /* \"E/emission.sol\":2106:2125  initialEmissionRate */\n  dup3\n    /* \"E/emission.sol\":2106:2129  initialEmissionRate > 0 */\n  gt\n    /* \"E/emission.sol\":2098:2159  require(initialEmissionRate > 0, \"Emission rate must be > 0\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"E/emission.sol\":2170:2202  _mint(msg.sender, initialSupply) */\n  tag_26\n    /* \"E/emission.sol\":2176:2186  msg.sender */\n  caller\n    /* \"E/emission.sol\":2188:2201  initialSupply */\n  dup5\n    /* \"E/emission.sol\":2170:2175  _mint */\n  shl(0x20, tag_27)\n    /* \"E/emission.sol\":2170:2202  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"E/emission.sol\":2227:2246  initialEmissionRate */\n  dup2\n    /* \"E/emission.sol\":2212:2224  emissionRate */\n  0x07\n    /* \"E/emission.sol\":2212:2246  emissionRate = initialEmissionRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/emission.sol\":2267:2276  _treasury */\n  dup1\n    /* \"E/emission.sol\":2256:2264  treasury */\n  0x09\n  0x00\n    /* \"E/emission.sol\":2256:2276  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"E/emission.sol\":2305:2320  block.timestamp */\n  timestamp\n    /* \"E/emission.sol\":2286:2302  lastEmissionTime */\n  0x08\n    /* \"E/emission.sol\":2286:2320  lastEmissionTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/emission.sol\":1855:2327  constructor(... */\n  pop\n  pop\n  pop\n    /* \"E/emission.sol\":551:3864  contract EmissionToken is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_34)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_39)\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_44)\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_45\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_48:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_50:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_51:\n    /* \"#utility.yul\":490:514   */\n  tag_90\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_50\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_91:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_52:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_93\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_51\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_53:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_54:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_96\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_53\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_55:\n    /* \"#utility.yul\":1001:1025   */\n  tag_98\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_54\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_99:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_56:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_101\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_55\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_104\n  tag_48\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1326:1445   */\ntag_103:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_105\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_52\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_106\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_52\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_107\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_56\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1973   */\ntag_57:\n    /* \"#utility.yul\":1926:1932   */\n  0x00\n    /* \"#utility.yul\":1960:1965   */\n  dup2\n    /* \"#utility.yul\":1954:1966   */\n  mload\n    /* \"#utility.yul\":1944:1966   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1973   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1979:2159   */\ntag_58:\n    /* \"#utility.yul\":2027:2104   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2024:2025   */\n  0x00\n    /* \"#utility.yul\":2017:2105   */\n  mstore\n    /* \"#utility.yul\":2124:2128   */\n  0x41\n    /* \"#utility.yul\":2121:2122   */\n  0x04\n    /* \"#utility.yul\":2114:2129   */\n  mstore\n    /* \"#utility.yul\":2148:2152   */\n  0x24\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2138:2153   */\n  revert\n    /* \"#utility.yul\":2165:2345   */\ntag_59:\n    /* \"#utility.yul\":2213:2290   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2203:2291   */\n  mstore\n    /* \"#utility.yul\":2310:2314   */\n  0x22\n    /* \"#utility.yul\":2307:2308   */\n  0x04\n    /* \"#utility.yul\":2300:2315   */\n  mstore\n    /* \"#utility.yul\":2334:2338   */\n  0x24\n    /* \"#utility.yul\":2331:2332   */\n  0x00\n    /* \"#utility.yul\":2324:2339   */\n  revert\n    /* \"#utility.yul\":2351:2671   */\ntag_60:\n    /* \"#utility.yul\":2395:2401   */\n  0x00\n    /* \"#utility.yul\":2432:2433   */\n  0x02\n    /* \"#utility.yul\":2426:2430   */\n  dup3\n    /* \"#utility.yul\":2422:2434   */\n  div\n    /* \"#utility.yul\":2412:2434   */\n  swap1\n  pop\n    /* \"#utility.yul\":2479:2480   */\n  0x01\n    /* \"#utility.yul\":2473:2477   */\n  dup3\n    /* \"#utility.yul\":2469:2481   */\n  and\n    /* \"#utility.yul\":2500:2518   */\n  dup1\n    /* \"#utility.yul\":2490:2571   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":2556:2560   */\n  0x7f\n    /* \"#utility.yul\":2548:2554   */\n  dup3\n    /* \"#utility.yul\":2544:2561   */\n  and\n    /* \"#utility.yul\":2534:2561   */\n  swap2\n  pop\n    /* \"#utility.yul\":2490:2571   */\ntag_112:\n    /* \"#utility.yul\":2618:2620   */\n  0x20\n    /* \"#utility.yul\":2610:2616   */\n  dup3\n    /* \"#utility.yul\":2607:2621   */\n  lt\n    /* \"#utility.yul\":2587:2605   */\n  dup2\n    /* \"#utility.yul\":2584:2622   */\n  sub\n    /* \"#utility.yul\":2581:2665   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2637:2655   */\n  tag_114\n  tag_59\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2581:2665   */\ntag_113:\n    /* \"#utility.yul\":2402:2671   */\n  pop\n    /* \"#utility.yul\":2351:2671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2818   */\ntag_61:\n    /* \"#utility.yul\":2726:2730   */\n  0x00\n    /* \"#utility.yul\":2749:2752   */\n  dup2\n    /* \"#utility.yul\":2741:2752   */\n  swap1\n  pop\n    /* \"#utility.yul\":2772:2775   */\n  dup2\n    /* \"#utility.yul\":2769:2770   */\n  0x00\n    /* \"#utility.yul\":2762:2776   */\n  mstore\n    /* \"#utility.yul\":2806:2810   */\n  0x20\n    /* \"#utility.yul\":2803:2804   */\n  0x00\n    /* \"#utility.yul\":2793:2811   */\n  keccak256\n    /* \"#utility.yul\":2785:2811   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2824:2917   */\ntag_62:\n    /* \"#utility.yul\":2861:2867   */\n  0x00\n    /* \"#utility.yul\":2908:2910   */\n  0x20\n    /* \"#utility.yul\":2903:2905   */\n  0x1f\n    /* \"#utility.yul\":2896:2901   */\n  dup4\n    /* \"#utility.yul\":2892:2906   */\n  add\n    /* \"#utility.yul\":2888:2911   */\n  div\n    /* \"#utility.yul\":2878:2911   */\n  swap1\n  pop\n    /* \"#utility.yul\":2824:2917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2923:3030   */\ntag_63:\n    /* \"#utility.yul\":2967:2975   */\n  0x00\n    /* \"#utility.yul\":3017:3022   */\n  dup3\n    /* \"#utility.yul\":3011:3015   */\n  dup3\n    /* \"#utility.yul\":3007:3023   */\n  shl\n    /* \"#utility.yul\":2986:3023   */\n  swap1\n  pop\n    /* \"#utility.yul\":2923:3030   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3036:3429   */\ntag_64:\n    /* \"#utility.yul\":3105:3111   */\n  0x00\n    /* \"#utility.yul\":3155:3156   */\n  0x08\n    /* \"#utility.yul\":3143:3153   */\n  dup4\n    /* \"#utility.yul\":3139:3157   */\n  mul\n    /* \"#utility.yul\":3178:3275   */\n  tag_119\n    /* \"#utility.yul\":3208:3274   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3197:3206   */\n  dup3\n    /* \"#utility.yul\":3178:3275   */\n  tag_63\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3296:3335   */\n  tag_120\n    /* \"#utility.yul\":3326:3334   */\n  dup7\n    /* \"#utility.yul\":3315:3324   */\n  dup4\n    /* \"#utility.yul\":3296:3335   */\n  tag_63\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3284:3335   */\n  swap6\n  pop\n    /* \"#utility.yul\":3368:3372   */\n  dup1\n    /* \"#utility.yul\":3364:3373   */\n  not\n    /* \"#utility.yul\":3357:3362   */\n  dup5\n    /* \"#utility.yul\":3353:3374   */\n  and\n    /* \"#utility.yul\":3344:3374   */\n  swap4\n  pop\n    /* \"#utility.yul\":3417:3421   */\n  dup1\n    /* \"#utility.yul\":3407:3415   */\n  dup7\n    /* \"#utility.yul\":3403:3422   */\n  and\n    /* \"#utility.yul\":3396:3401   */\n  dup5\n    /* \"#utility.yul\":3393:3423   */\n  or\n    /* \"#utility.yul\":3383:3423   */\n  swap3\n  pop\n    /* \"#utility.yul\":3112:3429   */\n  pop\n  pop\n    /* \"#utility.yul\":3036:3429   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3435:3495   */\ntag_65:\n    /* \"#utility.yul\":3463:3466   */\n  0x00\n    /* \"#utility.yul\":3484:3489   */\n  dup2\n    /* \"#utility.yul\":3477:3489   */\n  swap1\n  pop\n    /* \"#utility.yul\":3435:3495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3501:3643   */\ntag_66:\n    /* \"#utility.yul\":3551:3560   */\n  0x00\n    /* \"#utility.yul\":3584:3637   */\n  tag_123\n    /* \"#utility.yul\":3602:3636   */\n  tag_124\n    /* \"#utility.yul\":3611:3635   */\n  tag_125\n    /* \"#utility.yul\":3629:3634   */\n  dup5\n    /* \"#utility.yul\":3611:3635   */\n  tag_50\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3602:3636   */\n  tag_65\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3584:3637   */\n  tag_50\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3571:3637   */\n  swap1\n  pop\n    /* \"#utility.yul\":3501:3643   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3649:3724   */\ntag_67:\n    /* \"#utility.yul\":3692:3695   */\n  0x00\n    /* \"#utility.yul\":3713:3718   */\n  dup2\n    /* \"#utility.yul\":3706:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3649:3724   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3730:3999   */\ntag_68:\n    /* \"#utility.yul\":3840:3879   */\n  tag_128\n    /* \"#utility.yul\":3871:3878   */\n  dup4\n    /* \"#utility.yul\":3840:3879   */\n  tag_66\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3901:3992   */\n  tag_129\n    /* \"#utility.yul\":3950:3991   */\n  tag_130\n    /* \"#utility.yul\":3974:3990   */\n  dup3\n    /* \"#utility.yul\":3950:3991   */\n  tag_67\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3942:3948   */\n  dup5\n    /* \"#utility.yul\":3935:3939   */\n  dup5\n    /* \"#utility.yul\":3929:3940   */\n  sload\n    /* \"#utility.yul\":3901:3992   */\n  tag_64\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3895:3899   */\n  dup3\n    /* \"#utility.yul\":3888:3993   */\n  sstore\n    /* \"#utility.yul\":3806:3999   */\n  pop\n    /* \"#utility.yul\":3730:3999   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4005:4078   */\ntag_69:\n    /* \"#utility.yul\":4050:4053   */\n  0x00\n    /* \"#utility.yul\":4071:4072   */\n  0x00\n    /* \"#utility.yul\":4064:4072   */\n  swap1\n  pop\n    /* \"#utility.yul\":4005:4078   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4084:4273   */\ntag_70:\n    /* \"#utility.yul\":4161:4193   */\n  tag_133\n  tag_69\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4202:4267   */\n  tag_134\n    /* \"#utility.yul\":4260:4266   */\n  dup2\n    /* \"#utility.yul\":4252:4258   */\n  dup5\n    /* \"#utility.yul\":4246:4250   */\n  dup5\n    /* \"#utility.yul\":4202:4267   */\n  tag_68\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4137:4273   */\n  pop\n    /* \"#utility.yul\":4084:4273   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4279:4465   */\ntag_71:\n    /* \"#utility.yul\":4339:4459   */\ntag_136:\n    /* \"#utility.yul\":4356:4359   */\n  dup2\n    /* \"#utility.yul\":4349:4354   */\n  dup2\n    /* \"#utility.yul\":4346:4360   */\n  lt\n    /* \"#utility.yul\":4339:4459   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4410:4449   */\n  tag_139\n    /* \"#utility.yul\":4447:4448   */\n  0x00\n    /* \"#utility.yul\":4440:4445   */\n  dup3\n    /* \"#utility.yul\":4410:4449   */\n  tag_70\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4383:4384   */\n  0x01\n    /* \"#utility.yul\":4376:4381   */\n  dup2\n    /* \"#utility.yul\":4372:4385   */\n  add\n    /* \"#utility.yul\":4363:4385   */\n  swap1\n  pop\n    /* \"#utility.yul\":4339:4459   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":4279:4465   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4471:5014   */\ntag_72:\n    /* \"#utility.yul\":4572:4574   */\n  0x1f\n    /* \"#utility.yul\":4567:4570   */\n  dup3\n    /* \"#utility.yul\":4564:4575   */\n  gt\n    /* \"#utility.yul\":4561:5007   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4606:4644   */\n  tag_142\n    /* \"#utility.yul\":4638:4643   */\n  dup2\n    /* \"#utility.yul\":4606:4644   */\n  tag_61\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4690:4719   */\n  tag_143\n    /* \"#utility.yul\":4708:4718   */\n  dup5\n    /* \"#utility.yul\":4690:4719   */\n  tag_62\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4680:4688   */\n  dup2\n    /* \"#utility.yul\":4676:4720   */\n  add\n    /* \"#utility.yul\":4873:4875   */\n  0x20\n    /* \"#utility.yul\":4861:4871   */\n  dup6\n    /* \"#utility.yul\":4858:4876   */\n  lt\n    /* \"#utility.yul\":4855:4904   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":4894:4902   */\n  dup2\n    /* \"#utility.yul\":4879:4902   */\n  swap1\n  pop\n    /* \"#utility.yul\":4855:4904   */\ntag_144:\n    /* \"#utility.yul\":4917:4997   */\n  tag_145\n    /* \"#utility.yul\":4973:4995   */\n  tag_146\n    /* \"#utility.yul\":4991:4994   */\n  dup6\n    /* \"#utility.yul\":4973:4995   */\n  tag_62\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4963:4971   */\n  dup4\n    /* \"#utility.yul\":4959:4996   */\n  add\n    /* \"#utility.yul\":4946:4957   */\n  dup3\n    /* \"#utility.yul\":4917:4997   */\n  tag_71\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4576:5007   */\n  pop\n  pop\n    /* \"#utility.yul\":4561:5007   */\ntag_141:\n    /* \"#utility.yul\":4471:5014   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5020:5137   */\ntag_73:\n    /* \"#utility.yul\":5074:5082   */\n  0x00\n    /* \"#utility.yul\":5124:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5122   */\n  dup3\n    /* \"#utility.yul\":5114:5130   */\n  shr\n    /* \"#utility.yul\":5093:5130   */\n  swap1\n  pop\n    /* \"#utility.yul\":5020:5137   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5143:5312   */\ntag_74:\n    /* \"#utility.yul\":5187:5193   */\n  0x00\n    /* \"#utility.yul\":5220:5271   */\n  tag_149\n    /* \"#utility.yul\":5268:5269   */\n  0x00\n    /* \"#utility.yul\":5264:5270   */\n  not\n    /* \"#utility.yul\":5256:5261   */\n  dup5\n    /* \"#utility.yul\":5253:5254   */\n  0x08\n    /* \"#utility.yul\":5249:5262   */\n  mul\n    /* \"#utility.yul\":5220:5271   */\n  tag_73\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5216:5272   */\n  not\n    /* \"#utility.yul\":5301:5305   */\n  dup1\n    /* \"#utility.yul\":5295:5299   */\n  dup4\n    /* \"#utility.yul\":5291:5306   */\n  and\n    /* \"#utility.yul\":5281:5306   */\n  swap2\n  pop\n    /* \"#utility.yul\":5194:5312   */\n  pop\n    /* \"#utility.yul\":5143:5312   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5317:5612   */\ntag_75:\n    /* \"#utility.yul\":5393:5397   */\n  0x00\n    /* \"#utility.yul\":5539:5568   */\n  tag_151\n    /* \"#utility.yul\":5564:5567   */\n  dup4\n    /* \"#utility.yul\":5558:5562   */\n  dup4\n    /* \"#utility.yul\":5539:5568   */\n  tag_74\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5531:5568   */\n  swap2\n  pop\n    /* \"#utility.yul\":5601:5604   */\n  dup3\n    /* \"#utility.yul\":5598:5599   */\n  0x02\n    /* \"#utility.yul\":5594:5605   */\n  mul\n    /* \"#utility.yul\":5588:5592   */\n  dup3\n    /* \"#utility.yul\":5585:5606   */\n  or\n    /* \"#utility.yul\":5577:5606   */\n  swap1\n  pop\n    /* \"#utility.yul\":5317:5612   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5617:7012   */\ntag_10:\n    /* \"#utility.yul\":5734:5771   */\n  tag_153\n    /* \"#utility.yul\":5767:5770   */\n  dup3\n    /* \"#utility.yul\":5734:5771   */\n  tag_57\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5836:5854   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5828:5834   */\n  dup2\n    /* \"#utility.yul\":5825:5855   */\n  gt\n    /* \"#utility.yul\":5822:5878   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":5858:5876   */\n  tag_155\n  tag_58\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5822:5878   */\ntag_154:\n    /* \"#utility.yul\":5902:5940   */\n  tag_156\n    /* \"#utility.yul\":5934:5938   */\n  dup3\n    /* \"#utility.yul\":5928:5939   */\n  sload\n    /* \"#utility.yul\":5902:5940   */\n  tag_60\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5987:6054   */\n  tag_157\n    /* \"#utility.yul\":6047:6053   */\n  dup3\n    /* \"#utility.yul\":6039:6045   */\n  dup3\n    /* \"#utility.yul\":6033:6037   */\n  dup6\n    /* \"#utility.yul\":5987:6054   */\n  tag_72\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6081:6082   */\n  0x00\n    /* \"#utility.yul\":6105:6109   */\n  0x20\n    /* \"#utility.yul\":6092:6109   */\n  swap1\n  pop\n    /* \"#utility.yul\":6137:6139   */\n  0x1f\n    /* \"#utility.yul\":6129:6135   */\n  dup4\n    /* \"#utility.yul\":6126:6140   */\n  gt\n    /* \"#utility.yul\":6154:6155   */\n  0x01\n    /* \"#utility.yul\":6149:6767   */\n  dup2\n  eq\n  tag_159\n  jumpi\n    /* \"#utility.yul\":6811:6812   */\n  0x00\n    /* \"#utility.yul\":6828:6834   */\n  dup5\n    /* \"#utility.yul\":6825:6902   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6877:6886   */\n  dup3\n    /* \"#utility.yul\":6872:6875   */\n  dup8\n    /* \"#utility.yul\":6868:6887   */\n  add\n    /* \"#utility.yul\":6862:6888   */\n  mload\n    /* \"#utility.yul\":6853:6888   */\n  swap1\n  pop\n    /* \"#utility.yul\":6825:6902   */\ntag_160:\n    /* \"#utility.yul\":6928:6995   */\n  tag_161\n    /* \"#utility.yul\":6988:6994   */\n  dup6\n    /* \"#utility.yul\":6981:6986   */\n  dup3\n    /* \"#utility.yul\":6928:6995   */\n  tag_75\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6922:6926   */\n  dup7\n    /* \"#utility.yul\":6915:6996   */\n  sstore\n    /* \"#utility.yul\":6784:7006   */\n  pop\n    /* \"#utility.yul\":6119:7006   */\n  jump(tag_158)\n    /* \"#utility.yul\":6149:6767   */\ntag_159:\n    /* \"#utility.yul\":6201:6205   */\n  0x1f\n    /* \"#utility.yul\":6197:6206   */\n  not\n    /* \"#utility.yul\":6189:6195   */\n  dup5\n    /* \"#utility.yul\":6185:6207   */\n  and\n    /* \"#utility.yul\":6235:6272   */\n  tag_162\n    /* \"#utility.yul\":6267:6271   */\n  dup7\n    /* \"#utility.yul\":6235:6272   */\n  tag_61\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6294:6295   */\n  0x00\n    /* \"#utility.yul\":6308:6516   */\ntag_163:\n    /* \"#utility.yul\":6322:6329   */\n  dup3\n    /* \"#utility.yul\":6319:6320   */\n  dup2\n    /* \"#utility.yul\":6316:6330   */\n  lt\n    /* \"#utility.yul\":6308:6516   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":6401:6410   */\n  dup5\n    /* \"#utility.yul\":6396:6399   */\n  dup10\n    /* \"#utility.yul\":6392:6411   */\n  add\n    /* \"#utility.yul\":6386:6412   */\n  mload\n    /* \"#utility.yul\":6378:6384   */\n  dup3\n    /* \"#utility.yul\":6371:6413   */\n  sstore\n    /* \"#utility.yul\":6452:6453   */\n  0x01\n    /* \"#utility.yul\":6444:6450   */\n  dup3\n    /* \"#utility.yul\":6440:6454   */\n  add\n    /* \"#utility.yul\":6430:6454   */\n  swap2\n  pop\n    /* \"#utility.yul\":6499:6501   */\n  0x20\n    /* \"#utility.yul\":6488:6497   */\n  dup6\n    /* \"#utility.yul\":6484:6502   */\n  add\n    /* \"#utility.yul\":6471:6502   */\n  swap5\n  pop\n    /* \"#utility.yul\":6345:6349   */\n  0x20\n    /* \"#utility.yul\":6342:6343   */\n  dup2\n    /* \"#utility.yul\":6338:6350   */\n  add\n    /* \"#utility.yul\":6333:6350   */\n  swap1\n  pop\n    /* \"#utility.yul\":6308:6516   */\n  jump(tag_163)\ntag_165:\n    /* \"#utility.yul\":6544:6550   */\n  dup7\n    /* \"#utility.yul\":6535:6542   */\n  dup4\n    /* \"#utility.yul\":6532:6551   */\n  lt\n    /* \"#utility.yul\":6529:6708   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6602:6611   */\n  dup5\n    /* \"#utility.yul\":6597:6600   */\n  dup10\n    /* \"#utility.yul\":6593:6612   */\n  add\n    /* \"#utility.yul\":6587:6613   */\n  mload\n    /* \"#utility.yul\":6645:6693   */\n  tag_167\n    /* \"#utility.yul\":6687:6691   */\n  0x1f\n    /* \"#utility.yul\":6679:6685   */\n  dup10\n    /* \"#utility.yul\":6675:6692   */\n  and\n    /* \"#utility.yul\":6664:6673   */\n  dup3\n    /* \"#utility.yul\":6645:6693   */\n  tag_74\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6637:6643   */\n  dup4\n    /* \"#utility.yul\":6630:6694   */\n  sstore\n    /* \"#utility.yul\":6552:6708   */\n  pop\n    /* \"#utility.yul\":6529:6708   */\ntag_166:\n    /* \"#utility.yul\":6754:6755   */\n  0x01\n    /* \"#utility.yul\":6750:6751   */\n  0x02\n    /* \"#utility.yul\":6742:6748   */\n  dup9\n    /* \"#utility.yul\":6738:6752   */\n  mul\n    /* \"#utility.yul\":6734:6756   */\n  add\n    /* \"#utility.yul\":6728:6732   */\n  dup9\n    /* \"#utility.yul\":6721:6757   */\n  sstore\n    /* \"#utility.yul\":6156:6767   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6119:7006   */\ntag_158:\n  pop\n    /* \"#utility.yul\":5709:7012   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5617:7012   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7018:7136   */\ntag_76:\n    /* \"#utility.yul\":7105:7129   */\n  tag_169\n    /* \"#utility.yul\":7123:7128   */\n  dup2\n    /* \"#utility.yul\":7105:7129   */\n  tag_54\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7100:7103   */\n  dup3\n    /* \"#utility.yul\":7093:7130   */\n  mstore\n    /* \"#utility.yul\":7018:7136   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7142:7364   */\ntag_15:\n    /* \"#utility.yul\":7235:7239   */\n  0x00\n    /* \"#utility.yul\":7273:7275   */\n  0x20\n    /* \"#utility.yul\":7262:7271   */\n  dup3\n    /* \"#utility.yul\":7258:7276   */\n  add\n    /* \"#utility.yul\":7250:7276   */\n  swap1\n  pop\n    /* \"#utility.yul\":7286:7357   */\n  tag_171\n    /* \"#utility.yul\":7354:7355   */\n  0x00\n    /* \"#utility.yul\":7343:7352   */\n  dup4\n    /* \"#utility.yul\":7339:7356   */\n  add\n    /* \"#utility.yul\":7330:7336   */\n  dup5\n    /* \"#utility.yul\":7286:7357   */\n  tag_76\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7142:7364   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7370:7539   */\ntag_77:\n    /* \"#utility.yul\":7454:7465   */\n  0x00\n    /* \"#utility.yul\":7488:7494   */\n  dup3\n    /* \"#utility.yul\":7483:7486   */\n  dup3\n    /* \"#utility.yul\":7476:7495   */\n  mstore\n    /* \"#utility.yul\":7528:7532   */\n  0x20\n    /* \"#utility.yul\":7523:7526   */\n  dup3\n    /* \"#utility.yul\":7519:7533   */\n  add\n    /* \"#utility.yul\":7504:7533   */\n  swap1\n  pop\n    /* \"#utility.yul\":7370:7539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7545:7719   */\ntag_78:\n    /* \"#utility.yul\":7685:7711   */\n  0x496e76616c696420747265617375727920616464726573730000000000000000\n    /* \"#utility.yul\":7681:7682   */\n  0x00\n    /* \"#utility.yul\":7673:7679   */\n  dup3\n    /* \"#utility.yul\":7669:7683   */\n  add\n    /* \"#utility.yul\":7662:7712   */\n  mstore\n    /* \"#utility.yul\":7545:7719   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7725:8091   */\ntag_79:\n    /* \"#utility.yul\":7867:7870   */\n  0x00\n    /* \"#utility.yul\":7888:7955   */\n  tag_175\n    /* \"#utility.yul\":7952:7954   */\n  0x18\n    /* \"#utility.yul\":7947:7950   */\n  dup4\n    /* \"#utility.yul\":7888:7955   */\n  tag_77\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7881:7955   */\n  swap2\n  pop\n    /* \"#utility.yul\":7964:8057   */\n  tag_176\n    /* \"#utility.yul\":8053:8056   */\n  dup3\n    /* \"#utility.yul\":7964:8057   */\n  tag_78\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8082:8084   */\n  0x20\n    /* \"#utility.yul\":8077:8080   */\n  dup3\n    /* \"#utility.yul\":8073:8085   */\n  add\n    /* \"#utility.yul\":8066:8085   */\n  swap1\n  pop\n    /* \"#utility.yul\":7725:8091   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8097:8516   */\ntag_22:\n    /* \"#utility.yul\":8263:8267   */\n  0x00\n    /* \"#utility.yul\":8301:8303   */\n  0x20\n    /* \"#utility.yul\":8290:8299   */\n  dup3\n    /* \"#utility.yul\":8286:8304   */\n  add\n    /* \"#utility.yul\":8278:8304   */\n  swap1\n  pop\n    /* \"#utility.yul\":8350:8359   */\n  dup2\n    /* \"#utility.yul\":8344:8348   */\n  dup2\n    /* \"#utility.yul\":8340:8360   */\n  sub\n    /* \"#utility.yul\":8336:8337   */\n  0x00\n    /* \"#utility.yul\":8325:8334   */\n  dup4\n    /* \"#utility.yul\":8321:8338   */\n  add\n    /* \"#utility.yul\":8314:8361   */\n  mstore\n    /* \"#utility.yul\":8378:8509   */\n  tag_178\n    /* \"#utility.yul\":8504:8508   */\n  dup2\n    /* \"#utility.yul\":8378:8509   */\n  tag_79\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8370:8509   */\n  swap1\n  pop\n    /* \"#utility.yul\":8097:8516   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8522:8697   */\ntag_80:\n    /* \"#utility.yul\":8662:8689   */\n  0x456d697373696f6e2072617465206d757374206265203e203000000000000000\n    /* \"#utility.yul\":8658:8659   */\n  0x00\n    /* \"#utility.yul\":8650:8656   */\n  dup3\n    /* \"#utility.yul\":8646:8660   */\n  add\n    /* \"#utility.yul\":8639:8690   */\n  mstore\n    /* \"#utility.yul\":8522:8697   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8703:9069   */\ntag_81:\n    /* \"#utility.yul\":8845:8848   */\n  0x00\n    /* \"#utility.yul\":8866:8933   */\n  tag_181\n    /* \"#utility.yul\":8930:8932   */\n  0x19\n    /* \"#utility.yul\":8925:8928   */\n  dup4\n    /* \"#utility.yul\":8866:8933   */\n  tag_77\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8859:8933   */\n  swap2\n  pop\n    /* \"#utility.yul\":8942:9035   */\n  tag_182\n    /* \"#utility.yul\":9031:9034   */\n  dup3\n    /* \"#utility.yul\":8942:9035   */\n  tag_80\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9060:9062   */\n  0x20\n    /* \"#utility.yul\":9055:9058   */\n  dup3\n    /* \"#utility.yul\":9051:9063   */\n  add\n    /* \"#utility.yul\":9044:9063   */\n  swap1\n  pop\n    /* \"#utility.yul\":8703:9069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9075:9494   */\ntag_25:\n    /* \"#utility.yul\":9241:9245   */\n  0x00\n    /* \"#utility.yul\":9279:9281   */\n  0x20\n    /* \"#utility.yul\":9268:9277   */\n  dup3\n    /* \"#utility.yul\":9264:9282   */\n  add\n    /* \"#utility.yul\":9256:9282   */\n  swap1\n  pop\n    /* \"#utility.yul\":9328:9337   */\n  dup2\n    /* \"#utility.yul\":9322:9326   */\n  dup2\n    /* \"#utility.yul\":9318:9338   */\n  sub\n    /* \"#utility.yul\":9314:9315   */\n  0x00\n    /* \"#utility.yul\":9303:9312   */\n  dup4\n    /* \"#utility.yul\":9299:9316   */\n  add\n    /* \"#utility.yul\":9292:9339   */\n  mstore\n    /* \"#utility.yul\":9356:9487   */\n  tag_184\n    /* \"#utility.yul\":9482:9486   */\n  dup2\n    /* \"#utility.yul\":9356:9487   */\n  tag_81\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9348:9487   */\n  swap1\n  pop\n    /* \"#utility.yul\":9075:9494   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9500:9680   */\ntag_82:\n    /* \"#utility.yul\":9548:9625   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9545:9546   */\n  0x00\n    /* \"#utility.yul\":9538:9626   */\n  mstore\n    /* \"#utility.yul\":9645:9649   */\n  0x11\n    /* \"#utility.yul\":9642:9643   */\n  0x04\n    /* \"#utility.yul\":9635:9650   */\n  mstore\n    /* \"#utility.yul\":9669:9673   */\n  0x24\n    /* \"#utility.yul\":9666:9667   */\n  0x00\n    /* \"#utility.yul\":9659:9674   */\n  revert\n    /* \"#utility.yul\":9686:9877   */\ntag_38:\n    /* \"#utility.yul\":9726:9729   */\n  0x00\n    /* \"#utility.yul\":9745:9765   */\n  tag_187\n    /* \"#utility.yul\":9763:9764   */\n  dup3\n    /* \"#utility.yul\":9745:9765   */\n  tag_50\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9740:9765   */\n  swap2\n  pop\n    /* \"#utility.yul\":9779:9799   */\n  tag_188\n    /* \"#utility.yul\":9797:9798   */\n  dup4\n    /* \"#utility.yul\":9779:9799   */\n  tag_50\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9774:9799   */\n  swap3\n  pop\n    /* \"#utility.yul\":9822:9823   */\n  dup3\n    /* \"#utility.yul\":9819:9820   */\n  dup3\n    /* \"#utility.yul\":9815:9824   */\n  add\n    /* \"#utility.yul\":9808:9824   */\n  swap1\n  pop\n    /* \"#utility.yul\":9843:9846   */\n  dup1\n    /* \"#utility.yul\":9840:9841   */\n  dup3\n    /* \"#utility.yul\":9837:9847   */\n  gt\n    /* \"#utility.yul\":9834:9870   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":9850:9868   */\n  tag_190\n  tag_82\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9834:9870   */\ntag_189:\n    /* \"#utility.yul\":9686:9877   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9883:10001   */\ntag_83:\n    /* \"#utility.yul\":9970:9994   */\n  tag_192\n    /* \"#utility.yul\":9988:9993   */\n  dup2\n    /* \"#utility.yul\":9970:9994   */\n  tag_50\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9965:9968   */\n  dup3\n    /* \"#utility.yul\":9958:9995   */\n  mstore\n    /* \"#utility.yul\":9883:10001   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10007:10449   */\ntag_42:\n    /* \"#utility.yul\":10156:10160   */\n  0x00\n    /* \"#utility.yul\":10194:10196   */\n  0x60\n    /* \"#utility.yul\":10183:10192   */\n  dup3\n    /* \"#utility.yul\":10179:10197   */\n  add\n    /* \"#utility.yul\":10171:10197   */\n  swap1\n  pop\n    /* \"#utility.yul\":10207:10278   */\n  tag_194\n    /* \"#utility.yul\":10275:10276   */\n  0x00\n    /* \"#utility.yul\":10264:10273   */\n  dup4\n    /* \"#utility.yul\":10260:10277   */\n  add\n    /* \"#utility.yul\":10251:10257   */\n  dup7\n    /* \"#utility.yul\":10207:10278   */\n  tag_76\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":10288:10360   */\n  tag_195\n    /* \"#utility.yul\":10356:10358   */\n  0x20\n    /* \"#utility.yul\":10345:10354   */\n  dup4\n    /* \"#utility.yul\":10341:10359   */\n  add\n    /* \"#utility.yul\":10332:10338   */\n  dup6\n    /* \"#utility.yul\":10288:10360   */\n  tag_83\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":10370:10442   */\n  tag_196\n    /* \"#utility.yul\":10438:10440   */\n  0x40\n    /* \"#utility.yul\":10427:10436   */\n  dup4\n    /* \"#utility.yul\":10423:10441   */\n  add\n    /* \"#utility.yul\":10414:10420   */\n  dup5\n    /* \"#utility.yul\":10370:10442   */\n  tag_83\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":10007:10449   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10455:10677   */\ntag_46:\n    /* \"#utility.yul\":10548:10552   */\n  0x00\n    /* \"#utility.yul\":10586:10588   */\n  0x20\n    /* \"#utility.yul\":10575:10584   */\n  dup3\n    /* \"#utility.yul\":10571:10589   */\n  add\n    /* \"#utility.yul\":10563:10589   */\n  swap1\n  pop\n    /* \"#utility.yul\":10599:10670   */\n  tag_198\n    /* \"#utility.yul\":10667:10668   */\n  0x00\n    /* \"#utility.yul\":10656:10665   */\n  dup4\n    /* \"#utility.yul\":10652:10669   */\n  add\n    /* \"#utility.yul\":10643:10649   */\n  dup5\n    /* \"#utility.yul\":10599:10670   */\n  tag_83\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10455:10677   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"E/emission.sol\":551:3864  contract EmissionToken is ERC20, Ownable, ReentrancyGuard {... */\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/emission.sol\":551:3864  contract EmissionToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x96afc450\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7f51bb1f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x284e1333\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x439af45e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ba84cd2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/emission.sol\":3269:3506  function updateEmissionRate(uint256 newEmissionRate) external onlyOwner {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/emission.sol\":2614:3097  function mintEmission() external nonReentrant {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/emission.sol\":786:817  uint256 public lastEmissionTime */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/emission.sol\":896:919  address public treasury */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"E/emission.sol\":3644:3862  function updateTreasury(address newTreasury) external onlyOwner {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/emission.sol\":698:725  uint256 public emissionRate */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"E/emission.sol\":3269:3506  function updateEmissionRate(uint256 newEmissionRate) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"E/emission.sol\":3377:3378  0 */\n      0x00\n        /* \"E/emission.sol\":3359:3374  newEmissionRate */\n      dup2\n        /* \"E/emission.sol\":3359:3378  newEmissionRate > 0 */\n      gt\n        /* \"E/emission.sol\":3351:3408  require(newEmissionRate > 0, \"Emission rate must be > 0\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"E/emission.sol\":3433:3448  newEmissionRate */\n      dup1\n        /* \"E/emission.sol\":3418:3430  emissionRate */\n      0x07\n        /* \"E/emission.sol\":3418:3448  emissionRate = newEmissionRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/emission.sol\":3463:3499  EmissionRateUpdated(newEmissionRate) */\n      0xffcc630bf88a67ba7c8b27440787c31777ae923aee1e9bbd0127feea56da2cd0\n        /* \"E/emission.sol\":3483:3498  newEmissionRate */\n      dup2\n        /* \"E/emission.sol\":3463:3499  EmissionRateUpdated(newEmissionRate) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/emission.sol\":3269:3506  function updateEmissionRate(uint256 newEmissionRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"E/emission.sol\":2614:3097  function mintEmission() external nonReentrant {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_120\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_119:\n        /* \"E/emission.sol\":2670:2689  uint256 currentTime */\n      0x00\n        /* \"E/emission.sol\":2692:2707  block.timestamp */\n      timestamp\n        /* \"E/emission.sol\":2670:2707  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"E/emission.sol\":2739:2755  lastEmissionTime */\n      sload(0x08)\n        /* \"E/emission.sol\":2725:2736  currentTime */\n      dup2\n        /* \"E/emission.sol\":2725:2755  currentTime > lastEmissionTime */\n      gt\n        /* \"E/emission.sol\":2717:2775  require(currentTime > lastEmissionTime, \"No time elapsed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"E/emission.sol\":2786:2801  uint256 elapsed */\n      0x00\n        /* \"E/emission.sol\":2818:2834  lastEmissionTime */\n      sload(0x08)\n        /* \"E/emission.sol\":2804:2815  currentTime */\n      dup3\n        /* \"E/emission.sol\":2804:2834  currentTime - lastEmissionTime */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"E/emission.sol\":2786:2834  uint256 elapsed = currentTime - lastEmissionTime */\n      swap1\n      pop\n        /* \"E/emission.sol\":2844:2864  uint256 tokensToMint */\n      0x00\n        /* \"E/emission.sol\":2894:2898  1e18 */\n      0x0de0b6b3a7640000\n        /* \"E/emission.sol\":2883:2890  elapsed */\n      dup3\n        /* \"E/emission.sol\":2868:2880  emissionRate */\n      sload(0x07)\n        /* \"E/emission.sol\":2868:2890  emissionRate * elapsed */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"E/emission.sol\":2867:2898  (emissionRate * elapsed) / 1e18 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"E/emission.sol\":2844:2898  uint256 tokensToMint = (emissionRate * elapsed) / 1e18 */\n      swap1\n      pop\n        /* \"E/emission.sol\":2931:2932  0 */\n      0x00\n        /* \"E/emission.sol\":2916:2928  tokensToMint */\n      dup2\n        /* \"E/emission.sol\":2916:2932  tokensToMint > 0 */\n      gt\n        /* \"E/emission.sol\":2908:2954  require(tokensToMint > 0, \"No tokens to mint\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"E/emission.sol\":2984:2995  currentTime */\n      dup3\n        /* \"E/emission.sol\":2965:2981  lastEmissionTime */\n      0x08\n        /* \"E/emission.sol\":2965:2995  lastEmissionTime = currentTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/emission.sol\":3005:3034  _mint(treasury, tokensToMint) */\n      tag_134\n        /* \"E/emission.sol\":3011:3019  treasury */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/emission.sol\":3021:3033  tokensToMint */\n      dup3\n        /* \"E/emission.sol\":3005:3010  _mint */\n      tag_135\n        /* \"E/emission.sol\":3005:3034  _mint(treasury, tokensToMint) */\n      jump\t// in\n    tag_134:\n        /* \"E/emission.sol\":3049:3090  EmissionMinted(tokensToMint, currentTime) */\n      0xef80c279c178dd63cdaf5061224be86ee325c4f4406d802d043ed33b45b2f68f\n        /* \"E/emission.sol\":3064:3076  tokensToMint */\n      dup2\n        /* \"E/emission.sol\":3078:3089  currentTime */\n      dup5\n        /* \"E/emission.sol\":3049:3090  EmissionMinted(tokensToMint, currentTime) */\n      mload(0x40)\n      tag_136\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/emission.sol\":2660:3097  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_138\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_138:\n        /* \"E/emission.sol\":2614:3097  function mintEmission() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"E/emission.sol\":786:817  uint256 public lastEmissionTime */\n    tag_54:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"E/emission.sol\":896:919  address public treasury */\n    tag_57:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"E/emission.sol\":3644:3862  function updateTreasury(address newTreasury) external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"E/emission.sol\":3749:3750  0 */\n      0x00\n        /* \"E/emission.sol\":3726:3751  newTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/emission.sol\":3726:3737  newTreasury */\n      dup2\n        /* \"E/emission.sol\":3726:3751  newTreasury != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"E/emission.sol\":3718:3780  require(newTreasury != address(0), \"Invalid treasury address\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"E/emission.sol\":3801:3812  newTreasury */\n      dup1\n        /* \"E/emission.sol\":3790:3798  treasury */\n      0x09\n      0x00\n        /* \"E/emission.sol\":3790:3812  treasury = newTreasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"E/emission.sol\":3827:3855  TreasuryUpdated(newTreasury) */\n      0x7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1\n        /* \"E/emission.sol\":3843:3854  newTreasury */\n      dup2\n        /* \"E/emission.sol\":3827:3855  TreasuryUpdated(newTreasury) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/emission.sol\":3644:3862  function updateTreasury(address newTreasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_93\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_93\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"E/emission.sol\":698:725  uint256 public emissionRate */\n    tag_77:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_216)\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_220)\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_222:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_223:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_224:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_225:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_226:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_262\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_222\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":711:782   */\n      tag_263\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_223\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_264\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_224\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":881:910   */\n      tag_265\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_225\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_27:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_267\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_226\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_228:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_230:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_231:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_273\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_230\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_232:\n        /* \"#utility.yul\":1876:1900   */\n      tag_275\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_231\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_276:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_233:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_278\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_232\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_234:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_235:\n        /* \"#utility.yul\":2232:2256   */\n      tag_281\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_234\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_282:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_236:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_284\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_235\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_30:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_287\n      tag_228\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2525:2644   */\n    tag_286:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_288\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_233\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_289\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_236\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_237:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_238:\n        /* \"#utility.yul\":3089:3110   */\n      tag_292\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_237\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_33:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_294\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_238\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_36:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_297\n      tag_228\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3415:3534   */\n    tag_296:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_298\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_236\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_239:\n        /* \"#utility.yul\":3761:3785   */\n      tag_300\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_234\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_41:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_302\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_239\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_44:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_305\n      tag_228\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4136:4255   */\n    tag_304:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_306\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_233\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_307\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_233\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_308\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_236\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_240:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_241:\n        /* \"#utility.yul\":4826:4848   */\n      tag_311\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_240\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_52:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_313\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_241\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_242:\n        /* \"#utility.yul\":5168:5192   */\n      tag_315\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_231\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_59:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_317\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_242\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_62:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_320\n      tag_228\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5509:5628   */\n    tag_319:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_321\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_233\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_85:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_324\n      tag_228\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5861:5980   */\n    tag_323:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_325\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_233\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_326\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_233\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_243:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_93:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_329:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_331\n      tag_243\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6664:6748   */\n    tag_330:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6935   */\n    tag_244:\n        /* \"#utility.yul\":6900:6927   */\n      0x456d697373696f6e2072617465206d757374206265203e203000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6928   */\n      mstore\n        /* \"#utility.yul\":6760:6935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7307   */\n    tag_245:\n        /* \"#utility.yul\":7083:7086   */\n      0x00\n        /* \"#utility.yul\":7104:7171   */\n      tag_334\n        /* \"#utility.yul\":7168:7170   */\n      0x19\n        /* \"#utility.yul\":7163:7166   */\n      dup4\n        /* \"#utility.yul\":7104:7171   */\n      tag_223\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7097:7171   */\n      swap2\n      pop\n        /* \"#utility.yul\":7180:7273   */\n      tag_335\n        /* \"#utility.yul\":7269:7272   */\n      dup3\n        /* \"#utility.yul\":7180:7273   */\n      tag_244\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7298:7300   */\n      0x20\n        /* \"#utility.yul\":7293:7296   */\n      dup3\n        /* \"#utility.yul\":7289:7301   */\n      add\n        /* \"#utility.yul\":7282:7301   */\n      swap1\n      pop\n        /* \"#utility.yul\":6941:7307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7313:7732   */\n    tag_109:\n        /* \"#utility.yul\":7479:7483   */\n      0x00\n        /* \"#utility.yul\":7517:7519   */\n      0x20\n        /* \"#utility.yul\":7506:7515   */\n      dup3\n        /* \"#utility.yul\":7502:7520   */\n      add\n        /* \"#utility.yul\":7494:7520   */\n      swap1\n      pop\n        /* \"#utility.yul\":7566:7575   */\n      dup2\n        /* \"#utility.yul\":7560:7564   */\n      dup2\n        /* \"#utility.yul\":7556:7576   */\n      sub\n        /* \"#utility.yul\":7552:7553   */\n      0x00\n        /* \"#utility.yul\":7541:7550   */\n      dup4\n        /* \"#utility.yul\":7537:7554   */\n      add\n        /* \"#utility.yul\":7530:7577   */\n      mstore\n        /* \"#utility.yul\":7594:7725   */\n      tag_337\n        /* \"#utility.yul\":7720:7724   */\n      dup2\n        /* \"#utility.yul\":7594:7725   */\n      tag_245\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7586:7725   */\n      swap1\n      pop\n        /* \"#utility.yul\":7313:7732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7738:7903   */\n    tag_246:\n        /* \"#utility.yul\":7878:7895   */\n      0x4e6f2074696d6520656c61707365640000000000000000000000000000000000\n        /* \"#utility.yul\":7874:7875   */\n      0x00\n        /* \"#utility.yul\":7866:7872   */\n      dup3\n        /* \"#utility.yul\":7862:7876   */\n      add\n        /* \"#utility.yul\":7855:7896   */\n      mstore\n        /* \"#utility.yul\":7738:7903   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7909:8275   */\n    tag_247:\n        /* \"#utility.yul\":8051:8054   */\n      0x00\n        /* \"#utility.yul\":8072:8139   */\n      tag_340\n        /* \"#utility.yul\":8136:8138   */\n      0x0f\n        /* \"#utility.yul\":8131:8134   */\n      dup4\n        /* \"#utility.yul\":8072:8139   */\n      tag_223\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8065:8139   */\n      swap2\n      pop\n        /* \"#utility.yul\":8148:8241   */\n      tag_341\n        /* \"#utility.yul\":8237:8240   */\n      dup3\n        /* \"#utility.yul\":8148:8241   */\n      tag_246\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8266:8268   */\n      0x20\n        /* \"#utility.yul\":8261:8264   */\n      dup3\n        /* \"#utility.yul\":8257:8269   */\n      add\n        /* \"#utility.yul\":8250:8269   */\n      swap1\n      pop\n        /* \"#utility.yul\":7909:8275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8700   */\n    tag_124:\n        /* \"#utility.yul\":8447:8451   */\n      0x00\n        /* \"#utility.yul\":8485:8487   */\n      0x20\n        /* \"#utility.yul\":8474:8483   */\n      dup3\n        /* \"#utility.yul\":8470:8488   */\n      add\n        /* \"#utility.yul\":8462:8488   */\n      swap1\n      pop\n        /* \"#utility.yul\":8534:8543   */\n      dup2\n        /* \"#utility.yul\":8528:8532   */\n      dup2\n        /* \"#utility.yul\":8524:8544   */\n      sub\n        /* \"#utility.yul\":8520:8521   */\n      0x00\n        /* \"#utility.yul\":8509:8518   */\n      dup4\n        /* \"#utility.yul\":8505:8522   */\n      add\n        /* \"#utility.yul\":8498:8545   */\n      mstore\n        /* \"#utility.yul\":8562:8693   */\n      tag_343\n        /* \"#utility.yul\":8688:8692   */\n      dup2\n        /* \"#utility.yul\":8562:8693   */\n      tag_247\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8554:8693   */\n      swap1\n      pop\n        /* \"#utility.yul\":8281:8700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8706:8886   */\n    tag_248:\n        /* \"#utility.yul\":8754:8831   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8751:8752   */\n      0x00\n        /* \"#utility.yul\":8744:8832   */\n      mstore\n        /* \"#utility.yul\":8851:8855   */\n      0x11\n        /* \"#utility.yul\":8848:8849   */\n      0x04\n        /* \"#utility.yul\":8841:8856   */\n      mstore\n        /* \"#utility.yul\":8875:8879   */\n      0x24\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8865:8880   */\n      revert\n        /* \"#utility.yul\":8892:9086   */\n    tag_126:\n        /* \"#utility.yul\":8932:8936   */\n      0x00\n        /* \"#utility.yul\":8952:8972   */\n      tag_346\n        /* \"#utility.yul\":8970:8971   */\n      dup3\n        /* \"#utility.yul\":8952:8972   */\n      tag_234\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8947:8972   */\n      swap2\n      pop\n        /* \"#utility.yul\":8986:9006   */\n      tag_347\n        /* \"#utility.yul\":9004:9005   */\n      dup4\n        /* \"#utility.yul\":8986:9006   */\n      tag_234\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8981:9006   */\n      swap3\n      pop\n        /* \"#utility.yul\":9030:9031   */\n      dup3\n        /* \"#utility.yul\":9027:9028   */\n      dup3\n        /* \"#utility.yul\":9023:9032   */\n      sub\n        /* \"#utility.yul\":9015:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9054:9055   */\n      dup2\n        /* \"#utility.yul\":9048:9052   */\n      dup2\n        /* \"#utility.yul\":9045:9056   */\n      gt\n        /* \"#utility.yul\":9042:9079   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":9059:9077   */\n      tag_349\n      tag_248\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9042:9079   */\n    tag_348:\n        /* \"#utility.yul\":8892:9086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9092:9502   */\n    tag_128:\n        /* \"#utility.yul\":9132:9139   */\n      0x00\n        /* \"#utility.yul\":9155:9175   */\n      tag_351\n        /* \"#utility.yul\":9173:9174   */\n      dup3\n        /* \"#utility.yul\":9155:9175   */\n      tag_234\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9150:9175   */\n      swap2\n      pop\n        /* \"#utility.yul\":9189:9209   */\n      tag_352\n        /* \"#utility.yul\":9207:9208   */\n      dup4\n        /* \"#utility.yul\":9189:9209   */\n      tag_234\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9184:9209   */\n      swap3\n      pop\n        /* \"#utility.yul\":9244:9245   */\n      dup3\n        /* \"#utility.yul\":9241:9242   */\n      dup3\n        /* \"#utility.yul\":9237:9246   */\n      mul\n        /* \"#utility.yul\":9266:9296   */\n      tag_353\n        /* \"#utility.yul\":9284:9295   */\n      dup2\n        /* \"#utility.yul\":9266:9296   */\n      tag_234\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9255:9296   */\n      swap2\n      pop\n        /* \"#utility.yul\":9445:9446   */\n      dup3\n        /* \"#utility.yul\":9436:9443   */\n      dup3\n        /* \"#utility.yul\":9432:9447   */\n      div\n        /* \"#utility.yul\":9429:9430   */\n      dup5\n        /* \"#utility.yul\":9426:9448   */\n      eq\n        /* \"#utility.yul\":9406:9407   */\n      dup4\n        /* \"#utility.yul\":9399:9408   */\n      iszero\n        /* \"#utility.yul\":9379:9462   */\n      or\n        /* \"#utility.yul\":9356:9495   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":9475:9493   */\n      tag_355\n      tag_248\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9356:9495   */\n    tag_354:\n        /* \"#utility.yul\":9140:9502   */\n      pop\n        /* \"#utility.yul\":9092:9502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9508:9688   */\n    tag_249:\n        /* \"#utility.yul\":9556:9633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9553:9554   */\n      0x00\n        /* \"#utility.yul\":9546:9634   */\n      mstore\n        /* \"#utility.yul\":9653:9657   */\n      0x12\n        /* \"#utility.yul\":9650:9651   */\n      0x04\n        /* \"#utility.yul\":9643:9658   */\n      mstore\n        /* \"#utility.yul\":9677:9681   */\n      0x24\n        /* \"#utility.yul\":9674:9675   */\n      0x00\n        /* \"#utility.yul\":9667:9682   */\n      revert\n        /* \"#utility.yul\":9694:9879   */\n    tag_130:\n        /* \"#utility.yul\":9734:9735   */\n      0x00\n        /* \"#utility.yul\":9751:9771   */\n      tag_358\n        /* \"#utility.yul\":9769:9770   */\n      dup3\n        /* \"#utility.yul\":9751:9771   */\n      tag_234\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9746:9771   */\n      swap2\n      pop\n        /* \"#utility.yul\":9785:9805   */\n      tag_359\n        /* \"#utility.yul\":9803:9804   */\n      dup4\n        /* \"#utility.yul\":9785:9805   */\n      tag_234\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9780:9805   */\n      swap3\n      pop\n        /* \"#utility.yul\":9824:9825   */\n      dup3\n        /* \"#utility.yul\":9814:9849   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":9829:9847   */\n      tag_361\n      tag_249\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9814:9849   */\n    tag_360:\n        /* \"#utility.yul\":9871:9872   */\n      dup3\n        /* \"#utility.yul\":9868:9869   */\n      dup3\n        /* \"#utility.yul\":9864:9873   */\n      div\n        /* \"#utility.yul\":9859:9873   */\n      swap1\n      pop\n        /* \"#utility.yul\":9694:9879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9885:10052   */\n    tag_250:\n        /* \"#utility.yul\":10025:10044   */\n      0x4e6f20746f6b656e7320746f206d696e74000000000000000000000000000000\n        /* \"#utility.yul\":10021:10022   */\n      0x00\n        /* \"#utility.yul\":10013:10019   */\n      dup3\n        /* \"#utility.yul\":10009:10023   */\n      add\n        /* \"#utility.yul\":10002:10045   */\n      mstore\n        /* \"#utility.yul\":9885:10052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10424   */\n    tag_251:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10221:10288   */\n      tag_364\n        /* \"#utility.yul\":10285:10287   */\n      0x11\n        /* \"#utility.yul\":10280:10283   */\n      dup4\n        /* \"#utility.yul\":10221:10288   */\n      tag_223\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10214:10288   */\n      swap2\n      pop\n        /* \"#utility.yul\":10297:10390   */\n      tag_365\n        /* \"#utility.yul\":10386:10389   */\n      dup3\n        /* \"#utility.yul\":10297:10390   */\n      tag_250\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10415:10417   */\n      0x20\n        /* \"#utility.yul\":10410:10413   */\n      dup3\n        /* \"#utility.yul\":10406:10418   */\n      add\n        /* \"#utility.yul\":10399:10418   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10430:10849   */\n    tag_133:\n        /* \"#utility.yul\":10596:10600   */\n      0x00\n        /* \"#utility.yul\":10634:10636   */\n      0x20\n        /* \"#utility.yul\":10623:10632   */\n      dup3\n        /* \"#utility.yul\":10619:10637   */\n      add\n        /* \"#utility.yul\":10611:10637   */\n      swap1\n      pop\n        /* \"#utility.yul\":10683:10692   */\n      dup2\n        /* \"#utility.yul\":10677:10681   */\n      dup2\n        /* \"#utility.yul\":10673:10693   */\n      sub\n        /* \"#utility.yul\":10669:10670   */\n      0x00\n        /* \"#utility.yul\":10658:10667   */\n      dup4\n        /* \"#utility.yul\":10654:10671   */\n      add\n        /* \"#utility.yul\":10647:10694   */\n      mstore\n        /* \"#utility.yul\":10711:10842   */\n      tag_367\n        /* \"#utility.yul\":10837:10841   */\n      dup2\n        /* \"#utility.yul\":10711:10842   */\n      tag_251\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10703:10842   */\n      swap1\n      pop\n        /* \"#utility.yul\":10430:10849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10855:11187   */\n    tag_137:\n        /* \"#utility.yul\":10976:10980   */\n      0x00\n        /* \"#utility.yul\":11014:11016   */\n      0x40\n        /* \"#utility.yul\":11003:11012   */\n      dup3\n        /* \"#utility.yul\":10999:11017   */\n      add\n        /* \"#utility.yul\":10991:11017   */\n      swap1\n      pop\n        /* \"#utility.yul\":11027:11098   */\n      tag_369\n        /* \"#utility.yul\":11095:11096   */\n      0x00\n        /* \"#utility.yul\":11084:11093   */\n      dup4\n        /* \"#utility.yul\":11080:11097   */\n      add\n        /* \"#utility.yul\":11071:11077   */\n      dup6\n        /* \"#utility.yul\":11027:11098   */\n      tag_239\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11108:11180   */\n      tag_370\n        /* \"#utility.yul\":11176:11178   */\n      0x20\n        /* \"#utility.yul\":11165:11174   */\n      dup4\n        /* \"#utility.yul\":11161:11179   */\n      add\n        /* \"#utility.yul\":11152:11158   */\n      dup5\n        /* \"#utility.yul\":11108:11180   */\n      tag_239\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10855:11187   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11193:11367   */\n    tag_252:\n        /* \"#utility.yul\":11333:11359   */\n      0x496e76616c696420747265617375727920616464726573730000000000000000\n        /* \"#utility.yul\":11329:11330   */\n      0x00\n        /* \"#utility.yul\":11321:11327   */\n      dup3\n        /* \"#utility.yul\":11317:11331   */\n      add\n        /* \"#utility.yul\":11310:11360   */\n      mstore\n        /* \"#utility.yul\":11193:11367   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11373:11739   */\n    tag_253:\n        /* \"#utility.yul\":11515:11518   */\n      0x00\n        /* \"#utility.yul\":11536:11603   */\n      tag_373\n        /* \"#utility.yul\":11600:11602   */\n      0x18\n        /* \"#utility.yul\":11595:11598   */\n      dup4\n        /* \"#utility.yul\":11536:11603   */\n      tag_223\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11529:11603   */\n      swap2\n      pop\n        /* \"#utility.yul\":11612:11705   */\n      tag_374\n        /* \"#utility.yul\":11701:11704   */\n      dup3\n        /* \"#utility.yul\":11612:11705   */\n      tag_252\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11730:11732   */\n      0x20\n        /* \"#utility.yul\":11725:11728   */\n      dup3\n        /* \"#utility.yul\":11721:11733   */\n      add\n        /* \"#utility.yul\":11714:11733   */\n      swap1\n      pop\n        /* \"#utility.yul\":11373:11739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11745:12164   */\n    tag_152:\n        /* \"#utility.yul\":11911:11915   */\n      0x00\n        /* \"#utility.yul\":11949:11951   */\n      0x20\n        /* \"#utility.yul\":11938:11947   */\n      dup3\n        /* \"#utility.yul\":11934:11952   */\n      add\n        /* \"#utility.yul\":11926:11952   */\n      swap1\n      pop\n        /* \"#utility.yul\":11998:12007   */\n      dup2\n        /* \"#utility.yul\":11992:11996   */\n      dup2\n        /* \"#utility.yul\":11988:12008   */\n      sub\n        /* \"#utility.yul\":11984:11985   */\n      0x00\n        /* \"#utility.yul\":11973:11982   */\n      dup4\n        /* \"#utility.yul\":11969:11986   */\n      add\n        /* \"#utility.yul\":11962:12009   */\n      mstore\n        /* \"#utility.yul\":12026:12157   */\n      tag_376\n        /* \"#utility.yul\":12152:12156   */\n      dup2\n        /* \"#utility.yul\":12026:12157   */\n      tag_253\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12018:12157   */\n      swap1\n      pop\n        /* \"#utility.yul\":11745:12164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12170:12612   */\n    tag_186:\n        /* \"#utility.yul\":12319:12323   */\n      0x00\n        /* \"#utility.yul\":12357:12359   */\n      0x60\n        /* \"#utility.yul\":12346:12355   */\n      dup3\n        /* \"#utility.yul\":12342:12360   */\n      add\n        /* \"#utility.yul\":12334:12360   */\n      swap1\n      pop\n        /* \"#utility.yul\":12370:12441   */\n      tag_378\n        /* \"#utility.yul\":12438:12439   */\n      0x00\n        /* \"#utility.yul\":12427:12436   */\n      dup4\n        /* \"#utility.yul\":12423:12440   */\n      add\n        /* \"#utility.yul\":12414:12420   */\n      dup7\n        /* \"#utility.yul\":12370:12441   */\n      tag_242\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12451:12523   */\n      tag_379\n        /* \"#utility.yul\":12519:12521   */\n      0x20\n        /* \"#utility.yul\":12508:12517   */\n      dup4\n        /* \"#utility.yul\":12504:12522   */\n      add\n        /* \"#utility.yul\":12495:12501   */\n      dup6\n        /* \"#utility.yul\":12451:12523   */\n      tag_239\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12533:12605   */\n      tag_380\n        /* \"#utility.yul\":12601:12603   */\n      0x40\n        /* \"#utility.yul\":12590:12599   */\n      dup4\n        /* \"#utility.yul\":12586:12604   */\n      add\n        /* \"#utility.yul\":12577:12583   */\n      dup5\n        /* \"#utility.yul\":12533:12605   */\n      tag_239\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12170:12612   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12618:12799   */\n    tag_254:\n        /* \"#utility.yul\":12758:12791   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12754:12755   */\n      0x00\n        /* \"#utility.yul\":12746:12752   */\n      dup3\n        /* \"#utility.yul\":12742:12756   */\n      add\n        /* \"#utility.yul\":12735:12792   */\n      mstore\n        /* \"#utility.yul\":12618:12799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12805:13171   */\n    tag_255:\n        /* \"#utility.yul\":12947:12950   */\n      0x00\n        /* \"#utility.yul\":12968:13035   */\n      tag_383\n        /* \"#utility.yul\":13032:13034   */\n      0x1f\n        /* \"#utility.yul\":13027:13030   */\n      dup4\n        /* \"#utility.yul\":12968:13035   */\n      tag_223\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12961:13035   */\n      swap2\n      pop\n        /* \"#utility.yul\":13044:13137   */\n      tag_384\n        /* \"#utility.yul\":13133:13136   */\n      dup3\n        /* \"#utility.yul\":13044:13137   */\n      tag_254\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":13162:13164   */\n      0x20\n        /* \"#utility.yul\":13157:13160   */\n      dup3\n        /* \"#utility.yul\":13153:13165   */\n      add\n        /* \"#utility.yul\":13146:13165   */\n      swap1\n      pop\n        /* \"#utility.yul\":12805:13171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13177:13596   */\n    tag_198:\n        /* \"#utility.yul\":13343:13347   */\n      0x00\n        /* \"#utility.yul\":13381:13383   */\n      0x20\n        /* \"#utility.yul\":13370:13379   */\n      dup3\n        /* \"#utility.yul\":13366:13384   */\n      add\n        /* \"#utility.yul\":13358:13384   */\n      swap1\n      pop\n        /* \"#utility.yul\":13430:13439   */\n      dup2\n        /* \"#utility.yul\":13424:13428   */\n      dup2\n        /* \"#utility.yul\":13420:13440   */\n      sub\n        /* \"#utility.yul\":13416:13417   */\n      0x00\n        /* \"#utility.yul\":13405:13414   */\n      dup4\n        /* \"#utility.yul\":13401:13418   */\n      add\n        /* \"#utility.yul\":13394:13441   */\n      mstore\n        /* \"#utility.yul\":13458:13589   */\n      tag_386\n        /* \"#utility.yul\":13584:13588   */\n      dup2\n        /* \"#utility.yul\":13458:13589   */\n      tag_255\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13450:13589   */\n      swap1\n      pop\n        /* \"#utility.yul\":13177:13596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13602:13793   */\n    tag_215:\n        /* \"#utility.yul\":13642:13645   */\n      0x00\n        /* \"#utility.yul\":13661:13681   */\n      tag_388\n        /* \"#utility.yul\":13679:13680   */\n      dup3\n        /* \"#utility.yul\":13661:13681   */\n      tag_234\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13656:13681   */\n      swap2\n      pop\n        /* \"#utility.yul\":13695:13715   */\n      tag_389\n        /* \"#utility.yul\":13713:13714   */\n      dup4\n        /* \"#utility.yul\":13695:13715   */\n      tag_234\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13690:13715   */\n      swap3\n      pop\n        /* \"#utility.yul\":13738:13739   */\n      dup3\n        /* \"#utility.yul\":13735:13736   */\n      dup3\n        /* \"#utility.yul\":13731:13740   */\n      add\n        /* \"#utility.yul\":13724:13740   */\n      swap1\n      pop\n        /* \"#utility.yul\":13759:13762   */\n      dup1\n        /* \"#utility.yul\":13756:13757   */\n      dup3\n        /* \"#utility.yul\":13753:13763   */\n      gt\n        /* \"#utility.yul\":13750:13786   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":13766:13784   */\n      tag_391\n      tag_248\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13750:13786   */\n    tag_390:\n        /* \"#utility.yul\":13602:13793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a5b5b7507d9db598f8c195cfc3242ba6017e213e9dc2ea94327fbb994c94f54e64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 801,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 606,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 934,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10680:8",
										"nodeType": "YulBlock",
										"src": "0:10680:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "608:80:8",
													"nodeType": "YulBlock",
													"src": "608:80:8",
													"statements": [
														{
															"nativeSrc": "618:22:8",
															"nodeType": "YulAssignment",
															"src": "618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:8"
																},
																"nativeSrc": "627:13:8",
																"nodeType": "YulFunctionCall",
																"src": "627:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:8"
																},
																"nativeSrc": "649:33:8",
																"nodeType": "YulFunctionCall",
																"src": "649:33:8"
															},
															"nativeSrc": "649:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:8",
														"nodeType": "YulTypedName",
														"src": "586:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:8",
														"nodeType": "YulTypedName",
														"src": "594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:8",
														"nodeType": "YulTypedName",
														"src": "602:5:8",
														"type": ""
													}
												],
												"src": "545:143:8"
											},
											{
												"body": {
													"nativeSrc": "739:81:8",
													"nodeType": "YulBlock",
													"src": "739:81:8",
													"statements": [
														{
															"nativeSrc": "749:65:8",
															"nodeType": "YulAssignment",
															"src": "749:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:8",
																		"nodeType": "YulLiteral",
																		"src": "771:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:8"
																},
																"nativeSrc": "760:54:8",
																"nodeType": "YulFunctionCall",
																"src": "760:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:8",
														"nodeType": "YulTypedName",
														"src": "721:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:8",
														"nodeType": "YulTypedName",
														"src": "731:7:8",
														"type": ""
													}
												],
												"src": "694:126:8"
											},
											{
												"body": {
													"nativeSrc": "871:51:8",
													"nodeType": "YulBlock",
													"src": "871:51:8",
													"statements": [
														{
															"nativeSrc": "881:35:8",
															"nodeType": "YulAssignment",
															"src": "881:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:8"
																},
																"nativeSrc": "892:24:8",
																"nodeType": "YulFunctionCall",
																"src": "892:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:8",
														"nodeType": "YulTypedName",
														"src": "853:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:8",
														"nodeType": "YulTypedName",
														"src": "863:7:8",
														"type": ""
													}
												],
												"src": "826:96:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1316:552:8",
													"nodeType": "YulBlock",
													"src": "1316:552:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:8",
																"nodeType": "YulBlock",
																"src": "1362:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:8"
																			},
																			"nativeSrc": "1364:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:8"
																		},
																		"nativeSrc": "1364:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:8"
																		},
																		"nativeSrc": "1333:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:8"
																},
																"nativeSrc": "1329:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:8"
															},
															"nativeSrc": "1326:119:8",
															"nodeType": "YulIf",
															"src": "1326:119:8"
														},
														{
															"nativeSrc": "1455:128:8",
															"nodeType": "YulBlock",
															"src": "1455:128:8",
															"statements": [
																{
																	"nativeSrc": "1470:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:8"
																				},
																				"nativeSrc": "1541:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:8"
																		},
																		"nativeSrc": "1509:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:8",
															"nodeType": "YulBlock",
															"src": "1593:129:8",
															"statements": [
																{
																	"nativeSrc": "1608:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:8"
																				},
																				"nativeSrc": "1680:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:8"
																		},
																		"nativeSrc": "1648:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:8",
															"nodeType": "YulBlock",
															"src": "1732:129:8",
															"statements": [
																{
																	"nativeSrc": "1747:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:8"
																				},
																				"nativeSrc": "1819:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:8"
																		},
																		"nativeSrc": "1787:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:8",
														"nodeType": "YulTypedName",
														"src": "1270:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:8",
														"nodeType": "YulTypedName",
														"src": "1281:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:8",
														"nodeType": "YulTypedName",
														"src": "1293:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:8",
														"nodeType": "YulTypedName",
														"src": "1301:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:8",
														"nodeType": "YulTypedName",
														"src": "1309:6:8",
														"type": ""
													}
												],
												"src": "1205:663:8"
											},
											{
												"body": {
													"nativeSrc": "1933:40:8",
													"nodeType": "YulBlock",
													"src": "1933:40:8",
													"statements": [
														{
															"nativeSrc": "1944:22:8",
															"nodeType": "YulAssignment",
															"src": "1944:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1960:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1960:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1954:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1954:5:8"
																},
																"nativeSrc": "1954:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1954:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1874:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1916:5:8",
														"nodeType": "YulTypedName",
														"src": "1916:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1926:6:8",
														"nodeType": "YulTypedName",
														"src": "1926:6:8",
														"type": ""
													}
												],
												"src": "1874:99:8"
											},
											{
												"body": {
													"nativeSrc": "2007:152:8",
													"nodeType": "YulBlock",
													"src": "2007:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2024:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2024:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2027:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:8"
																},
																"nativeSrc": "2017:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2017:88:8"
															},
															"nativeSrc": "2017:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2017:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2121:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2121:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2124:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2124:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2114:6:8"
																},
																"nativeSrc": "2114:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2114:15:8"
															},
															"nativeSrc": "2114:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2114:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2145:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2145:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2148:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2148:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:8"
																},
																"nativeSrc": "2138:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2138:15:8"
															},
															"nativeSrc": "2138:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2138:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1979:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1979:180:8"
											},
											{
												"body": {
													"nativeSrc": "2193:152:8",
													"nodeType": "YulBlock",
													"src": "2193:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2210:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2213:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2213:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:8"
																},
																"nativeSrc": "2203:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2203:88:8"
															},
															"nativeSrc": "2203:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2203:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2310:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2310:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:8"
																},
																"nativeSrc": "2300:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2300:15:8"
															},
															"nativeSrc": "2300:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:8"
																},
																"nativeSrc": "2324:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2324:15:8"
															},
															"nativeSrc": "2324:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2324:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2165:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2165:180:8"
											},
											{
												"body": {
													"nativeSrc": "2402:269:8",
													"nodeType": "YulBlock",
													"src": "2402:269:8",
													"statements": [
														{
															"nativeSrc": "2412:22:8",
															"nodeType": "YulAssignment",
															"src": "2412:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2426:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2426:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2432:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2422:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:8"
																},
																"nativeSrc": "2422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2422:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2412:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:8"
																}
															]
														},
														{
															"nativeSrc": "2443:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2443:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2473:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2473:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2479:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2469:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:8"
																},
																"nativeSrc": "2469:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2469:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2447:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2447:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2520:51:8",
																"nodeType": "YulBlock",
																"src": "2520:51:8",
																"statements": [
																	{
																		"nativeSrc": "2534:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2534:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2548:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2548:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2556:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2556:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2544:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2544:3:8"
																			},
																			"nativeSrc": "2544:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2544:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2534:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2534:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2500:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2500:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																},
																"nativeSrc": "2493:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2493:26:8"
															},
															"nativeSrc": "2490:81:8",
															"nodeType": "YulIf",
															"src": "2490:81:8"
														},
														{
															"body": {
																"nativeSrc": "2623:42:8",
																"nodeType": "YulBlock",
																"src": "2623:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2637:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2637:16:8"
																			},
																			"nativeSrc": "2637:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:18:8"
																		},
																		"nativeSrc": "2637:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2587:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2587:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2610:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2618:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2618:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2607:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2607:2:8"
																		},
																		"nativeSrc": "2607:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2584:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2584:2:8"
																},
																"nativeSrc": "2584:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2584:38:8"
															},
															"nativeSrc": "2581:84:8",
															"nodeType": "YulIf",
															"src": "2581:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2351:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2386:4:8",
														"nodeType": "YulTypedName",
														"src": "2386:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2395:6:8",
														"nodeType": "YulTypedName",
														"src": "2395:6:8",
														"type": ""
													}
												],
												"src": "2351:320:8"
											},
											{
												"body": {
													"nativeSrc": "2731:87:8",
													"nodeType": "YulBlock",
													"src": "2731:87:8",
													"statements": [
														{
															"nativeSrc": "2741:11:8",
															"nodeType": "YulAssignment",
															"src": "2741:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2749:3:8",
																"nodeType": "YulIdentifier",
																"src": "2749:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2741:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2741:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2769:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2772:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2772:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2762:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:8"
																},
																"nativeSrc": "2762:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2762:14:8"
															},
															"nativeSrc": "2762:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2762:14:8"
														},
														{
															"nativeSrc": "2785:26:8",
															"nodeType": "YulAssignment",
															"src": "2785:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2793:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2793:9:8"
																},
																"nativeSrc": "2793:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2793:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2785:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2785:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2677:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2718:3:8",
														"nodeType": "YulTypedName",
														"src": "2718:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2726:4:8",
														"nodeType": "YulTypedName",
														"src": "2726:4:8",
														"type": ""
													}
												],
												"src": "2677:141:8"
											},
											{
												"body": {
													"nativeSrc": "2868:49:8",
													"nodeType": "YulBlock",
													"src": "2868:49:8",
													"statements": [
														{
															"nativeSrc": "2878:33:8",
															"nodeType": "YulAssignment",
															"src": "2878:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2903:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:8"
																		},
																		"nativeSrc": "2892:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2908:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																},
																"nativeSrc": "2888:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2888:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2824:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2851:5:8",
														"nodeType": "YulTypedName",
														"src": "2851:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2861:6:8",
														"nodeType": "YulTypedName",
														"src": "2861:6:8",
														"type": ""
													}
												],
												"src": "2824:93:8"
											},
											{
												"body": {
													"nativeSrc": "2976:54:8",
													"nodeType": "YulBlock",
													"src": "2976:54:8",
													"statements": [
														{
															"nativeSrc": "2986:37:8",
															"nodeType": "YulAssignment",
															"src": "2986:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3011:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3011:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3017:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3017:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:8"
																},
																"nativeSrc": "3007:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3007:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2986:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2986:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2923:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2951:4:8",
														"nodeType": "YulTypedName",
														"src": "2951:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2957:5:8",
														"nodeType": "YulTypedName",
														"src": "2957:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2967:8:8",
														"nodeType": "YulTypedName",
														"src": "2967:8:8",
														"type": ""
													}
												],
												"src": "2923:107:8"
											},
											{
												"body": {
													"nativeSrc": "3112:317:8",
													"nodeType": "YulBlock",
													"src": "3112:317:8",
													"statements": [
														{
															"nativeSrc": "3122:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3122:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3143:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "3143:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:8"
																},
																"nativeSrc": "3139:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3139:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3126:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3126:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3166:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3166:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3197:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3208:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3208:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3178:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3178:18:8"
																},
																"nativeSrc": "3178:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3178:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3170:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3170:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3284:51:8",
															"nodeType": "YulAssignment",
															"src": "3284:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3315:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3326:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3326:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3296:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3296:18:8"
																},
																"nativeSrc": "3296:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3296:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3284:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3284:8:8"
																}
															]
														},
														{
															"nativeSrc": "3344:30:8",
															"nodeType": "YulAssignment",
															"src": "3344:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3357:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3357:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3368:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3368:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:8"
																		},
																		"nativeSrc": "3364:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3364:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3353:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:8"
																},
																"nativeSrc": "3353:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3353:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3344:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3344:5:8"
																}
															]
														},
														{
															"nativeSrc": "3383:40:8",
															"nodeType": "YulAssignment",
															"src": "3383:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3396:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3396:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3407:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3407:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3417:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3417:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:8"
																		},
																		"nativeSrc": "3403:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3393:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3393:2:8"
																},
																"nativeSrc": "3393:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3393:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3036:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3073:5:8",
														"nodeType": "YulTypedName",
														"src": "3073:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3080:10:8",
														"nodeType": "YulTypedName",
														"src": "3080:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3092:8:8",
														"nodeType": "YulTypedName",
														"src": "3092:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3105:6:8",
														"nodeType": "YulTypedName",
														"src": "3105:6:8",
														"type": ""
													}
												],
												"src": "3036:393:8"
											},
											{
												"body": {
													"nativeSrc": "3467:28:8",
													"nodeType": "YulBlock",
													"src": "3467:28:8",
													"statements": [
														{
															"nativeSrc": "3477:12:8",
															"nodeType": "YulAssignment",
															"src": "3477:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3484:5:8",
																"nodeType": "YulIdentifier",
																"src": "3484:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3435:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3453:5:8",
														"nodeType": "YulTypedName",
														"src": "3453:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3463:3:8",
														"nodeType": "YulTypedName",
														"src": "3463:3:8",
														"type": ""
													}
												],
												"src": "3435:60:8"
											},
											{
												"body": {
													"nativeSrc": "3561:82:8",
													"nodeType": "YulBlock",
													"src": "3561:82:8",
													"statements": [
														{
															"nativeSrc": "3571:66:8",
															"nodeType": "YulAssignment",
															"src": "3571:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3629:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3629:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3611:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3611:17:8"
																				},
																				"nativeSrc": "3611:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3611:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3602:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3602:8:8"
																		},
																		"nativeSrc": "3602:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3602:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3584:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3584:17:8"
																},
																"nativeSrc": "3584:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3584:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3571:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3501:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3541:5:8",
														"nodeType": "YulTypedName",
														"src": "3541:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3551:9:8",
														"nodeType": "YulTypedName",
														"src": "3551:9:8",
														"type": ""
													}
												],
												"src": "3501:142:8"
											},
											{
												"body": {
													"nativeSrc": "3696:28:8",
													"nodeType": "YulBlock",
													"src": "3696:28:8",
													"statements": [
														{
															"nativeSrc": "3706:12:8",
															"nodeType": "YulAssignment",
															"src": "3706:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3713:5:8",
																"nodeType": "YulIdentifier",
																"src": "3713:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3706:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3649:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3682:5:8",
														"nodeType": "YulTypedName",
														"src": "3682:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3692:3:8",
														"nodeType": "YulTypedName",
														"src": "3692:3:8",
														"type": ""
													}
												],
												"src": "3649:75:8"
											},
											{
												"body": {
													"nativeSrc": "3806:193:8",
													"nodeType": "YulBlock",
													"src": "3806:193:8",
													"statements": [
														{
															"nativeSrc": "3816:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3816:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3871:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3871:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3840:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3840:30:8"
																},
																"nativeSrc": "3840:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3840:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3820:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3820:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3895:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3895:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3935:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3935:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3929:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3929:5:8"
																				},
																				"nativeSrc": "3929:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3929:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3942:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3974:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3974:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3950:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3950:23:8"
																				},
																				"nativeSrc": "3950:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3950:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3901:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3901:27:8"
																		},
																		"nativeSrc": "3901:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:8"
																},
																"nativeSrc": "3888:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3888:105:8"
															},
															"nativeSrc": "3888:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3888:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3730:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3783:4:8",
														"nodeType": "YulTypedName",
														"src": "3783:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3789:6:8",
														"nodeType": "YulTypedName",
														"src": "3789:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3797:7:8",
														"nodeType": "YulTypedName",
														"src": "3797:7:8",
														"type": ""
													}
												],
												"src": "3730:269:8"
											},
											{
												"body": {
													"nativeSrc": "4054:24:8",
													"nodeType": "YulBlock",
													"src": "4054:24:8",
													"statements": [
														{
															"nativeSrc": "4064:8:8",
															"nodeType": "YulAssignment",
															"src": "4064:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4071:1:8",
																"nodeType": "YulLiteral",
																"src": "4071:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4005:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4050:3:8",
														"nodeType": "YulTypedName",
														"src": "4050:3:8",
														"type": ""
													}
												],
												"src": "4005:73:8"
											},
											{
												"body": {
													"nativeSrc": "4137:136:8",
													"nodeType": "YulBlock",
													"src": "4137:136:8",
													"statements": [
														{
															"nativeSrc": "4147:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4161:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4161:30:8"
																},
																"nativeSrc": "4161:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4161:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4151:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4246:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4246:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4252:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4252:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4260:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4260:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4202:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4202:43:8"
																},
																"nativeSrc": "4202:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4202:65:8"
															},
															"nativeSrc": "4202:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4202:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4084:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4123:4:8",
														"nodeType": "YulTypedName",
														"src": "4123:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4129:6:8",
														"nodeType": "YulTypedName",
														"src": "4129:6:8",
														"type": ""
													}
												],
												"src": "4084:189:8"
											},
											{
												"body": {
													"nativeSrc": "4329:136:8",
													"nodeType": "YulBlock",
													"src": "4329:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4396:63:8",
																"nodeType": "YulBlock",
																"src": "4396:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4440:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4440:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4447:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4410:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4410:29:8"
																			},
																			"nativeSrc": "4410:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4410:39:8"
																		},
																		"nativeSrc": "4410:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4410:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4349:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4349:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4346:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4346:2:8"
																},
																"nativeSrc": "4346:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4346:14:8"
															},
															"nativeSrc": "4339:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4361:26:8",
																"nodeType": "YulBlock",
																"src": "4361:26:8",
																"statements": [
																	{
																		"nativeSrc": "4363:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4363:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4376:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4376:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4383:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4383:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4372:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4372:3:8"
																			},
																			"nativeSrc": "4372:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4372:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4363:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4363:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4343:2:8",
																"nodeType": "YulBlock",
																"src": "4343:2:8",
																"statements": []
															},
															"src": "4339:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4279:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4317:5:8",
														"nodeType": "YulTypedName",
														"src": "4317:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4324:3:8",
														"nodeType": "YulTypedName",
														"src": "4324:3:8",
														"type": ""
													}
												],
												"src": "4279:186:8"
											},
											{
												"body": {
													"nativeSrc": "4550:464:8",
													"nodeType": "YulBlock",
													"src": "4550:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4576:431:8",
																"nodeType": "YulBlock",
																"src": "4576:431:8",
																"statements": [
																	{
																		"nativeSrc": "4590:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4590:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4638:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4638:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4606:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4606:31:8"
																			},
																			"nativeSrc": "4606:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4606:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4594:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4594:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4657:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4657:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4680:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4680:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4708:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4708:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4690:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4690:17:8"
																					},
																					"nativeSrc": "4690:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4690:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4676:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4676:3:8"
																			},
																			"nativeSrc": "4676:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4676:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4661:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4661:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4877:27:8",
																			"nodeType": "YulBlock",
																			"src": "4877:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4879:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4879:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4894:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4894:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4879:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4879:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4861:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4861:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4873:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4873:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4858:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4858:2:8"
																			},
																			"nativeSrc": "4858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4858:18:8"
																		},
																		"nativeSrc": "4855:49:8",
																		"nodeType": "YulIf",
																		"src": "4855:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4946:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4946:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4963:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4963:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4991:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4991:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4973:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4973:17:8"
																							},
																							"nativeSrc": "4973:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4973:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4959:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4959:3:8"
																					},
																					"nativeSrc": "4959:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4959:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4917:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4917:28:8"
																			},
																			"nativeSrc": "4917:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4917:80:8"
																		},
																		"nativeSrc": "4917:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4917:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4567:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4567:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4572:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4572:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4564:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4564:2:8"
																},
																"nativeSrc": "4564:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4564:11:8"
															},
															"nativeSrc": "4561:446:8",
															"nodeType": "YulIf",
															"src": "4561:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4471:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4526:5:8",
														"nodeType": "YulTypedName",
														"src": "4526:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4533:3:8",
														"nodeType": "YulTypedName",
														"src": "4533:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4538:10:8",
														"nodeType": "YulTypedName",
														"src": "4538:10:8",
														"type": ""
													}
												],
												"src": "4471:543:8"
											},
											{
												"body": {
													"nativeSrc": "5083:54:8",
													"nodeType": "YulBlock",
													"src": "5083:54:8",
													"statements": [
														{
															"nativeSrc": "5093:37:8",
															"nodeType": "YulAssignment",
															"src": "5093:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5118:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5118:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5124:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5124:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:8"
																},
																"nativeSrc": "5114:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5114:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5093:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5020:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5058:4:8",
														"nodeType": "YulTypedName",
														"src": "5058:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5064:5:8",
														"nodeType": "YulTypedName",
														"src": "5064:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5074:8:8",
														"nodeType": "YulTypedName",
														"src": "5074:8:8",
														"type": ""
													}
												],
												"src": "5020:117:8"
											},
											{
												"body": {
													"nativeSrc": "5194:118:8",
													"nodeType": "YulBlock",
													"src": "5194:118:8",
													"statements": [
														{
															"nativeSrc": "5204:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5204:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5253:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5253:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5256:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5256:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5249:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:8"
																				},
																				"nativeSrc": "5249:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5268:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5268:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5264:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5264:3:8"
																				},
																				"nativeSrc": "5264:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5264:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5220:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5220:28:8"
																		},
																		"nativeSrc": "5220:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:8"
																},
																"nativeSrc": "5216:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5216:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5208:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5208:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5281:25:8",
															"nodeType": "YulAssignment",
															"src": "5281:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5295:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5295:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5301:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5301:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5291:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5291:3:8"
																},
																"nativeSrc": "5291:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5291:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5143:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5171:4:8",
														"nodeType": "YulTypedName",
														"src": "5171:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5177:5:8",
														"nodeType": "YulTypedName",
														"src": "5177:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5187:6:8",
														"nodeType": "YulTypedName",
														"src": "5187:6:8",
														"type": ""
													}
												],
												"src": "5143:169:8"
											},
											{
												"body": {
													"nativeSrc": "5398:214:8",
													"nodeType": "YulBlock",
													"src": "5398:214:8",
													"statements": [
														{
															"nativeSrc": "5531:37:8",
															"nodeType": "YulAssignment",
															"src": "5531:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5558:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5558:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5564:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5564:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5539:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5539:18:8"
																},
																"nativeSrc": "5539:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5539:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5531:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:8"
																}
															]
														},
														{
															"nativeSrc": "5577:29:8",
															"nodeType": "YulAssignment",
															"src": "5577:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5588:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5588:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5598:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5598:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5601:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5601:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5594:3:8"
																		},
																		"nativeSrc": "5594:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5585:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5585:2:8"
																},
																"nativeSrc": "5585:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5585:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5577:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5317:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5379:4:8",
														"nodeType": "YulTypedName",
														"src": "5379:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5385:3:8",
														"nodeType": "YulTypedName",
														"src": "5385:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5393:4:8",
														"nodeType": "YulTypedName",
														"src": "5393:4:8",
														"type": ""
													}
												],
												"src": "5317:295:8"
											},
											{
												"body": {
													"nativeSrc": "5709:1303:8",
													"nodeType": "YulBlock",
													"src": "5709:1303:8",
													"statements": [
														{
															"nativeSrc": "5720:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5720:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5734:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5734:32:8"
																},
																"nativeSrc": "5734:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5734:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5724:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5724:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5856:22:8",
																"nodeType": "YulBlock",
																"src": "5856:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5858:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:8"
																			},
																			"nativeSrc": "5858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:8"
																		},
																		"nativeSrc": "5858:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5836:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5825:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:8"
																},
																"nativeSrc": "5825:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5825:30:8"
															},
															"nativeSrc": "5822:56:8",
															"nodeType": "YulIf",
															"src": "5822:56:8"
														},
														{
															"nativeSrc": "5888:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5888:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5934:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5934:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5928:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5928:5:8"
																		},
																		"nativeSrc": "5928:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5902:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5902:25:8"
																},
																"nativeSrc": "5902:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5902:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5892:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5892:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6033:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6033:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6039:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6039:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6047:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5987:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5987:45:8"
																},
																"nativeSrc": "5987:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5987:67:8"
															},
															"nativeSrc": "5987:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5987:67:8"
														},
														{
															"nativeSrc": "6064:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6064:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6081:1:8",
																"nodeType": "YulLiteral",
																"src": "6081:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6068:9:8",
																	"nodeType": "YulTypedName",
																	"src": "6068:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6092:17:8",
															"nodeType": "YulAssignment",
															"src": "6092:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6105:4:8",
																"nodeType": "YulLiteral",
																"src": "6105:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6092:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6092:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6156:611:8",
																		"nodeType": "YulBlock",
																		"src": "6156:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6170:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6170:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6189:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6189:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6201:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6201:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6197:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6197:3:8"
																							},
																							"nativeSrc": "6197:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6197:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6185:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6185:3:8"
																					},
																					"nativeSrc": "6185:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6185:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6174:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6174:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6221:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6221:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6267:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6267:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6235:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6235:31:8"
																					},
																					"nativeSrc": "6235:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6235:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6225:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6225:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6285:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6285:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6294:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6294:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6289:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6289:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6353:163:8",
																					"nodeType": "YulBlock",
																					"src": "6353:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6378:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6378:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6396:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6396:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6401:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6401:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6392:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6392:3:8"
																												},
																												"nativeSrc": "6392:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6392:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6386:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6386:5:8"
																										},
																										"nativeSrc": "6386:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6386:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6371:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6371:6:8"
																								},
																								"nativeSrc": "6371:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6371:42:8"
																							},
																							"nativeSrc": "6371:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6371:42:8"
																						},
																						{
																							"nativeSrc": "6430:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6430:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6444:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6444:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6452:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6452:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6440:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6440:3:8"
																								},
																								"nativeSrc": "6440:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6440:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6430:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6430:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6471:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6471:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6488:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6488:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6499:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6499:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6484:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6484:3:8"
																								},
																								"nativeSrc": "6484:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6484:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6471:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6471:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6319:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6319:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6322:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6322:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6316:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6316:2:8"
																					},
																					"nativeSrc": "6316:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6316:14:8"
																				},
																				"nativeSrc": "6308:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6331:21:8",
																					"nodeType": "YulBlock",
																					"src": "6331:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6333:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6333:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6342:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6342:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6345:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6345:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6338:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6338:3:8"
																								},
																								"nativeSrc": "6338:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6338:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6333:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6333:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6312:3:8",
																					"nodeType": "YulBlock",
																					"src": "6312:3:8",
																					"statements": []
																				},
																				"src": "6308:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6552:156:8",
																					"nodeType": "YulBlock",
																					"src": "6552:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6570:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6570:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6597:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6597:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6602:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6602:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6593:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6593:3:8"
																										},
																										"nativeSrc": "6593:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6593:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6587:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6587:5:8"
																								},
																								"nativeSrc": "6587:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6587:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6574:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6574:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6637:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6637:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6664:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6664:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6679:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6679:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6687:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6687:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6675:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6675:3:8"
																												},
																												"nativeSrc": "6675:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6675:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6645:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6645:18:8"
																										},
																										"nativeSrc": "6645:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6645:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6630:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6630:6:8"
																								},
																								"nativeSrc": "6630:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6630:64:8"
																							},
																							"nativeSrc": "6630:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6630:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6535:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6535:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6544:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6544:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6532:2:8"
																					},
																					"nativeSrc": "6532:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6532:19:8"
																				},
																				"nativeSrc": "6529:179:8",
																				"nodeType": "YulIf",
																				"src": "6529:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6728:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6728:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6742:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6742:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6750:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6750:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6738:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6738:3:8"
																									},
																									"nativeSrc": "6738:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6738:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6754:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6754:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6734:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6734:3:8"
																							},
																							"nativeSrc": "6734:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6734:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6721:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6721:6:8"
																					},
																					"nativeSrc": "6721:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6721:36:8"
																				},
																				"nativeSrc": "6721:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6721:36:8"
																			}
																		]
																	},
																	"nativeSrc": "6149:618:8",
																	"nodeType": "YulCase",
																	"src": "6149:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6784:222:8",
																		"nodeType": "YulBlock",
																		"src": "6784:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6798:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6798:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6811:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6811:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6802:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6802:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6835:67:8",
																					"nodeType": "YulBlock",
																					"src": "6835:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6853:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6853:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6872:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6872:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6877:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6877:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6868:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6868:3:8"
																										},
																										"nativeSrc": "6868:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6868:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6862:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6862:5:8"
																								},
																								"nativeSrc": "6862:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6862:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6853:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6853:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6828:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6828:6:8"
																				},
																				"nativeSrc": "6825:77:8",
																				"nodeType": "YulIf",
																				"src": "6825:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6922:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6922:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6981:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6981:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6988:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6988:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6928:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6928:52:8"
																							},
																							"nativeSrc": "6928:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6928:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6915:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6915:6:8"
																					},
																					"nativeSrc": "6915:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6915:81:8"
																				},
																				"nativeSrc": "6915:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6915:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6776:230:8",
																	"nodeType": "YulCase",
																	"src": "6776:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6129:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6129:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6137:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6126:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6126:2:8"
																},
																"nativeSrc": "6126:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6126:14:8"
															},
															"nativeSrc": "6119:887:8",
															"nodeType": "YulSwitch",
															"src": "6119:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5617:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5698:4:8",
														"nodeType": "YulTypedName",
														"src": "5698:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5704:3:8",
														"nodeType": "YulTypedName",
														"src": "5704:3:8",
														"type": ""
													}
												],
												"src": "5617:1395:8"
											},
											{
												"body": {
													"nativeSrc": "7083:53:8",
													"nodeType": "YulBlock",
													"src": "7083:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7123:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7123:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7105:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7105:17:8"
																		},
																		"nativeSrc": "7105:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:6:8"
																},
																"nativeSrc": "7093:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7093:37:8"
															},
															"nativeSrc": "7093:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7093:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7018:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7071:5:8",
														"nodeType": "YulTypedName",
														"src": "7071:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7078:3:8",
														"nodeType": "YulTypedName",
														"src": "7078:3:8",
														"type": ""
													}
												],
												"src": "7018:118:8"
											},
											{
												"body": {
													"nativeSrc": "7240:124:8",
													"nodeType": "YulBlock",
													"src": "7240:124:8",
													"statements": [
														{
															"nativeSrc": "7250:26:8",
															"nodeType": "YulAssignment",
															"src": "7250:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7262:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:8"
																},
																"nativeSrc": "7258:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7258:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7250:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7330:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7330:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7343:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7343:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7354:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7339:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7339:3:8"
																		},
																		"nativeSrc": "7339:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7286:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7286:43:8"
																},
																"nativeSrc": "7286:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7286:71:8"
															},
															"nativeSrc": "7286:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7286:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7142:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7212:9:8",
														"nodeType": "YulTypedName",
														"src": "7212:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7224:6:8",
														"nodeType": "YulTypedName",
														"src": "7224:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7235:4:8",
														"nodeType": "YulTypedName",
														"src": "7235:4:8",
														"type": ""
													}
												],
												"src": "7142:222:8"
											},
											{
												"body": {
													"nativeSrc": "7466:73:8",
													"nodeType": "YulBlock",
													"src": "7466:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7483:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7483:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7488:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7488:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7476:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:8"
																},
																"nativeSrc": "7476:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7476:19:8"
															},
															"nativeSrc": "7476:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "7476:19:8"
														},
														{
															"nativeSrc": "7504:29:8",
															"nodeType": "YulAssignment",
															"src": "7504:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7523:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7523:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7528:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7528:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7519:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7519:3:8"
																},
																"nativeSrc": "7519:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7519:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7504:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "7504:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7370:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7438:3:8",
														"nodeType": "YulTypedName",
														"src": "7438:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7443:6:8",
														"nodeType": "YulTypedName",
														"src": "7443:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7454:11:8",
														"nodeType": "YulTypedName",
														"src": "7454:11:8",
														"type": ""
													}
												],
												"src": "7370:169:8"
											},
											{
												"body": {
													"nativeSrc": "7651:68:8",
													"nodeType": "YulBlock",
													"src": "7651:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7673:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7673:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7681:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7681:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7669:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:8"
																		},
																		"nativeSrc": "7669:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792061646472657373",
																		"kind": "string",
																		"nativeSrc": "7685:26:8",
																		"nodeType": "YulLiteral",
																		"src": "7685:26:8",
																		"type": "",
																		"value": "Invalid treasury address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7662:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7662:6:8"
																},
																"nativeSrc": "7662:50:8",
																"nodeType": "YulFunctionCall",
																"src": "7662:50:8"
															},
															"nativeSrc": "7662:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "7662:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
												"nativeSrc": "7545:174:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7643:6:8",
														"nodeType": "YulTypedName",
														"src": "7643:6:8",
														"type": ""
													}
												],
												"src": "7545:174:8"
											},
											{
												"body": {
													"nativeSrc": "7871:220:8",
													"nodeType": "YulBlock",
													"src": "7871:220:8",
													"statements": [
														{
															"nativeSrc": "7881:74:8",
															"nodeType": "YulAssignment",
															"src": "7881:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7947:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7947:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7952:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7952:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7888:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7888:58:8"
																},
																"nativeSrc": "7888:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7888:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7881:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7881:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8053:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8053:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																	"nativeSrc": "7964:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7964:88:8"
																},
																"nativeSrc": "7964:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7964:93:8"
															},
															"nativeSrc": "7964:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7964:93:8"
														},
														{
															"nativeSrc": "8066:19:8",
															"nodeType": "YulAssignment",
															"src": "8066:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8077:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8077:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8082:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8082:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8073:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8073:3:8"
																},
																"nativeSrc": "8073:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8073:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8066:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8066:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7725:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7859:3:8",
														"nodeType": "YulTypedName",
														"src": "7859:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7867:3:8",
														"nodeType": "YulTypedName",
														"src": "7867:3:8",
														"type": ""
													}
												],
												"src": "7725:366:8"
											},
											{
												"body": {
													"nativeSrc": "8268:248:8",
													"nodeType": "YulBlock",
													"src": "8268:248:8",
													"statements": [
														{
															"nativeSrc": "8278:26:8",
															"nodeType": "YulAssignment",
															"src": "8278:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8290:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8290:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8301:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8301:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8286:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8286:3:8"
																},
																"nativeSrc": "8286:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8286:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8278:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8325:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8325:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8336:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8336:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8321:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8321:3:8"
																		},
																		"nativeSrc": "8321:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8321:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8344:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8344:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8350:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8350:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8340:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:8"
																		},
																		"nativeSrc": "8340:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8340:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:8"
																},
																"nativeSrc": "8314:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8314:47:8"
															},
															"nativeSrc": "8314:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8314:47:8"
														},
														{
															"nativeSrc": "8370:139:8",
															"nodeType": "YulAssignment",
															"src": "8370:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8504:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8504:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8378:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8378:124:8"
																},
																"nativeSrc": "8378:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8378:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8370:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8370:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8097:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8248:9:8",
														"nodeType": "YulTypedName",
														"src": "8248:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8263:4:8",
														"nodeType": "YulTypedName",
														"src": "8263:4:8",
														"type": ""
													}
												],
												"src": "8097:419:8"
											},
											{
												"body": {
													"nativeSrc": "8628:69:8",
													"nodeType": "YulBlock",
													"src": "8628:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8650:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8650:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8658:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8658:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:8"
																		},
																		"nativeSrc": "8646:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8646:14:8"
																	},
																	{
																		"hexValue": "456d697373696f6e2072617465206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "8662:27:8",
																		"nodeType": "YulLiteral",
																		"src": "8662:27:8",
																		"type": "",
																		"value": "Emission rate must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8639:6:8"
																},
																"nativeSrc": "8639:51:8",
																"nodeType": "YulFunctionCall",
																"src": "8639:51:8"
															},
															"nativeSrc": "8639:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "8639:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
												"nativeSrc": "8522:175:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8620:6:8",
														"nodeType": "YulTypedName",
														"src": "8620:6:8",
														"type": ""
													}
												],
												"src": "8522:175:8"
											},
											{
												"body": {
													"nativeSrc": "8849:220:8",
													"nodeType": "YulBlock",
													"src": "8849:220:8",
													"statements": [
														{
															"nativeSrc": "8859:74:8",
															"nodeType": "YulAssignment",
															"src": "8859:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8925:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8925:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8930:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8930:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8866:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8866:58:8"
																},
																"nativeSrc": "8866:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8866:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8859:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8859:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9031:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9031:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
																	"nativeSrc": "8942:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8942:88:8"
																},
																"nativeSrc": "8942:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8942:93:8"
															},
															"nativeSrc": "8942:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8942:93:8"
														},
														{
															"nativeSrc": "9044:19:8",
															"nodeType": "YulAssignment",
															"src": "9044:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9055:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9055:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9060:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9060:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9051:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9051:3:8"
																},
																"nativeSrc": "9051:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9051:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9044:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9044:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8703:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8837:3:8",
														"nodeType": "YulTypedName",
														"src": "8837:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8845:3:8",
														"nodeType": "YulTypedName",
														"src": "8845:3:8",
														"type": ""
													}
												],
												"src": "8703:366:8"
											},
											{
												"body": {
													"nativeSrc": "9246:248:8",
													"nodeType": "YulBlock",
													"src": "9246:248:8",
													"statements": [
														{
															"nativeSrc": "9256:26:8",
															"nodeType": "YulAssignment",
															"src": "9256:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9268:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9268:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9279:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9279:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9264:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9264:3:8"
																},
																"nativeSrc": "9264:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9264:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9256:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9256:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9303:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9303:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9314:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9314:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9299:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9299:3:8"
																		},
																		"nativeSrc": "9299:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9299:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9322:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9322:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9328:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9328:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9318:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9318:3:8"
																		},
																		"nativeSrc": "9318:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9318:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:8"
																},
																"nativeSrc": "9292:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9292:47:8"
															},
															"nativeSrc": "9292:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9292:47:8"
														},
														{
															"nativeSrc": "9348:139:8",
															"nodeType": "YulAssignment",
															"src": "9348:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9482:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9482:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9356:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9356:124:8"
																},
																"nativeSrc": "9356:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9356:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9348:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9348:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9075:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9226:9:8",
														"nodeType": "YulTypedName",
														"src": "9226:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9241:4:8",
														"nodeType": "YulTypedName",
														"src": "9241:4:8",
														"type": ""
													}
												],
												"src": "9075:419:8"
											},
											{
												"body": {
													"nativeSrc": "9528:152:8",
													"nodeType": "YulBlock",
													"src": "9528:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9545:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9545:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9548:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9548:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9538:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:8"
																},
																"nativeSrc": "9538:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9538:88:8"
															},
															"nativeSrc": "9538:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9538:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9642:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9642:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9645:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9645:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9635:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9635:6:8"
																},
																"nativeSrc": "9635:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9635:15:8"
															},
															"nativeSrc": "9635:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9635:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9666:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9666:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9669:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9669:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9659:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9659:6:8"
																},
																"nativeSrc": "9659:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9659:15:8"
															},
															"nativeSrc": "9659:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9659:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9500:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9500:180:8"
											},
											{
												"body": {
													"nativeSrc": "9730:147:8",
													"nodeType": "YulBlock",
													"src": "9730:147:8",
													"statements": [
														{
															"nativeSrc": "9740:25:8",
															"nodeType": "YulAssignment",
															"src": "9740:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9763:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9763:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9745:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9745:17:8"
																},
																"nativeSrc": "9745:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9745:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9740:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9740:1:8"
																}
															]
														},
														{
															"nativeSrc": "9774:25:8",
															"nodeType": "YulAssignment",
															"src": "9774:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9797:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9797:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9779:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9779:17:8"
																},
																"nativeSrc": "9779:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9779:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9774:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9774:1:8"
																}
															]
														},
														{
															"nativeSrc": "9808:16:8",
															"nodeType": "YulAssignment",
															"src": "9808:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9819:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9819:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9822:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9822:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9815:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9815:3:8"
																},
																"nativeSrc": "9815:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9815:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9808:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9808:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9848:22:8",
																"nodeType": "YulBlock",
																"src": "9848:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9850:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9850:16:8"
																			},
																			"nativeSrc": "9850:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9850:18:8"
																		},
																		"nativeSrc": "9850:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9850:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9840:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9840:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9843:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9843:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9837:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9837:2:8"
																},
																"nativeSrc": "9837:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9837:10:8"
															},
															"nativeSrc": "9834:36:8",
															"nodeType": "YulIf",
															"src": "9834:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9686:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9717:1:8",
														"nodeType": "YulTypedName",
														"src": "9717:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9720:1:8",
														"nodeType": "YulTypedName",
														"src": "9720:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9726:3:8",
														"nodeType": "YulTypedName",
														"src": "9726:3:8",
														"type": ""
													}
												],
												"src": "9686:191:8"
											},
											{
												"body": {
													"nativeSrc": "9948:53:8",
													"nodeType": "YulBlock",
													"src": "9948:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9965:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9965:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9988:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9988:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9970:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9970:17:8"
																		},
																		"nativeSrc": "9970:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9970:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9958:6:8"
																},
																"nativeSrc": "9958:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9958:37:8"
															},
															"nativeSrc": "9958:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9958:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9883:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9936:5:8",
														"nodeType": "YulTypedName",
														"src": "9936:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9943:3:8",
														"nodeType": "YulTypedName",
														"src": "9943:3:8",
														"type": ""
													}
												],
												"src": "9883:118:8"
											},
											{
												"body": {
													"nativeSrc": "10161:288:8",
													"nodeType": "YulBlock",
													"src": "10161:288:8",
													"statements": [
														{
															"nativeSrc": "10171:26:8",
															"nodeType": "YulAssignment",
															"src": "10171:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10183:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10183:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10194:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10194:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10179:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10179:3:8"
																},
																"nativeSrc": "10179:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10179:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10171:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10171:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10251:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10251:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10275:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10275:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:8"
																		},
																		"nativeSrc": "10260:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10207:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10207:43:8"
																},
																"nativeSrc": "10207:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10207:71:8"
															},
															"nativeSrc": "10207:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10207:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10332:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10332:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10345:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10345:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10356:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10356:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10341:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10341:3:8"
																		},
																		"nativeSrc": "10341:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10341:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10288:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10288:43:8"
																},
																"nativeSrc": "10288:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10288:72:8"
															},
															"nativeSrc": "10288:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10288:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10414:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10414:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10427:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10427:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10438:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10438:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10423:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10423:3:8"
																		},
																		"nativeSrc": "10423:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10423:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10370:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10370:43:8"
																},
																"nativeSrc": "10370:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10370:72:8"
															},
															"nativeSrc": "10370:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10370:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10007:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10117:9:8",
														"nodeType": "YulTypedName",
														"src": "10117:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10129:6:8",
														"nodeType": "YulTypedName",
														"src": "10129:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10137:6:8",
														"nodeType": "YulTypedName",
														"src": "10137:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10145:6:8",
														"nodeType": "YulTypedName",
														"src": "10145:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10156:4:8",
														"nodeType": "YulTypedName",
														"src": "10156:4:8",
														"type": ""
													}
												],
												"src": "10007:442:8"
											},
											{
												"body": {
													"nativeSrc": "10553:124:8",
													"nodeType": "YulBlock",
													"src": "10553:124:8",
													"statements": [
														{
															"nativeSrc": "10563:26:8",
															"nodeType": "YulAssignment",
															"src": "10563:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10575:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10575:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10586:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10586:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10571:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10571:3:8"
																},
																"nativeSrc": "10571:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10571:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10563:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10563:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10643:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10643:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10656:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10656:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10667:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10667:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:8"
																		},
																		"nativeSrc": "10652:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10652:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10599:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10599:43:8"
																},
																"nativeSrc": "10599:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10599:71:8"
															},
															"nativeSrc": "10599:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10599:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10455:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10525:9:8",
														"nodeType": "YulTypedName",
														"src": "10525:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10537:6:8",
														"nodeType": "YulTypedName",
														"src": "10537:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10548:4:8",
														"nodeType": "YulTypedName",
														"src": "10548:4:8",
														"type": ""
													}
												],
												"src": "10455:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Emission rate must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516123b13803806123b183398181016040528101906100319190610650565b336040518060400160405280600d81526020017f456d697373696f6e546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f454d54000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906108d4565b5080600490816100bd91906108d4565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906109b2565b60405180910390fd5b61013f8161025e60201b60201c565b5060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad90610a25565b60405180910390fd5b5f82116101f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ef90610a8d565b60405180910390fd5b610208338461032160201b60201c565b816007819055508060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600881905550505050610b68565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610391575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161038891906109b2565b60405180910390fd5b6103a25f83836103a660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f6578060025f8282546103ea9190610ad8565b925050819055506104c4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561047f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161047693929190610b1a565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050b578060025f8282540392505081905550610555565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105b29190610b4f565b60405180910390a3505050565b5f5ffd5b5f819050919050565b6105d5816105c3565b81146105df575f5ffd5b50565b5f815190506105f0816105cc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61061f826105f6565b9050919050565b61062f81610615565b8114610639575f5ffd5b50565b5f8151905061064a81610626565b92915050565b5f5f5f60608486031215610667576106666105bf565b5b5f610674868287016105e2565b9350506020610685868287016105e2565b92505060406106968682870161063c565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061071b57607f821691505b60208210810361072e5761072d6106d7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610755565b61079a8683610755565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107d56107d06107cb846105c3565b6107b2565b6105c3565b9050919050565b5f819050919050565b6107ee836107bb565b6108026107fa826107dc565b848454610761565b825550505050565b5f5f905090565b61081961080a565b6108248184846107e5565b505050565b5b818110156108475761083c5f82610811565b60018101905061082a565b5050565b601f82111561088c5761085d81610734565b61086684610746565b81016020851015610875578190505b61088961088185610746565b830182610829565b50505b505050565b5f82821c905092915050565b5f6108ac5f1984600802610891565b1980831691505092915050565b5f6108c4838361089d565b9150826002028217905092915050565b6108dd826106a0565b67ffffffffffffffff8111156108f6576108f56106aa565b5b6109008254610704565b61090b82828561084b565b5f60209050601f83116001811461093c575f841561092a578287015190505b61093485826108b9565b86555061099b565b601f19841661094a86610734565b5f5b828110156109715784890151825560018201915060208501945060208101905061094c565b8683101561098e578489015161098a601f89168261089d565b8355505b6001600288020188555050505b505050505050565b6109ac81610615565b82525050565b5f6020820190506109c55f8301846109a3565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207472656173757279206164647265737300000000000000005f82015250565b5f610a0f6018836109cb565b9150610a1a826109db565b602082019050919050565b5f6020820190508181035f830152610a3c81610a03565b9050919050565b7f456d697373696f6e2072617465206d757374206265203e2030000000000000005f82015250565b5f610a776019836109cb565b9150610a8282610a43565b602082019050919050565b5f6020820190508181035f830152610aa481610a6b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ae2826105c3565b9150610aed836105c3565b9250828201905080821115610b0557610b04610aab565b5b92915050565b610b14816105c3565b82525050565b5f606082019050610b2d5f8301866109a3565b610b3a6020830185610b0b565b610b476040830184610b0b565b949350505050565b5f602082019050610b625f830184610b0b565b92915050565b61183c80610b755f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806370a08231116100a057806395d89b411161006f57806395d89b41146102a857806396afc450146102c6578063a9059cbb146102e4578063dd62ed3e14610314578063f2fde38b1461034457610114565b806370a0823114610234578063715018a6146102645780637f51bb1f1461026e5780638da5cb5b1461028a57610114565b806323b872dd116100e757806323b872dd146101a0578063284e1333146101d0578063313ce567146101da578063439af45e146101f857806361d027b31461021657610114565b806306fdde0314610118578063095ea7b3146101365780630ba84cd21461016657806318160ddd14610182575b5f5ffd5b610120610360565b60405161012d919061118a565b60405180910390f35b610150600480360381019061014b919061123b565b6103f0565b60405161015d9190611293565b60405180910390f35b610180600480360381019061017b91906112ac565b610412565b005b61018a61049d565b60405161019791906112e6565b60405180910390f35b6101ba60048036038101906101b591906112ff565b6104a6565b6040516101c79190611293565b60405180910390f35b6101d86104d4565b005b6101e2610613565b6040516101ef919061136a565b60405180910390f35b61020061061b565b60405161020d91906112e6565b60405180910390f35b61021e610621565b60405161022b9190611392565b60405180910390f35b61024e600480360381019061024991906113ab565b610646565b60405161025b91906112e6565b60405180910390f35b61026c61068b565b005b610288600480360381019061028391906113ab565b61069e565b005b61029261078e565b60405161029f9190611392565b60405180910390f35b6102b06107b6565b6040516102bd919061118a565b60405180910390f35b6102ce610846565b6040516102db91906112e6565b60405180910390f35b6102fe60048036038101906102f9919061123b565b61084c565b60405161030b9190611293565b60405180910390f35b61032e600480360381019061032991906113d6565b61086e565b60405161033b91906112e6565b60405180910390f35b61035e600480360381019061035991906113ab565b6108f0565b005b60606003805461036f90611441565b80601f016020809104026020016040519081016040528092919081815260200182805461039b90611441565b80156103e65780601f106103bd576101008083540402835291602001916103e6565b820191905f5260205f20905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b5f5f6103fa610974565b905061040781858561097b565b600191505092915050565b61041a61098d565b5f811161045c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610453906114bb565b60405180910390fd5b806007819055507fffcc630bf88a67ba7c8b27440787c31777ae923aee1e9bbd0127feea56da2cd08160405161049291906112e6565b60405180910390a150565b5f600254905090565b5f5f6104b0610974565b90506104bd858285610a14565b6104c8858585610aa7565b60019150509392505050565b6104dc610b97565b5f4290506008548111610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611523565b60405180910390fd5b5f60085482610533919061156e565b90505f670de0b6b3a76400008260075461054d91906115a1565b610557919061160f565b90505f811161059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290611689565b60405180910390fd5b826008819055506105cd60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610be6565b7fef80c279c178dd63cdaf5061224be86ee325c4f4406d802d043ed33b45b2f68f81846040516105fe9291906116a7565b60405180910390a1505050610611610c65565b565b5f6012905090565b60085481565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61069361098d565b61069c5f610c6f565b565b6106a661098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611718565b60405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1816040516107839190611392565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107c590611441565b80601f01602080910402602001604051908101604052809291908181526020018280546107f190611441565b801561083c5780601f106108135761010080835404028352916020019161083c565b820191905f5260205f20905b81548152906001019060200180831161081f57829003601f168201915b5050505050905090565b60075481565b5f5f610856610974565b9050610863818585610aa7565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108f861098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610968575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161095f9190611392565b60405180910390fd5b61097181610c6f565b50565b5f33905090565b6109888383836001610d32565b505050565b610995610974565b73ffffffffffffffffffffffffffffffffffffffff166109b361078e565b73ffffffffffffffffffffffffffffffffffffffff1614610a12576109d6610974565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a099190611392565b60405180910390fd5b565b5f610a1f848461086e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aa15781811015610a92578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a8993929190611736565b60405180910390fd5b610aa084848484035f610d32565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0e9190611392565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b7e9190611392565b60405180910390fd5b610b92838383610f01565b505050565b600260065403610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd3906117b5565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c56575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c4d9190611392565b60405180910390fd5b610c615f8383610f01565b5050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610da2575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d999190611392565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e12575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e099190611392565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610efb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ef291906112e6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f51578060025f828254610f4591906117d3565b9250508190555061101f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fda578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fd193929190611736565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611066578060025f82825403925050819055506110b0565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161110d91906112e6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61115c8261111a565b6111668185611124565b9350611176818560208601611134565b61117f81611142565b840191505092915050565b5f6020820190508181035f8301526111a28184611152565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111d7826111ae565b9050919050565b6111e7816111cd565b81146111f1575f5ffd5b50565b5f81359050611202816111de565b92915050565b5f819050919050565b61121a81611208565b8114611224575f5ffd5b50565b5f8135905061123581611211565b92915050565b5f5f60408385031215611251576112506111aa565b5b5f61125e858286016111f4565b925050602061126f85828601611227565b9150509250929050565b5f8115159050919050565b61128d81611279565b82525050565b5f6020820190506112a65f830184611284565b92915050565b5f602082840312156112c1576112c06111aa565b5b5f6112ce84828501611227565b91505092915050565b6112e081611208565b82525050565b5f6020820190506112f95f8301846112d7565b92915050565b5f5f5f60608486031215611316576113156111aa565b5b5f611323868287016111f4565b9350506020611334868287016111f4565b925050604061134586828701611227565b9150509250925092565b5f60ff82169050919050565b6113648161134f565b82525050565b5f60208201905061137d5f83018461135b565b92915050565b61138c816111cd565b82525050565b5f6020820190506113a55f830184611383565b92915050565b5f602082840312156113c0576113bf6111aa565b5b5f6113cd848285016111f4565b91505092915050565b5f5f604083850312156113ec576113eb6111aa565b5b5f6113f9858286016111f4565b925050602061140a858286016111f4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145857607f821691505b60208210810361146b5761146a611414565b5b50919050565b7f456d697373696f6e2072617465206d757374206265203e2030000000000000005f82015250565b5f6114a5601983611124565b91506114b082611471565b602082019050919050565b5f6020820190508181035f8301526114d281611499565b9050919050565b7f4e6f2074696d6520656c617073656400000000000000000000000000000000005f82015250565b5f61150d600f83611124565b9150611518826114d9565b602082019050919050565b5f6020820190508181035f83015261153a81611501565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61157882611208565b915061158383611208565b925082820390508181111561159b5761159a611541565b5b92915050565b5f6115ab82611208565b91506115b683611208565b92508282026115c481611208565b915082820484148315176115db576115da611541565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61161982611208565b915061162483611208565b925082611634576116336115e2565b5b828204905092915050565b7f4e6f20746f6b656e7320746f206d696e740000000000000000000000000000005f82015250565b5f611673601183611124565b915061167e8261163f565b602082019050919050565b5f6020820190508181035f8301526116a081611667565b9050919050565b5f6040820190506116ba5f8301856112d7565b6116c760208301846112d7565b9392505050565b7f496e76616c6964207472656173757279206164647265737300000000000000005f82015250565b5f611702601883611124565b915061170d826116ce565b602082019050919050565b5f6020820190508181035f83015261172f816116f6565b9050919050565b5f6060820190506117495f830186611383565b61175660208301856112d7565b61176360408301846112d7565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61179f601f83611124565b91506117aa8261176b565b602082019050919050565b5f6020820190508181035f8301526117cc81611793565b9050919050565b5f6117dd82611208565b91506117e883611208565b9250828201905080821115611800576117ff611541565b5b9291505056fea2646970667358221220a5b5b7507d9db598f8c195cfc3242ba6017e213e9dc2ea94327fbb994c94f54e64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23B1 CODESIZE SUB DUP1 PUSH2 0x23B1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x456D697373696F6E546F6B656E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x454D540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x8D4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x8D4 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x25E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD SWAP1 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x208 CALLER DUP5 PUSH2 0x321 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0xB68 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x391 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH0 DUP4 DUP4 PUSH2 0x3A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4C4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x47F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x50B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x555 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F0 DUP2 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x61F DUP3 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62F DUP2 PUSH2 0x615 JUMP JUMPDEST DUP2 EQ PUSH2 0x639 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x64A DUP2 PUSH2 0x626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x667 JUMPI PUSH2 0x666 PUSH2 0x5BF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x674 DUP7 DUP3 DUP8 ADD PUSH2 0x5E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x685 DUP7 DUP3 DUP8 ADD PUSH2 0x5E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x696 DUP7 DUP3 DUP8 ADD PUSH2 0x63C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x71B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x72E JUMPI PUSH2 0x72D PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x790 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x755 JUMP JUMPDEST PUSH2 0x79A DUP7 DUP4 PUSH2 0x755 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7D5 PUSH2 0x7D0 PUSH2 0x7CB DUP5 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EE DUP4 PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x802 PUSH2 0x7FA DUP3 PUSH2 0x7DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x761 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x819 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x824 DUP2 DUP5 DUP5 PUSH2 0x7E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x847 JUMPI PUSH2 0x83C PUSH0 DUP3 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x82A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x88C JUMPI PUSH2 0x85D DUP2 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x866 DUP5 PUSH2 0x746 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x875 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x889 PUSH2 0x881 DUP6 PUSH2 0x746 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x829 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8AC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x891 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8C4 DUP4 DUP4 PUSH2 0x89D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DD DUP3 PUSH2 0x6A0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8F6 JUMPI PUSH2 0x8F5 PUSH2 0x6AA JUMP JUMPDEST JUMPDEST PUSH2 0x900 DUP3 SLOAD PUSH2 0x704 JUMP JUMPDEST PUSH2 0x90B DUP3 DUP3 DUP6 PUSH2 0x84B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x93C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x92A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x934 DUP6 DUP3 PUSH2 0x8B9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x99B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x94A DUP7 PUSH2 0x734 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x94C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x98E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x98A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x89D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x9A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA0F PUSH1 0x18 DUP4 PUSH2 0x9CB JUMP JUMPDEST SWAP2 POP PUSH2 0xA1A DUP3 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA3C DUP2 PUSH2 0xA03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D697373696F6E2072617465206D757374206265203E203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA77 PUSH1 0x19 DUP4 PUSH2 0x9CB JUMP JUMPDEST SWAP2 POP PUSH2 0xA82 DUP3 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAA4 DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAE2 DUP3 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP PUSH2 0xAED DUP4 PUSH2 0x5C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0xAAB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB2D PUSH0 DUP4 ADD DUP7 PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0xB3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0xB47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB0B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB62 PUSH0 DUP4 ADD DUP5 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183C DUP1 PUSH2 0xB75 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x344 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x284E1333 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x439AF45E EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x216 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xBA84CD2 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x4D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3FA PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x407 DUP2 DUP6 DUP6 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41A PUSH2 0x98D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xFFCC630BF88A67BA7C8B27440787C31777AE923AEE1E9BBD0127FEEA56DA2CD0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4B0 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BD DUP6 DUP3 DUP6 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x4C8 DUP6 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4DC PUSH2 0xB97 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x7 SLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP1 PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x5CD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0xBE6 JUMP JUMPDEST PUSH32 0xEF80C279C178DD63CDAF5061224BE86EE325C4F4406D802D043ED33B45B2F68F DUP2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP3 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x611 PUSH2 0xC65 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x693 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x69C PUSH0 PUSH2 0xC6F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6A6 PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7C5 SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F1 SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x813 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x856 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x863 DUP2 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F8 PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x968 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 DUP2 PUSH2 0xC6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x988 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x995 PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B3 PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA12 JUMPI PUSH2 0x9D6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA1F DUP5 DUP5 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA92 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD32 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH2 0xF01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD3 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC56 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC61 PUSH0 DUP4 DUP4 PUSH2 0xF01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEFB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF51 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x101F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFDA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1066 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10B0 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x115C DUP3 PUSH2 0x111A JUMP JUMPDEST PUSH2 0x1166 DUP2 DUP6 PUSH2 0x1124 JUMP JUMPDEST SWAP4 POP PUSH2 0x1176 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1134 JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x1142 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A2 DUP2 DUP5 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D7 DUP3 PUSH2 0x11AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E7 DUP2 PUSH2 0x11CD JUMP JUMPDEST DUP2 EQ PUSH2 0x11F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1202 DUP2 PUSH2 0x11DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121A DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP2 EQ PUSH2 0x1224 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1235 DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1251 JUMPI PUSH2 0x1250 PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125E DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x126F DUP6 DUP3 DUP7 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128D DUP2 PUSH2 0x1279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH2 0x12C0 PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CE DUP5 DUP3 DUP6 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E0 DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x12D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1315 PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1323 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1334 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1364 DUP2 PUSH2 0x134F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137D PUSH0 DUP4 ADD DUP5 PUSH2 0x135B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x138C DUP2 PUSH2 0x11CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C0 JUMPI PUSH2 0x13BF PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CD DUP5 DUP3 DUP6 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH2 0x13EB PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F9 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x140A DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1458 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x1414 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D697373696F6E2072617465206D757374206265203E203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A5 PUSH1 0x19 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B0 DUP3 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D2 DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2074696D6520656C61707365640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x150D PUSH1 0xF DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x1518 DUP3 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 PUSH2 0x1501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1578 DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x1583 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x159B JUMPI PUSH2 0x159A PUSH2 0x1541 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AB DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B6 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x15C4 DUP2 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x1541 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1619 DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x1624 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1634 JUMPI PUSH2 0x1633 PUSH2 0x15E2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F206D696E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1673 PUSH1 0x11 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x167E DUP3 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A0 DUP2 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP6 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x16C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1702 PUSH1 0x18 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x170D DUP3 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x172F DUP2 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1749 PUSH0 DUP4 ADD DUP7 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x1756 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x1763 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179F PUSH1 0x1F DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AA DUP3 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17CC DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17DD DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E8 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17FF PUSH2 0x1541 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xB5 0xB7 POP PUSH30 0x9DB598F8C195CFC3242BA6017E213E9DC2EA94327FBB994C94F54E64736F PUSH13 0x634300081D0033000000000000 ",
							"sourceMap": "551:3313:7:-:0;;;1855:472;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2006:10;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;2057:1:7::2;2036:23;;:9;:23;;::::0;2028:60:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2128:1;2106:19;:23;2098:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2170:32;2176:10;2188:13;2170:5;;;:32;;:::i;:::-;2227:19;2212:12;:34;;;;2267:9;2256:8;;:20;;;;;;;;;;;;;;;;;;2305:15;2286:16;:34;;;;1855:472:::0;;;551:3313;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:99::-;1926:6;1960:5;1954:12;1944:22;;1874:99;;;:::o;1979:180::-;2027:77;2024:1;2017:88;2124:4;2121:1;2114:15;2148:4;2145:1;2138:15;2165:180;2213:77;2210:1;2203:88;2310:4;2307:1;2300:15;2334:4;2331:1;2324:15;2351:320;2395:6;2432:1;2426:4;2422:12;2412:22;;2479:1;2473:4;2469:12;2500:18;2490:81;;2556:4;2548:6;2544:17;2534:27;;2490:81;2618:2;2610:6;2607:14;2587:18;2584:38;2581:84;;2637:18;;:::i;:::-;2581:84;2402:269;2351:320;;;:::o;2677:141::-;2726:4;2749:3;2741:11;;2772:3;2769:1;2762:14;2806:4;2803:1;2793:18;2785:26;;2677:141;;;:::o;2824:93::-;2861:6;2908:2;2903;2896:5;2892:14;2888:23;2878:33;;2824:93;;;:::o;2923:107::-;2967:8;3017:5;3011:4;3007:16;2986:37;;2923:107;;;;:::o;3036:393::-;3105:6;3155:1;3143:10;3139:18;3178:97;3208:66;3197:9;3178:97;:::i;:::-;3296:39;3326:8;3315:9;3296:39;:::i;:::-;3284:51;;3368:4;3364:9;3357:5;3353:21;3344:30;;3417:4;3407:8;3403:19;3396:5;3393:30;3383:40;;3112:317;;3036:393;;;;;:::o;3435:60::-;3463:3;3484:5;3477:12;;3435:60;;;:::o;3501:142::-;3551:9;3584:53;3602:34;3611:24;3629:5;3611:24;:::i;:::-;3602:34;:::i;:::-;3584:53;:::i;:::-;3571:66;;3501:142;;;:::o;3649:75::-;3692:3;3713:5;3706:12;;3649:75;;;:::o;3730:269::-;3840:39;3871:7;3840:39;:::i;:::-;3901:91;3950:41;3974:16;3950:41;:::i;:::-;3942:6;3935:4;3929:11;3901:91;:::i;:::-;3895:4;3888:105;3806:193;3730:269;;;:::o;4005:73::-;4050:3;4071:1;4064:8;;4005:73;:::o;4084:189::-;4161:32;;:::i;:::-;4202:65;4260:6;4252;4246:4;4202:65;:::i;:::-;4137:136;4084:189;;:::o;4279:186::-;4339:120;4356:3;4349:5;4346:14;4339:120;;;4410:39;4447:1;4440:5;4410:39;:::i;:::-;4383:1;4376:5;4372:13;4363:22;;4339:120;;;4279:186;;:::o;4471:543::-;4572:2;4567:3;4564:11;4561:446;;;4606:38;4638:5;4606:38;:::i;:::-;4690:29;4708:10;4690:29;:::i;:::-;4680:8;4676:44;4873:2;4861:10;4858:18;4855:49;;;4894:8;4879:23;;4855:49;4917:80;4973:22;4991:3;4973:22;:::i;:::-;4963:8;4959:37;4946:11;4917:80;:::i;:::-;4576:431;;4561:446;4471:543;;;:::o;5020:117::-;5074:8;5124:5;5118:4;5114:16;5093:37;;5020:117;;;;:::o;5143:169::-;5187:6;5220:51;5268:1;5264:6;5256:5;5253:1;5249:13;5220:51;:::i;:::-;5216:56;5301:4;5295;5291:15;5281:25;;5194:118;5143:169;;;;:::o;5317:295::-;5393:4;5539:29;5564:3;5558:4;5539:29;:::i;:::-;5531:37;;5601:3;5598:1;5594:11;5588:4;5585:21;5577:29;;5317:295;;;;:::o;5617:1395::-;5734:37;5767:3;5734:37;:::i;:::-;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5902:38;5934:4;5928:11;5902:38;:::i;:::-;5987:67;6047:6;6039;6033:4;5987:67;:::i;:::-;6081:1;6105:4;6092:17;;6137:2;6129:6;6126:14;6154:1;6149:618;;;;6811:1;6828:6;6825:77;;;6877:9;6872:3;6868:19;6862:26;6853:35;;6825:77;6928:67;6988:6;6981:5;6928:67;:::i;:::-;6922:4;6915:81;6784:222;6119:887;;6149:618;6201:4;6197:9;6189:6;6185:22;6235:37;6267:4;6235:37;:::i;:::-;6294:1;6308:208;6322:7;6319:1;6316:14;6308:208;;;6401:9;6396:3;6392:19;6386:26;6378:6;6371:42;6452:1;6444:6;6440:14;6430:24;;6499:2;6488:9;6484:18;6471:31;;6345:4;6342:1;6338:12;6333:17;;6308:208;;;6544:6;6535:7;6532:19;6529:179;;;6602:9;6597:3;6593:19;6587:26;6645:48;6687:4;6679:6;6675:17;6664:9;6645:48;:::i;:::-;6637:6;6630:64;6552:156;6529:179;6754:1;6750;6742:6;6738:14;6734:22;6728:4;6721:36;6156:611;;;6119:887;;5709:1303;;;5617:1395;;:::o;7018:118::-;7105:24;7123:5;7105:24;:::i;:::-;7100:3;7093:37;7018:118;;:::o;7142:222::-;7235:4;7273:2;7262:9;7258:18;7250:26;;7286:71;7354:1;7343:9;7339:17;7330:6;7286:71;:::i;:::-;7142:222;;;;:::o;7370:169::-;7454:11;7488:6;7483:3;7476:19;7528:4;7523:3;7519:14;7504:29;;7370:169;;;;:::o;7545:174::-;7685:26;7681:1;7673:6;7669:14;7662:50;7545:174;:::o;7725:366::-;7867:3;7888:67;7952:2;7947:3;7888:67;:::i;:::-;7881:74;;7964:93;8053:3;7964:93;:::i;:::-;8082:2;8077:3;8073:12;8066:19;;7725:366;;;:::o;8097:419::-;8263:4;8301:2;8290:9;8286:18;8278:26;;8350:9;8344:4;8340:20;8336:1;8325:9;8321:17;8314:47;8378:131;8504:4;8378:131;:::i;:::-;8370:139;;8097:419;;;:::o;8522:175::-;8662:27;8658:1;8650:6;8646:14;8639:51;8522:175;:::o;8703:366::-;8845:3;8866:67;8930:2;8925:3;8866:67;:::i;:::-;8859:74;;8942:93;9031:3;8942:93;:::i;:::-;9060:2;9055:3;9051:12;9044:19;;8703:366;;;:::o;9075:419::-;9241:4;9279:2;9268:9;9264:18;9256:26;;9328:9;9322:4;9318:20;9314:1;9303:9;9299:17;9292:47;9356:131;9482:4;9356:131;:::i;:::-;9348:139;;9075:419;;;:::o;9500:180::-;9548:77;9545:1;9538:88;9645:4;9642:1;9635:15;9669:4;9666:1;9659:15;9686:191;9726:3;9745:20;9763:1;9745:20;:::i;:::-;9740:25;;9779:20;9797:1;9779:20;:::i;:::-;9774:25;;9822:1;9819;9815:9;9808:16;;9843:3;9840:1;9837:10;9834:36;;;9850:18;;:::i;:::-;9834:36;9686:191;;;;:::o;9883:118::-;9970:24;9988:5;9970:24;:::i;:::-;9965:3;9958:37;9883:118;;:::o;10007:442::-;10156:4;10194:2;10183:9;10179:18;10171:26;;10207:71;10275:1;10264:9;10260:17;10251:6;10207:71;:::i;:::-;10288:72;10356:2;10345:9;10341:18;10332:6;10288:72;:::i;:::-;10370;10438:2;10427:9;10423:18;10414:6;10370:72;:::i;:::-;10007:442;;;;;;:::o;10455:222::-;10548:4;10586:2;10575:9;10571:18;10563:26;;10599:71;10667:1;10656:9;10652:17;10643:6;10599:71;:::i;:::-;10455:222;;;;:::o;551:3313:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_755": {
									"entryPoint": 2427,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 3378,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2445,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 3046,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 2420,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 3173,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 2967,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 2580,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3183,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 2727,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 3841,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 2158,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1008,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 1606,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_428": {
									"entryPoint": 1555,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emissionRate_1013": {
									"entryPoint": 2118,
									"id": 1013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastEmissionTime_1016": {
									"entryPoint": 1563,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintEmission_1146": {
									"entryPoint": 1236,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 864,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1934,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1675,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 1974,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 1181,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 1190,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2288,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 2124,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_1019": {
									"entryPoint": 1569,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateEmissionRate_1170": {
									"entryPoint": 1042,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTreasury_1197": {
									"entryPoint": 1694,
									"id": 1197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f": {
									"entryPoint": 5838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13796:8",
										"nodeType": "YulBlock",
										"src": "0:13796:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3405:263:8",
													"nodeType": "YulBlock",
													"src": "3405:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:8",
																"nodeType": "YulBlock",
																"src": "3451:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:8"
																			},
																			"nativeSrc": "3453:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:8"
																		},
																		"nativeSrc": "3453:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:8"
																		},
																		"nativeSrc": "3422:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:8"
																},
																"nativeSrc": "3418:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:8"
															},
															"nativeSrc": "3415:119:8",
															"nodeType": "YulIf",
															"src": "3415:119:8"
														},
														{
															"nativeSrc": "3544:117:8",
															"nodeType": "YulBlock",
															"src": "3544:117:8",
															"statements": [
																{
																	"nativeSrc": "3559:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:8"
																				},
																				"nativeSrc": "3619:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3598:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:8"
																		},
																		"nativeSrc": "3598:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3339:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:8",
														"nodeType": "YulTypedName",
														"src": "3375:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:8",
														"nodeType": "YulTypedName",
														"src": "3386:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:8",
														"nodeType": "YulTypedName",
														"src": "3398:6:8",
														"type": ""
													}
												],
												"src": "3339:329:8"
											},
											{
												"body": {
													"nativeSrc": "3739:53:8",
													"nodeType": "YulBlock",
													"src": "3739:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:8"
																		},
																		"nativeSrc": "3761:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:8"
																},
																"nativeSrc": "3749:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:8"
															},
															"nativeSrc": "3749:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:8",
														"nodeType": "YulTypedName",
														"src": "3727:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:8",
														"nodeType": "YulTypedName",
														"src": "3734:3:8",
														"type": ""
													}
												],
												"src": "3674:118:8"
											},
											{
												"body": {
													"nativeSrc": "3896:124:8",
													"nodeType": "YulBlock",
													"src": "3896:124:8",
													"statements": [
														{
															"nativeSrc": "3906:26:8",
															"nodeType": "YulAssignment",
															"src": "3906:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:8"
																},
																"nativeSrc": "3914:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:8"
																		},
																		"nativeSrc": "3995:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:8"
																},
																"nativeSrc": "3942:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:8"
															},
															"nativeSrc": "3942:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:8",
														"nodeType": "YulTypedName",
														"src": "3868:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:8",
														"nodeType": "YulTypedName",
														"src": "3880:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:8",
														"nodeType": "YulTypedName",
														"src": "3891:4:8",
														"type": ""
													}
												],
												"src": "3798:222:8"
											},
											{
												"body": {
													"nativeSrc": "4126:519:8",
													"nodeType": "YulBlock",
													"src": "4126:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:8",
																"nodeType": "YulBlock",
																"src": "4172:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:8"
																			},
																			"nativeSrc": "4174:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:8"
																		},
																		"nativeSrc": "4174:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:8"
																		},
																		"nativeSrc": "4143:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:8"
																},
																"nativeSrc": "4139:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:8"
															},
															"nativeSrc": "4136:119:8",
															"nodeType": "YulIf",
															"src": "4136:119:8"
														},
														{
															"nativeSrc": "4265:117:8",
															"nodeType": "YulBlock",
															"src": "4265:117:8",
															"statements": [
																{
																	"nativeSrc": "4280:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:8"
																				},
																				"nativeSrc": "4340:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:8"
																		},
																		"nativeSrc": "4319:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:8",
															"nodeType": "YulBlock",
															"src": "4392:118:8",
															"statements": [
																{
																	"nativeSrc": "4407:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:8"
																				},
																				"nativeSrc": "4468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:8"
																		},
																		"nativeSrc": "4447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:8",
															"nodeType": "YulBlock",
															"src": "4520:118:8",
															"statements": [
																{
																	"nativeSrc": "4535:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:8"
																				},
																				"nativeSrc": "4596:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:8"
																		},
																		"nativeSrc": "4575:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:8",
														"nodeType": "YulTypedName",
														"src": "4080:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:8",
														"nodeType": "YulTypedName",
														"src": "4091:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:8",
														"nodeType": "YulTypedName",
														"src": "4103:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:8",
														"nodeType": "YulTypedName",
														"src": "4111:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:8",
														"nodeType": "YulTypedName",
														"src": "4119:6:8",
														"type": ""
													}
												],
												"src": "4026:619:8"
											},
											{
												"body": {
													"nativeSrc": "4694:43:8",
													"nodeType": "YulBlock",
													"src": "4694:43:8",
													"statements": [
														{
															"nativeSrc": "4704:27:8",
															"nodeType": "YulAssignment",
															"src": "4704:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:8"
																},
																"nativeSrc": "4715:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:8",
														"nodeType": "YulTypedName",
														"src": "4676:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:8",
														"nodeType": "YulTypedName",
														"src": "4686:7:8",
														"type": ""
													}
												],
												"src": "4651:86:8"
											},
											{
												"body": {
													"nativeSrc": "4804:51:8",
													"nodeType": "YulBlock",
													"src": "4804:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:8"
																		},
																		"nativeSrc": "4826:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:8"
																},
																"nativeSrc": "4814:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:8"
															},
															"nativeSrc": "4814:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:8",
														"nodeType": "YulTypedName",
														"src": "4792:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:8",
														"nodeType": "YulTypedName",
														"src": "4799:3:8",
														"type": ""
													}
												],
												"src": "4743:112:8"
											},
											{
												"body": {
													"nativeSrc": "4955:120:8",
													"nodeType": "YulBlock",
													"src": "4955:120:8",
													"statements": [
														{
															"nativeSrc": "4965:26:8",
															"nodeType": "YulAssignment",
															"src": "4965:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:8"
																},
																"nativeSrc": "4973:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:8"
																		},
																		"nativeSrc": "5050:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:8"
																},
																"nativeSrc": "5001:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:8"
															},
															"nativeSrc": "5001:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:8",
														"nodeType": "YulTypedName",
														"src": "4927:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:8",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:8",
														"nodeType": "YulTypedName",
														"src": "4950:4:8",
														"type": ""
													}
												],
												"src": "4861:214:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5499:263:8",
													"nodeType": "YulBlock",
													"src": "5499:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:8",
																"nodeType": "YulBlock",
																"src": "5545:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:8"
																			},
																			"nativeSrc": "5547:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:8"
																		},
																		"nativeSrc": "5547:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:8"
																		},
																		"nativeSrc": "5516:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:8"
																},
																"nativeSrc": "5512:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:8"
															},
															"nativeSrc": "5509:119:8",
															"nodeType": "YulIf",
															"src": "5509:119:8"
														},
														{
															"nativeSrc": "5638:117:8",
															"nodeType": "YulBlock",
															"src": "5638:117:8",
															"statements": [
																{
																	"nativeSrc": "5653:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:8"
																				},
																				"nativeSrc": "5713:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:8"
																		},
																		"nativeSrc": "5692:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5433:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:8",
														"nodeType": "YulTypedName",
														"src": "5469:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:8",
														"nodeType": "YulTypedName",
														"src": "5480:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:8",
														"nodeType": "YulTypedName",
														"src": "5492:6:8",
														"type": ""
													}
												],
												"src": "5433:329:8"
											},
											{
												"body": {
													"nativeSrc": "5851:391:8",
													"nodeType": "YulBlock",
													"src": "5851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:8",
																"nodeType": "YulBlock",
																"src": "5897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:8"
																			},
																			"nativeSrc": "5899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:8"
																		},
																		"nativeSrc": "5899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:8"
																		},
																		"nativeSrc": "5868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:8"
																},
																"nativeSrc": "5864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nativeSrc": "5861:119:8",
															"nodeType": "YulIf",
															"src": "5861:119:8"
														},
														{
															"nativeSrc": "5990:117:8",
															"nodeType": "YulBlock",
															"src": "5990:117:8",
															"statements": [
																{
																	"nativeSrc": "6005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:8"
																				},
																				"nativeSrc": "6065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:8"
																		},
																		"nativeSrc": "6044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:8",
															"nodeType": "YulBlock",
															"src": "6117:118:8",
															"statements": [
																{
																	"nativeSrc": "6132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:8",
														"nodeType": "YulTypedName",
														"src": "5813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:8",
														"nodeType": "YulTypedName",
														"src": "5824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:8",
														"nodeType": "YulTypedName",
														"src": "5836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:8",
														"nodeType": "YulTypedName",
														"src": "5844:6:8",
														"type": ""
													}
												],
												"src": "5768:474:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6866:69:8",
													"nodeType": "YulBlock",
													"src": "6866:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:8"
																		},
																		"nativeSrc": "6884:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:8"
																	},
																	{
																		"hexValue": "456d697373696f6e2072617465206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "6900:27:8",
																		"nodeType": "YulLiteral",
																		"src": "6900:27:8",
																		"type": "",
																		"value": "Emission rate must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nativeSrc": "6877:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:51:8"
															},
															"nativeSrc": "6877:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6877:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
												"nativeSrc": "6760:175:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:8",
														"nodeType": "YulTypedName",
														"src": "6858:6:8",
														"type": ""
													}
												],
												"src": "6760:175:8"
											},
											{
												"body": {
													"nativeSrc": "7087:220:8",
													"nodeType": "YulBlock",
													"src": "7087:220:8",
													"statements": [
														{
															"nativeSrc": "7097:74:8",
															"nodeType": "YulAssignment",
															"src": "7097:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7163:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7168:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7104:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7104:58:8"
																},
																"nativeSrc": "7104:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7104:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7097:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7269:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7269:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
																	"nativeSrc": "7180:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7180:88:8"
																},
																"nativeSrc": "7180:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7180:93:8"
															},
															"nativeSrc": "7180:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7180:93:8"
														},
														{
															"nativeSrc": "7282:19:8",
															"nodeType": "YulAssignment",
															"src": "7282:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7293:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7293:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7298:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7298:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7289:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7289:3:8"
																},
																"nativeSrc": "7289:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7289:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7282:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6941:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7075:3:8",
														"nodeType": "YulTypedName",
														"src": "7075:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7083:3:8",
														"nodeType": "YulTypedName",
														"src": "7083:3:8",
														"type": ""
													}
												],
												"src": "6941:366:8"
											},
											{
												"body": {
													"nativeSrc": "7484:248:8",
													"nodeType": "YulBlock",
													"src": "7484:248:8",
													"statements": [
														{
															"nativeSrc": "7494:26:8",
															"nodeType": "YulAssignment",
															"src": "7494:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7506:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7506:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7517:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:8"
																},
																"nativeSrc": "7502:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7502:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7494:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7494:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7541:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7552:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7552:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7537:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:8"
																		},
																		"nativeSrc": "7537:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7537:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7560:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7560:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7566:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7566:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7556:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7556:3:8"
																		},
																		"nativeSrc": "7556:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7556:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7530:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:8"
																},
																"nativeSrc": "7530:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7530:47:8"
															},
															"nativeSrc": "7530:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7530:47:8"
														},
														{
															"nativeSrc": "7586:139:8",
															"nodeType": "YulAssignment",
															"src": "7586:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7720:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7720:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7594:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7594:124:8"
																},
																"nativeSrc": "7594:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7594:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7586:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7586:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7313:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7464:9:8",
														"nodeType": "YulTypedName",
														"src": "7464:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7479:4:8",
														"nodeType": "YulTypedName",
														"src": "7479:4:8",
														"type": ""
													}
												],
												"src": "7313:419:8"
											},
											{
												"body": {
													"nativeSrc": "7844:59:8",
													"nodeType": "YulBlock",
													"src": "7844:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7866:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7866:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7874:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7874:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7862:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7862:3:8"
																		},
																		"nativeSrc": "7862:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7862:14:8"
																	},
																	{
																		"hexValue": "4e6f2074696d6520656c6170736564",
																		"kind": "string",
																		"nativeSrc": "7878:17:8",
																		"nodeType": "YulLiteral",
																		"src": "7878:17:8",
																		"type": "",
																		"value": "No time elapsed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:8"
																},
																"nativeSrc": "7855:41:8",
																"nodeType": "YulFunctionCall",
																"src": "7855:41:8"
															},
															"nativeSrc": "7855:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "7855:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
												"nativeSrc": "7738:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7836:6:8",
														"nodeType": "YulTypedName",
														"src": "7836:6:8",
														"type": ""
													}
												],
												"src": "7738:165:8"
											},
											{
												"body": {
													"nativeSrc": "8055:220:8",
													"nodeType": "YulBlock",
													"src": "8055:220:8",
													"statements": [
														{
															"nativeSrc": "8065:74:8",
															"nodeType": "YulAssignment",
															"src": "8065:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8131:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8131:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8136:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8072:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8072:58:8"
																},
																"nativeSrc": "8072:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8072:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8065:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8065:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8237:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8237:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
																	"nativeSrc": "8148:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8148:88:8"
																},
																"nativeSrc": "8148:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8148:93:8"
															},
															"nativeSrc": "8148:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8148:93:8"
														},
														{
															"nativeSrc": "8250:19:8",
															"nodeType": "YulAssignment",
															"src": "8250:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8261:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8261:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8266:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8257:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8257:3:8"
																},
																"nativeSrc": "8257:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8257:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8250:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8250:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7909:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8043:3:8",
														"nodeType": "YulTypedName",
														"src": "8043:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8051:3:8",
														"nodeType": "YulTypedName",
														"src": "8051:3:8",
														"type": ""
													}
												],
												"src": "7909:366:8"
											},
											{
												"body": {
													"nativeSrc": "8452:248:8",
													"nodeType": "YulBlock",
													"src": "8452:248:8",
													"statements": [
														{
															"nativeSrc": "8462:26:8",
															"nodeType": "YulAssignment",
															"src": "8462:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8474:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8474:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8485:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8485:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8470:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8470:3:8"
																},
																"nativeSrc": "8470:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8470:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8462:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8462:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8509:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8520:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8520:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8505:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:8"
																		},
																		"nativeSrc": "8505:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8528:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8528:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8534:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8534:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8524:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8524:3:8"
																		},
																		"nativeSrc": "8524:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8524:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8498:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:8"
																},
																"nativeSrc": "8498:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8498:47:8"
															},
															"nativeSrc": "8498:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8498:47:8"
														},
														{
															"nativeSrc": "8554:139:8",
															"nodeType": "YulAssignment",
															"src": "8554:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8688:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8688:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8562:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8562:124:8"
																},
																"nativeSrc": "8562:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8562:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8554:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8554:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8281:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8432:9:8",
														"nodeType": "YulTypedName",
														"src": "8432:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8447:4:8",
														"nodeType": "YulTypedName",
														"src": "8447:4:8",
														"type": ""
													}
												],
												"src": "8281:419:8"
											},
											{
												"body": {
													"nativeSrc": "8734:152:8",
													"nodeType": "YulBlock",
													"src": "8734:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8751:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8751:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8754:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8754:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8744:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8744:6:8"
																},
																"nativeSrc": "8744:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8744:88:8"
															},
															"nativeSrc": "8744:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8744:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8848:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8848:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8851:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8851:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8841:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:8"
																},
																"nativeSrc": "8841:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8841:15:8"
															},
															"nativeSrc": "8841:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8841:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8872:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8872:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8875:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8875:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8865:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8865:6:8"
																},
																"nativeSrc": "8865:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8865:15:8"
															},
															"nativeSrc": "8865:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8865:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8706:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8706:180:8"
											},
											{
												"body": {
													"nativeSrc": "8937:149:8",
													"nodeType": "YulBlock",
													"src": "8937:149:8",
													"statements": [
														{
															"nativeSrc": "8947:25:8",
															"nodeType": "YulAssignment",
															"src": "8947:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8970:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8970:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8952:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8952:17:8"
																},
																"nativeSrc": "8952:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8952:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8947:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8947:1:8"
																}
															]
														},
														{
															"nativeSrc": "8981:25:8",
															"nodeType": "YulAssignment",
															"src": "8981:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9004:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9004:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8986:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8986:17:8"
																},
																"nativeSrc": "8986:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8986:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8981:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8981:1:8"
																}
															]
														},
														{
															"nativeSrc": "9015:17:8",
															"nodeType": "YulAssignment",
															"src": "9015:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9027:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9027:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9030:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9030:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9023:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9023:3:8"
																},
																"nativeSrc": "9023:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9023:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9015:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9015:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9057:22:8",
																"nodeType": "YulBlock",
																"src": "9057:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9059:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9059:16:8"
																			},
																			"nativeSrc": "9059:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9059:18:8"
																		},
																		"nativeSrc": "9059:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9059:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9048:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9048:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9054:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9054:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9045:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9045:2:8"
																},
																"nativeSrc": "9045:11:8",
																"nodeType": "YulFunctionCall",
																"src": "9045:11:8"
															},
															"nativeSrc": "9042:37:8",
															"nodeType": "YulIf",
															"src": "9042:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8892:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8923:1:8",
														"nodeType": "YulTypedName",
														"src": "8923:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8926:1:8",
														"nodeType": "YulTypedName",
														"src": "8926:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8932:4:8",
														"nodeType": "YulTypedName",
														"src": "8932:4:8",
														"type": ""
													}
												],
												"src": "8892:194:8"
											},
											{
												"body": {
													"nativeSrc": "9140:362:8",
													"nodeType": "YulBlock",
													"src": "9140:362:8",
													"statements": [
														{
															"nativeSrc": "9150:25:8",
															"nodeType": "YulAssignment",
															"src": "9150:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9173:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9173:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9155:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9155:17:8"
																},
																"nativeSrc": "9155:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9155:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9150:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9150:1:8"
																}
															]
														},
														{
															"nativeSrc": "9184:25:8",
															"nodeType": "YulAssignment",
															"src": "9184:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9207:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9189:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9189:17:8"
																},
																"nativeSrc": "9189:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9189:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9184:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9184:1:8"
																}
															]
														},
														{
															"nativeSrc": "9218:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9218:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9241:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9241:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9244:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9244:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9237:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9237:3:8"
																},
																"nativeSrc": "9237:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9237:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9222:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9222:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9255:41:8",
															"nodeType": "YulAssignment",
															"src": "9255:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9284:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9284:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9266:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9266:17:8"
																},
																"nativeSrc": "9266:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9266:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9255:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9255:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9473:22:8",
																"nodeType": "YulBlock",
																"src": "9473:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9475:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9475:16:8"
																			},
																			"nativeSrc": "9475:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9475:18:8"
																		},
																		"nativeSrc": "9475:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9475:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9406:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9406:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9399:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9399:6:8"
																				},
																				"nativeSrc": "9399:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9399:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9429:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9429:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9436:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9436:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9445:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9445:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9432:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9432:3:8"
																						},
																						"nativeSrc": "9432:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9432:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9426:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9426:2:8"
																				},
																				"nativeSrc": "9426:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9379:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9379:2:8"
																		},
																		"nativeSrc": "9379:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9379:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9359:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9359:6:8"
																},
																"nativeSrc": "9359:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9359:113:8"
															},
															"nativeSrc": "9356:139:8",
															"nodeType": "YulIf",
															"src": "9356:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9092:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9123:1:8",
														"nodeType": "YulTypedName",
														"src": "9123:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9126:1:8",
														"nodeType": "YulTypedName",
														"src": "9126:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9132:7:8",
														"nodeType": "YulTypedName",
														"src": "9132:7:8",
														"type": ""
													}
												],
												"src": "9092:410:8"
											},
											{
												"body": {
													"nativeSrc": "9536:152:8",
													"nodeType": "YulBlock",
													"src": "9536:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9553:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9553:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9556:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9556:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9546:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9546:6:8"
																},
																"nativeSrc": "9546:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9546:88:8"
															},
															"nativeSrc": "9546:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9546:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9650:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9650:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9653:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9653:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9643:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9643:6:8"
																},
																"nativeSrc": "9643:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9643:15:8"
															},
															"nativeSrc": "9643:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9643:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9674:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9674:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9677:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9677:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9667:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:8"
																},
																"nativeSrc": "9667:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9667:15:8"
															},
															"nativeSrc": "9667:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9667:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9508:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9508:180:8"
											},
											{
												"body": {
													"nativeSrc": "9736:143:8",
													"nodeType": "YulBlock",
													"src": "9736:143:8",
													"statements": [
														{
															"nativeSrc": "9746:25:8",
															"nodeType": "YulAssignment",
															"src": "9746:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9769:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9769:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9751:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9751:17:8"
																},
																"nativeSrc": "9751:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9751:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9746:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9746:1:8"
																}
															]
														},
														{
															"nativeSrc": "9780:25:8",
															"nodeType": "YulAssignment",
															"src": "9780:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9803:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9803:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9785:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9785:17:8"
																},
																"nativeSrc": "9785:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9785:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9780:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9780:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9827:22:8",
																"nodeType": "YulBlock",
																"src": "9827:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9829:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9829:16:8"
																			},
																			"nativeSrc": "9829:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9829:18:8"
																		},
																		"nativeSrc": "9829:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9829:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9824:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9824:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9817:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9817:6:8"
																},
																"nativeSrc": "9817:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9817:9:8"
															},
															"nativeSrc": "9814:35:8",
															"nodeType": "YulIf",
															"src": "9814:35:8"
														},
														{
															"nativeSrc": "9859:14:8",
															"nodeType": "YulAssignment",
															"src": "9859:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9868:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9868:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9871:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9871:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9864:3:8"
																},
																"nativeSrc": "9864:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9864:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9859:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9859:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9694:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9725:1:8",
														"nodeType": "YulTypedName",
														"src": "9725:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9728:1:8",
														"nodeType": "YulTypedName",
														"src": "9728:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9734:1:8",
														"nodeType": "YulTypedName",
														"src": "9734:1:8",
														"type": ""
													}
												],
												"src": "9694:185:8"
											},
											{
												"body": {
													"nativeSrc": "9991:61:8",
													"nodeType": "YulBlock",
													"src": "9991:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10013:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10013:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10021:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10021:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10009:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:8"
																		},
																		"nativeSrc": "10009:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:14:8"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "10025:19:8",
																		"nodeType": "YulLiteral",
																		"src": "10025:19:8",
																		"type": "",
																		"value": "No tokens to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10002:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:8"
																},
																"nativeSrc": "10002:43:8",
																"nodeType": "YulFunctionCall",
																"src": "10002:43:8"
															},
															"nativeSrc": "10002:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "10002:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0",
												"nativeSrc": "9885:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9983:6:8",
														"nodeType": "YulTypedName",
														"src": "9983:6:8",
														"type": ""
													}
												],
												"src": "9885:167:8"
											},
											{
												"body": {
													"nativeSrc": "10204:220:8",
													"nodeType": "YulBlock",
													"src": "10204:220:8",
													"statements": [
														{
															"nativeSrc": "10214:74:8",
															"nodeType": "YulAssignment",
															"src": "10214:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10280:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10280:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10285:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10285:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10221:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10221:58:8"
																},
																"nativeSrc": "10221:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10221:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10214:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10214:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10386:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10386:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0",
																	"nativeSrc": "10297:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10297:88:8"
																},
																"nativeSrc": "10297:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10297:93:8"
															},
															"nativeSrc": "10297:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10297:93:8"
														},
														{
															"nativeSrc": "10399:19:8",
															"nodeType": "YulAssignment",
															"src": "10399:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10410:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10410:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10415:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10415:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10406:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:8"
																},
																"nativeSrc": "10406:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10406:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10399:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10058:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10192:3:8",
														"nodeType": "YulTypedName",
														"src": "10192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10200:3:8",
														"nodeType": "YulTypedName",
														"src": "10200:3:8",
														"type": ""
													}
												],
												"src": "10058:366:8"
											},
											{
												"body": {
													"nativeSrc": "10601:248:8",
													"nodeType": "YulBlock",
													"src": "10601:248:8",
													"statements": [
														{
															"nativeSrc": "10611:26:8",
															"nodeType": "YulAssignment",
															"src": "10611:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10623:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10623:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10634:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10634:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10619:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10619:3:8"
																},
																"nativeSrc": "10619:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10619:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10611:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10611:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10658:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10658:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10669:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10669:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10654:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10654:3:8"
																		},
																		"nativeSrc": "10654:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10654:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10677:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10677:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10683:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10683:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10673:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10673:3:8"
																		},
																		"nativeSrc": "10673:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10673:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10647:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:8"
																},
																"nativeSrc": "10647:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10647:47:8"
															},
															"nativeSrc": "10647:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10647:47:8"
														},
														{
															"nativeSrc": "10703:139:8",
															"nodeType": "YulAssignment",
															"src": "10703:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10837:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10837:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10711:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10711:124:8"
																},
																"nativeSrc": "10711:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10711:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10703:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10703:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10430:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10581:9:8",
														"nodeType": "YulTypedName",
														"src": "10581:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10596:4:8",
														"nodeType": "YulTypedName",
														"src": "10596:4:8",
														"type": ""
													}
												],
												"src": "10430:419:8"
											},
											{
												"body": {
													"nativeSrc": "10981:206:8",
													"nodeType": "YulBlock",
													"src": "10981:206:8",
													"statements": [
														{
															"nativeSrc": "10991:26:8",
															"nodeType": "YulAssignment",
															"src": "10991:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11003:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11003:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11014:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11014:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10999:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10999:3:8"
																},
																"nativeSrc": "10999:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10999:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10991:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10991:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11071:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11071:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11084:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11084:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11095:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11095:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11080:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11080:3:8"
																		},
																		"nativeSrc": "11080:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11080:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11027:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11027:43:8"
																},
																"nativeSrc": "11027:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11027:71:8"
															},
															"nativeSrc": "11027:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11027:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11152:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11152:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11165:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11165:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11176:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11176:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11161:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11161:3:8"
																		},
																		"nativeSrc": "11161:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11161:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11108:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11108:43:8"
																},
																"nativeSrc": "11108:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11108:72:8"
															},
															"nativeSrc": "11108:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11108:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10855:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10945:9:8",
														"nodeType": "YulTypedName",
														"src": "10945:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10957:6:8",
														"nodeType": "YulTypedName",
														"src": "10957:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10965:6:8",
														"nodeType": "YulTypedName",
														"src": "10965:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10976:4:8",
														"nodeType": "YulTypedName",
														"src": "10976:4:8",
														"type": ""
													}
												],
												"src": "10855:332:8"
											},
											{
												"body": {
													"nativeSrc": "11299:68:8",
													"nodeType": "YulBlock",
													"src": "11299:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11321:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11321:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11329:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11329:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11317:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11317:3:8"
																		},
																		"nativeSrc": "11317:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11317:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792061646472657373",
																		"kind": "string",
																		"nativeSrc": "11333:26:8",
																		"nodeType": "YulLiteral",
																		"src": "11333:26:8",
																		"type": "",
																		"value": "Invalid treasury address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11310:6:8"
																},
																"nativeSrc": "11310:50:8",
																"nodeType": "YulFunctionCall",
																"src": "11310:50:8"
															},
															"nativeSrc": "11310:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "11310:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
												"nativeSrc": "11193:174:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11291:6:8",
														"nodeType": "YulTypedName",
														"src": "11291:6:8",
														"type": ""
													}
												],
												"src": "11193:174:8"
											},
											{
												"body": {
													"nativeSrc": "11519:220:8",
													"nodeType": "YulBlock",
													"src": "11519:220:8",
													"statements": [
														{
															"nativeSrc": "11529:74:8",
															"nodeType": "YulAssignment",
															"src": "11529:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11595:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11595:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11600:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11600:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11536:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11536:58:8"
																},
																"nativeSrc": "11536:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11536:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11529:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11701:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11701:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																	"nativeSrc": "11612:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11612:88:8"
																},
																"nativeSrc": "11612:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11612:93:8"
															},
															"nativeSrc": "11612:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11612:93:8"
														},
														{
															"nativeSrc": "11714:19:8",
															"nodeType": "YulAssignment",
															"src": "11714:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11725:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11725:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11730:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11730:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11721:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11721:3:8"
																},
																"nativeSrc": "11721:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11721:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11714:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11714:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11373:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11507:3:8",
														"nodeType": "YulTypedName",
														"src": "11507:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11515:3:8",
														"nodeType": "YulTypedName",
														"src": "11515:3:8",
														"type": ""
													}
												],
												"src": "11373:366:8"
											},
											{
												"body": {
													"nativeSrc": "11916:248:8",
													"nodeType": "YulBlock",
													"src": "11916:248:8",
													"statements": [
														{
															"nativeSrc": "11926:26:8",
															"nodeType": "YulAssignment",
															"src": "11926:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11938:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11938:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11949:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11949:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11934:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11934:3:8"
																},
																"nativeSrc": "11934:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11934:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11926:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11926:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11973:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11973:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11984:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11984:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11969:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11969:3:8"
																		},
																		"nativeSrc": "11969:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11969:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11992:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11992:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11998:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11998:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11988:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11988:3:8"
																		},
																		"nativeSrc": "11988:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11988:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11962:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11962:6:8"
																},
																"nativeSrc": "11962:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11962:47:8"
															},
															"nativeSrc": "11962:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11962:47:8"
														},
														{
															"nativeSrc": "12018:139:8",
															"nodeType": "YulAssignment",
															"src": "12018:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12152:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12152:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12026:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12026:124:8"
																},
																"nativeSrc": "12026:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12026:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12018:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12018:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11745:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11896:9:8",
														"nodeType": "YulTypedName",
														"src": "11896:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11911:4:8",
														"nodeType": "YulTypedName",
														"src": "11911:4:8",
														"type": ""
													}
												],
												"src": "11745:419:8"
											},
											{
												"body": {
													"nativeSrc": "12324:288:8",
													"nodeType": "YulBlock",
													"src": "12324:288:8",
													"statements": [
														{
															"nativeSrc": "12334:26:8",
															"nodeType": "YulAssignment",
															"src": "12334:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12346:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12346:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12357:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12357:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12342:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12342:3:8"
																},
																"nativeSrc": "12342:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12342:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12334:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12334:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12414:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12414:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12427:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12427:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12438:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12438:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12423:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12423:3:8"
																		},
																		"nativeSrc": "12423:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12423:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12370:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12370:43:8"
																},
																"nativeSrc": "12370:71:8",
																"nodeType": "YulFunctionCall",
																"src": "12370:71:8"
															},
															"nativeSrc": "12370:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "12370:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12495:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12495:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12508:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12508:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12519:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12519:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12504:3:8"
																		},
																		"nativeSrc": "12504:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12504:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12451:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12451:43:8"
																},
																"nativeSrc": "12451:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12451:72:8"
															},
															"nativeSrc": "12451:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12451:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12577:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12577:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12590:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12590:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12601:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12601:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12586:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12586:3:8"
																		},
																		"nativeSrc": "12586:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12586:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12533:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12533:43:8"
																},
																"nativeSrc": "12533:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12533:72:8"
															},
															"nativeSrc": "12533:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12533:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12170:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12280:9:8",
														"nodeType": "YulTypedName",
														"src": "12280:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12292:6:8",
														"nodeType": "YulTypedName",
														"src": "12292:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12300:6:8",
														"nodeType": "YulTypedName",
														"src": "12300:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12308:6:8",
														"nodeType": "YulTypedName",
														"src": "12308:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12319:4:8",
														"nodeType": "YulTypedName",
														"src": "12319:4:8",
														"type": ""
													}
												],
												"src": "12170:442:8"
											},
											{
												"body": {
													"nativeSrc": "12724:75:8",
													"nodeType": "YulBlock",
													"src": "12724:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12746:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12746:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12754:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12754:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12742:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12742:3:8"
																		},
																		"nativeSrc": "12742:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12742:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12758:33:8",
																		"nodeType": "YulLiteral",
																		"src": "12758:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12735:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12735:6:8"
																},
																"nativeSrc": "12735:57:8",
																"nodeType": "YulFunctionCall",
																"src": "12735:57:8"
															},
															"nativeSrc": "12735:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "12735:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "12618:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12716:6:8",
														"nodeType": "YulTypedName",
														"src": "12716:6:8",
														"type": ""
													}
												],
												"src": "12618:181:8"
											},
											{
												"body": {
													"nativeSrc": "12951:220:8",
													"nodeType": "YulBlock",
													"src": "12951:220:8",
													"statements": [
														{
															"nativeSrc": "12961:74:8",
															"nodeType": "YulAssignment",
															"src": "12961:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13027:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13027:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13032:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13032:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12968:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12968:58:8"
																},
																"nativeSrc": "12968:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12968:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12961:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12961:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13133:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13133:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "13044:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13044:88:8"
																},
																"nativeSrc": "13044:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13044:93:8"
															},
															"nativeSrc": "13044:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13044:93:8"
														},
														{
															"nativeSrc": "13146:19:8",
															"nodeType": "YulAssignment",
															"src": "13146:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13157:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13157:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13162:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13153:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13153:3:8"
																},
																"nativeSrc": "13153:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13153:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13146:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13146:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12805:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12939:3:8",
														"nodeType": "YulTypedName",
														"src": "12939:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12947:3:8",
														"nodeType": "YulTypedName",
														"src": "12947:3:8",
														"type": ""
													}
												],
												"src": "12805:366:8"
											},
											{
												"body": {
													"nativeSrc": "13348:248:8",
													"nodeType": "YulBlock",
													"src": "13348:248:8",
													"statements": [
														{
															"nativeSrc": "13358:26:8",
															"nodeType": "YulAssignment",
															"src": "13358:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13370:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13370:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13381:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13381:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13366:3:8"
																},
																"nativeSrc": "13366:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13366:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13358:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13358:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13405:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13405:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13416:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13416:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13401:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:8"
																		},
																		"nativeSrc": "13401:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13401:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13424:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13424:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13430:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13430:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13420:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13420:3:8"
																		},
																		"nativeSrc": "13420:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13420:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13394:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13394:6:8"
																},
																"nativeSrc": "13394:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13394:47:8"
															},
															"nativeSrc": "13394:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13394:47:8"
														},
														{
															"nativeSrc": "13450:139:8",
															"nodeType": "YulAssignment",
															"src": "13450:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13584:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13584:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13458:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13458:124:8"
																},
																"nativeSrc": "13458:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13458:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13450:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13450:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13177:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13328:9:8",
														"nodeType": "YulTypedName",
														"src": "13328:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13343:4:8",
														"nodeType": "YulTypedName",
														"src": "13343:4:8",
														"type": ""
													}
												],
												"src": "13177:419:8"
											},
											{
												"body": {
													"nativeSrc": "13646:147:8",
													"nodeType": "YulBlock",
													"src": "13646:147:8",
													"statements": [
														{
															"nativeSrc": "13656:25:8",
															"nodeType": "YulAssignment",
															"src": "13656:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13679:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13679:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13661:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13661:17:8"
																},
																"nativeSrc": "13661:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13661:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13656:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13656:1:8"
																}
															]
														},
														{
															"nativeSrc": "13690:25:8",
															"nodeType": "YulAssignment",
															"src": "13690:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13713:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13713:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13695:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13695:17:8"
																},
																"nativeSrc": "13695:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13695:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13690:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13690:1:8"
																}
															]
														},
														{
															"nativeSrc": "13724:16:8",
															"nodeType": "YulAssignment",
															"src": "13724:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13735:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13735:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13738:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13738:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13731:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13731:3:8"
																},
																"nativeSrc": "13731:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13731:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13724:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13724:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13764:22:8",
																"nodeType": "YulBlock",
																"src": "13764:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13766:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13766:16:8"
																			},
																			"nativeSrc": "13766:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13766:18:8"
																		},
																		"nativeSrc": "13766:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13766:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13756:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13756:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13759:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13759:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13753:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13753:2:8"
																},
																"nativeSrc": "13753:10:8",
																"nodeType": "YulFunctionCall",
																"src": "13753:10:8"
															},
															"nativeSrc": "13750:36:8",
															"nodeType": "YulIf",
															"src": "13750:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13602:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13633:1:8",
														"nodeType": "YulTypedName",
														"src": "13633:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13636:1:8",
														"nodeType": "YulTypedName",
														"src": "13636:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13642:3:8",
														"nodeType": "YulTypedName",
														"src": "13642:3:8",
														"type": ""
													}
												],
												"src": "13602:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Emission rate must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674(memPtr) {\n\n        mstore(add(memPtr, 0), \"No time elapsed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806370a08231116100a057806395d89b411161006f57806395d89b41146102a857806396afc450146102c6578063a9059cbb146102e4578063dd62ed3e14610314578063f2fde38b1461034457610114565b806370a0823114610234578063715018a6146102645780637f51bb1f1461026e5780638da5cb5b1461028a57610114565b806323b872dd116100e757806323b872dd146101a0578063284e1333146101d0578063313ce567146101da578063439af45e146101f857806361d027b31461021657610114565b806306fdde0314610118578063095ea7b3146101365780630ba84cd21461016657806318160ddd14610182575b5f5ffd5b610120610360565b60405161012d919061118a565b60405180910390f35b610150600480360381019061014b919061123b565b6103f0565b60405161015d9190611293565b60405180910390f35b610180600480360381019061017b91906112ac565b610412565b005b61018a61049d565b60405161019791906112e6565b60405180910390f35b6101ba60048036038101906101b591906112ff565b6104a6565b6040516101c79190611293565b60405180910390f35b6101d86104d4565b005b6101e2610613565b6040516101ef919061136a565b60405180910390f35b61020061061b565b60405161020d91906112e6565b60405180910390f35b61021e610621565b60405161022b9190611392565b60405180910390f35b61024e600480360381019061024991906113ab565b610646565b60405161025b91906112e6565b60405180910390f35b61026c61068b565b005b610288600480360381019061028391906113ab565b61069e565b005b61029261078e565b60405161029f9190611392565b60405180910390f35b6102b06107b6565b6040516102bd919061118a565b60405180910390f35b6102ce610846565b6040516102db91906112e6565b60405180910390f35b6102fe60048036038101906102f9919061123b565b61084c565b60405161030b9190611293565b60405180910390f35b61032e600480360381019061032991906113d6565b61086e565b60405161033b91906112e6565b60405180910390f35b61035e600480360381019061035991906113ab565b6108f0565b005b60606003805461036f90611441565b80601f016020809104026020016040519081016040528092919081815260200182805461039b90611441565b80156103e65780601f106103bd576101008083540402835291602001916103e6565b820191905f5260205f20905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b5f5f6103fa610974565b905061040781858561097b565b600191505092915050565b61041a61098d565b5f811161045c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610453906114bb565b60405180910390fd5b806007819055507fffcc630bf88a67ba7c8b27440787c31777ae923aee1e9bbd0127feea56da2cd08160405161049291906112e6565b60405180910390a150565b5f600254905090565b5f5f6104b0610974565b90506104bd858285610a14565b6104c8858585610aa7565b60019150509392505050565b6104dc610b97565b5f4290506008548111610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611523565b60405180910390fd5b5f60085482610533919061156e565b90505f670de0b6b3a76400008260075461054d91906115a1565b610557919061160f565b90505f811161059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290611689565b60405180910390fd5b826008819055506105cd60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610be6565b7fef80c279c178dd63cdaf5061224be86ee325c4f4406d802d043ed33b45b2f68f81846040516105fe9291906116a7565b60405180910390a1505050610611610c65565b565b5f6012905090565b60085481565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61069361098d565b61069c5f610c6f565b565b6106a661098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611718565b60405180910390fd5b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1816040516107839190611392565b60405180910390a150565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107c590611441565b80601f01602080910402602001604051908101604052809291908181526020018280546107f190611441565b801561083c5780601f106108135761010080835404028352916020019161083c565b820191905f5260205f20905b81548152906001019060200180831161081f57829003601f168201915b5050505050905090565b60075481565b5f5f610856610974565b9050610863818585610aa7565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108f861098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610968575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161095f9190611392565b60405180910390fd5b61097181610c6f565b50565b5f33905090565b6109888383836001610d32565b505050565b610995610974565b73ffffffffffffffffffffffffffffffffffffffff166109b361078e565b73ffffffffffffffffffffffffffffffffffffffff1614610a12576109d6610974565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a099190611392565b60405180910390fd5b565b5f610a1f848461086e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aa15781811015610a92578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a8993929190611736565b60405180910390fd5b610aa084848484035f610d32565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0e9190611392565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b7e9190611392565b60405180910390fd5b610b92838383610f01565b505050565b600260065403610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd3906117b5565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c56575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c4d9190611392565b60405180910390fd5b610c615f8383610f01565b5050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610da2575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d999190611392565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e12575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e099190611392565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610efb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ef291906112e6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f51578060025f828254610f4591906117d3565b9250508190555061101f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fda578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fd193929190611736565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611066578060025f82825403925050819055506110b0565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161110d91906112e6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61115c8261111a565b6111668185611124565b9350611176818560208601611134565b61117f81611142565b840191505092915050565b5f6020820190508181035f8301526111a28184611152565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111d7826111ae565b9050919050565b6111e7816111cd565b81146111f1575f5ffd5b50565b5f81359050611202816111de565b92915050565b5f819050919050565b61121a81611208565b8114611224575f5ffd5b50565b5f8135905061123581611211565b92915050565b5f5f60408385031215611251576112506111aa565b5b5f61125e858286016111f4565b925050602061126f85828601611227565b9150509250929050565b5f8115159050919050565b61128d81611279565b82525050565b5f6020820190506112a65f830184611284565b92915050565b5f602082840312156112c1576112c06111aa565b5b5f6112ce84828501611227565b91505092915050565b6112e081611208565b82525050565b5f6020820190506112f95f8301846112d7565b92915050565b5f5f5f60608486031215611316576113156111aa565b5b5f611323868287016111f4565b9350506020611334868287016111f4565b925050604061134586828701611227565b9150509250925092565b5f60ff82169050919050565b6113648161134f565b82525050565b5f60208201905061137d5f83018461135b565b92915050565b61138c816111cd565b82525050565b5f6020820190506113a55f830184611383565b92915050565b5f602082840312156113c0576113bf6111aa565b5b5f6113cd848285016111f4565b91505092915050565b5f5f604083850312156113ec576113eb6111aa565b5b5f6113f9858286016111f4565b925050602061140a858286016111f4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145857607f821691505b60208210810361146b5761146a611414565b5b50919050565b7f456d697373696f6e2072617465206d757374206265203e2030000000000000005f82015250565b5f6114a5601983611124565b91506114b082611471565b602082019050919050565b5f6020820190508181035f8301526114d281611499565b9050919050565b7f4e6f2074696d6520656c617073656400000000000000000000000000000000005f82015250565b5f61150d600f83611124565b9150611518826114d9565b602082019050919050565b5f6020820190508181035f83015261153a81611501565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61157882611208565b915061158383611208565b925082820390508181111561159b5761159a611541565b5b92915050565b5f6115ab82611208565b91506115b683611208565b92508282026115c481611208565b915082820484148315176115db576115da611541565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61161982611208565b915061162483611208565b925082611634576116336115e2565b5b828204905092915050565b7f4e6f20746f6b656e7320746f206d696e740000000000000000000000000000005f82015250565b5f611673601183611124565b915061167e8261163f565b602082019050919050565b5f6020820190508181035f8301526116a081611667565b9050919050565b5f6040820190506116ba5f8301856112d7565b6116c760208301846112d7565b9392505050565b7f496e76616c6964207472656173757279206164647265737300000000000000005f82015250565b5f611702601883611124565b915061170d826116ce565b602082019050919050565b5f6020820190508181035f83015261172f816116f6565b9050919050565b5f6060820190506117495f830186611383565b61175660208301856112d7565b61176360408301846112d7565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61179f601f83611124565b91506117aa8261176b565b602082019050919050565b5f6020820190508181035f8301526117cc81611793565b9050919050565b5f6117dd82611208565b91506117e883611208565b9250828201905080821115611800576117ff611541565b5b9291505056fea2646970667358221220a5b5b7507d9db598f8c195cfc3242ba6017e213e9dc2ea94327fbb994c94f54e64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x344 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x7F51BB1F EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x284E1333 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x439AF45E EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x216 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xBA84CD2 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x4D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3FA PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x407 DUP2 DUP6 DUP6 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x41A PUSH2 0x98D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xFFCC630BF88A67BA7C8B27440787C31777AE923AEE1E9BBD0127FEEA56DA2CD0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4B0 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BD DUP6 DUP3 DUP6 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x4C8 DUP6 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4DC PUSH2 0xB97 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51B SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x7 SLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP1 PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x5CD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0xBE6 JUMP JUMPDEST PUSH32 0xEF80C279C178DD63CDAF5061224BE86EE325C4F4406D802D043ED33B45B2F68F DUP2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP3 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x611 PUSH2 0xC65 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x693 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x69C PUSH0 PUSH2 0xC6F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6A6 PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7C5 SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F1 SWAP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x813 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x856 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x863 DUP2 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F8 PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x968 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 DUP2 PUSH2 0xC6F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x988 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x995 PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B3 PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA12 JUMPI PUSH2 0x9D6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA1F DUP5 DUP5 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA92 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD32 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH2 0xF01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD3 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC56 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC61 PUSH0 DUP4 DUP4 PUSH2 0xF01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xEFB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF51 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x101F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFDA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1066 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10B0 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x115C DUP3 PUSH2 0x111A JUMP JUMPDEST PUSH2 0x1166 DUP2 DUP6 PUSH2 0x1124 JUMP JUMPDEST SWAP4 POP PUSH2 0x1176 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1134 JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x1142 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A2 DUP2 DUP5 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D7 DUP3 PUSH2 0x11AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E7 DUP2 PUSH2 0x11CD JUMP JUMPDEST DUP2 EQ PUSH2 0x11F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1202 DUP2 PUSH2 0x11DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121A DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP2 EQ PUSH2 0x1224 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1235 DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1251 JUMPI PUSH2 0x1250 PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125E DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x126F DUP6 DUP3 DUP7 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128D DUP2 PUSH2 0x1279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH2 0x12C0 PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CE DUP5 DUP3 DUP6 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E0 DUP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x12D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1315 PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1323 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1334 DUP7 DUP3 DUP8 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1364 DUP2 PUSH2 0x134F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137D PUSH0 DUP4 ADD DUP5 PUSH2 0x135B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x138C DUP2 PUSH2 0x11CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C0 JUMPI PUSH2 0x13BF PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CD DUP5 DUP3 DUP6 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13EC JUMPI PUSH2 0x13EB PUSH2 0x11AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F9 DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x140A DUP6 DUP3 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1458 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x1414 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D697373696F6E2072617465206D757374206265203E203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A5 PUSH1 0x19 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B0 DUP3 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D2 DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2074696D6520656C61707365640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x150D PUSH1 0xF DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x1518 DUP3 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153A DUP2 PUSH2 0x1501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1578 DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x1583 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x159B JUMPI PUSH2 0x159A PUSH2 0x1541 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AB DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B6 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x15C4 DUP2 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x1541 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1619 DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x1624 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1634 JUMPI PUSH2 0x1633 PUSH2 0x15E2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F206D696E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1673 PUSH1 0x11 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x167E DUP3 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A0 DUP2 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP6 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x16C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420747265617375727920616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1702 PUSH1 0x18 DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x170D DUP3 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x172F DUP2 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1749 PUSH0 DUP4 ADD DUP7 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x1756 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x1763 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179F PUSH1 0x1F DUP4 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AA DUP3 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17CC DUP2 PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17DD DUP3 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E8 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17FF PUSH2 0x1541 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xB5 0xB7 POP PUSH30 0x9DB598F8C195CFC3242BA6017E213E9DC2EA94327FBB994C94F54E64736F PUSH13 0x634300081D0033000000000000 ",
							"sourceMap": "551:3313:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3269:237:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2614:483:7;;;:::i;:::-;;2707:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:31:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;896:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3644:218:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;698:27:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;3269:237:7:-;1531:13:0;:11;:13::i;:::-;3377:1:7::1;3359:15;:19;3351:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3433:15;3418:12;:30;;;;3463:36;3483:15;3463:36;;;;;;:::i;:::-;;;;;;;;3269:237:::0;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2614:483:7:-;2261:21:2;:19;:21::i;:::-;2670:19:7::1;2692:15;2670:37;;2739:16;;2725:11;:30;2717:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2786:15;2818:16;;2804:11;:30;;;;:::i;:::-;2786:48;;2844:20;2894:4;2883:7;2868:12;;:22;;;;:::i;:::-;2867:31;;;;:::i;:::-;2844:54;;2931:1;2916:12;:16;2908:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2984:11;2965:16;:30;;;;3005:29;3011:8;;;;;;;;;;;3021:12;3005:5;:29::i;:::-;3049:41;3064:12;3078:11;3049:41;;;;;;;:::i;:::-;;;;;;;;2660:437;;;2303:20:2::0;:18;:20::i;:::-;2614:483:7:o;2707:82:3:-;2756:5;2780:2;2773:9;;2707:82;:::o;786:31:7:-;;;;:::o;896:23::-;;;;;;;;;;;;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3644:218:7:-;1531:13:0;:11;:13::i;:::-;3749:1:7::1;3726:25;;:11;:25;;::::0;3718:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3801:11;3790:8;;:22;;;;;;;;;;;;;;;;;;3827:28;3843:11;3827:28;;;;;;:::i;:::-;;;;;;;;3644:218:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;698:27:7:-;;;;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10415:476:3:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:175::-;6900:27;6896:1;6888:6;6884:14;6877:51;6760:175;:::o;6941:366::-;7083:3;7104:67;7168:2;7163:3;7104:67;:::i;:::-;7097:74;;7180:93;7269:3;7180:93;:::i;:::-;7298:2;7293:3;7289:12;7282:19;;6941:366;;;:::o;7313:419::-;7479:4;7517:2;7506:9;7502:18;7494:26;;7566:9;7560:4;7556:20;7552:1;7541:9;7537:17;7530:47;7594:131;7720:4;7594:131;:::i;:::-;7586:139;;7313:419;;;:::o;7738:165::-;7878:17;7874:1;7866:6;7862:14;7855:41;7738:165;:::o;7909:366::-;8051:3;8072:67;8136:2;8131:3;8072:67;:::i;:::-;8065:74;;8148:93;8237:3;8148:93;:::i;:::-;8266:2;8261:3;8257:12;8250:19;;7909:366;;;:::o;8281:419::-;8447:4;8485:2;8474:9;8470:18;8462:26;;8534:9;8528:4;8524:20;8520:1;8509:9;8505:17;8498:47;8562:131;8688:4;8562:131;:::i;:::-;8554:139;;8281:419;;;:::o;8706:180::-;8754:77;8751:1;8744:88;8851:4;8848:1;8841:15;8875:4;8872:1;8865:15;8892:194;8932:4;8952:20;8970:1;8952:20;:::i;:::-;8947:25;;8986:20;9004:1;8986:20;:::i;:::-;8981:25;;9030:1;9027;9023:9;9015:17;;9054:1;9048:4;9045:11;9042:37;;;9059:18;;:::i;:::-;9042:37;8892:194;;;;:::o;9092:410::-;9132:7;9155:20;9173:1;9155:20;:::i;:::-;9150:25;;9189:20;9207:1;9189:20;:::i;:::-;9184:25;;9244:1;9241;9237:9;9266:30;9284:11;9266:30;:::i;:::-;9255:41;;9445:1;9436:7;9432:15;9429:1;9426:22;9406:1;9399:9;9379:83;9356:139;;9475:18;;:::i;:::-;9356:139;9140:362;9092:410;;;;:::o;9508:180::-;9556:77;9553:1;9546:88;9653:4;9650:1;9643:15;9677:4;9674:1;9667:15;9694:185;9734:1;9751:20;9769:1;9751:20;:::i;:::-;9746:25;;9785:20;9803:1;9785:20;:::i;:::-;9780:25;;9824:1;9814:35;;9829:18;;:::i;:::-;9814:35;9871:1;9868;9864:9;9859:14;;9694:185;;;;:::o;9885:167::-;10025:19;10021:1;10013:6;10009:14;10002:43;9885:167;:::o;10058:366::-;10200:3;10221:67;10285:2;10280:3;10221:67;:::i;:::-;10214:74;;10297:93;10386:3;10297:93;:::i;:::-;10415:2;10410:3;10406:12;10399:19;;10058:366;;;:::o;10430:419::-;10596:4;10634:2;10623:9;10619:18;10611:26;;10683:9;10677:4;10673:20;10669:1;10658:9;10654:17;10647:47;10711:131;10837:4;10711:131;:::i;:::-;10703:139;;10430:419;;;:::o;10855:332::-;10976:4;11014:2;11003:9;10999:18;10991:26;;11027:71;11095:1;11084:9;11080:17;11071:6;11027:71;:::i;:::-;11108:72;11176:2;11165:9;11161:18;11152:6;11108:72;:::i;:::-;10855:332;;;;;:::o;11193:174::-;11333:26;11329:1;11321:6;11317:14;11310:50;11193:174;:::o;11373:366::-;11515:3;11536:67;11600:2;11595:3;11536:67;:::i;:::-;11529:74;;11612:93;11701:3;11612:93;:::i;:::-;11730:2;11725:3;11721:12;11714:19;;11373:366;;;:::o;11745:419::-;11911:4;11949:2;11938:9;11934:18;11926:26;;11998:9;11992:4;11988:20;11984:1;11973:9;11969:17;11962:47;12026:131;12152:4;12026:131;:::i;:::-;12018:139;;11745:419;;;:::o;12170:442::-;12319:4;12357:2;12346:9;12342:18;12334:26;;12370:71;12438:1;12427:9;12423:17;12414:6;12370:71;:::i;:::-;12451:72;12519:2;12508:9;12504:18;12495:6;12451:72;:::i;:::-;12533;12601:2;12590:9;12586:18;12577:6;12533:72;:::i;:::-;12170:442;;;;;;:::o;12618:181::-;12758:33;12754:1;12746:6;12742:14;12735:57;12618:181;:::o;12805:366::-;12947:3;12968:67;13032:2;13027:3;12968:67;:::i;:::-;12961:74;;13044:93;13133:3;13044:93;:::i;:::-;13162:2;13157:3;13153:12;13146:19;;12805:366;;;:::o;13177:419::-;13343:4;13381:2;13370:9;13366:18;13358:26;;13430:9;13424:4;13420:20;13416:1;13405:9;13401:17;13394:47;13458:131;13584:4;13458:131;:::i;:::-;13450:139;;13177:419;;;:::o;13602:191::-;13642:3;13661:20;13679:1;13661:20;:::i;:::-;13656:25;;13695:20;13713:1;13695:20;:::i;:::-;13690:25;;13738:1;13735;13731:9;13724:16;;13759:3;13756:1;13753:10;13750:36;;;13766:18;;:::i;:::-;13750:36;13602:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1240800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "405",
								"emissionRate()": "2469",
								"lastEmissionTime()": "2514",
								"mintEmission()": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2619",
								"updateEmissionRate(uint256)": "infinite",
								"updateTreasury(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1855,
									"end": 2327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2006,
									"end": 2016,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "456D697373696F6E546F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "454D540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2057,
									"end": 2058,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2059,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2036,
									"end": 2059,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2045,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2059,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2036,
									"end": 2059,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2059,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2028,
									"end": 2088,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2028,
									"end": 2088,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2128,
									"end": 2129,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2125,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2129,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2098,
									"end": 2159,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2098,
									"end": 2159,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2202,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2176,
									"end": 2186,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2201,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2175,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2170,
									"end": 2175,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2170,
									"end": 2175,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2202,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2170,
									"end": 2202,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2202,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2202,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2170,
									"end": 2202,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2246,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2224,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2212,
									"end": 2246,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2246,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2246,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2246,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2267,
									"end": 2276,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2264,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2256,
									"end": 2264,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2276,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2320,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 2286,
									"end": 2302,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2286,
									"end": 2320,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2286,
									"end": 2320,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2286,
									"end": 2320,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2286,
									"end": 2320,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1855,
									"end": 2327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1926,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1960,
									"end": 1965,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1979,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2104,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2024,
									"end": 2025,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2124,
									"end": 2128,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2121,
									"end": 2122,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2114,
									"end": 2129,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2153,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2165,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2213,
									"end": 2290,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2203,
									"end": 2291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2310,
									"end": 2314,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2307,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2338,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2331,
									"end": 2332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2324,
									"end": 2339,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2395,
									"end": 2401,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2433,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2426,
									"end": 2430,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2422,
									"end": 2434,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2434,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2480,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2481,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2518,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2556,
									"end": 2560,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2548,
									"end": 2554,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2561,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2534,
									"end": 2561,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2490,
									"end": 2571,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2618,
									"end": 2620,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2610,
									"end": 2616,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2621,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2587,
									"end": 2605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2584,
									"end": 2622,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2637,
									"end": 2655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2581,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2752,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2752,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2772,
									"end": 2775,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2776,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2810,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2803,
									"end": 2804,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2793,
									"end": 2811,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2785,
									"end": 2811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2861,
									"end": 2867,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2908,
									"end": 2910,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2903,
									"end": 2905,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2896,
									"end": 2901,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2906,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2911,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2878,
									"end": 2911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2975,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3022,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3007,
									"end": 3023,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2986,
									"end": 3023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2923,
									"end": 3030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3111,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3143,
									"end": 3153,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3208,
									"end": 3274,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3178,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3178,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3326,
									"end": 3334,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3315,
									"end": 3324,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 3296,
									"end": 3335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3296,
									"end": 3335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3368,
									"end": 3372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3357,
									"end": 3362,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3374,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3344,
									"end": 3374,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3407,
									"end": 3415,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3422,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3396,
									"end": 3401,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3393,
									"end": 3423,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3112,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3466,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3484,
									"end": 3489,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3477,
									"end": 3489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3435,
									"end": 3495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3551,
									"end": 3560,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3629,
									"end": 3634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 3611,
									"end": 3635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3611,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3602,
									"end": 3636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3602,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 3584,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3584,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3501,
									"end": 3643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3692,
									"end": 3695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3713,
									"end": 3718,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3706,
									"end": 3718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3649,
									"end": 3724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3871,
									"end": 3878,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3840,
									"end": 3879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3974,
									"end": 3990,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3950,
									"end": 3991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3950,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3935,
									"end": 3939,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3929,
									"end": 3940,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3901,
									"end": 3992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3901,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3895,
									"end": 3899,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3888,
									"end": 3993,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3806,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4053,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4071,
									"end": 4072,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4064,
									"end": 4072,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4161,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4161,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 4260,
									"end": 4266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4250,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 4202,
									"end": 4267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 4202,
									"end": 4267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4137,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4356,
									"end": 4359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4349,
									"end": 4354,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4346,
									"end": 4360,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4447,
									"end": 4448,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4440,
									"end": 4445,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4410,
									"end": 4449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4410,
									"end": 4449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4383,
									"end": 4384,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4376,
									"end": 4381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4385,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4363,
									"end": 4385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4339,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4572,
									"end": 4574,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4567,
									"end": 4570,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4564,
									"end": 4575,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4638,
									"end": 4643,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4606,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4606,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4708,
									"end": 4718,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4690,
									"end": 4719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4690,
									"end": 4719,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4680,
									"end": 4688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4676,
									"end": 4720,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4873,
									"end": 4875,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4861,
									"end": 4871,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4858,
									"end": 4876,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4894,
									"end": 4902,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4879,
									"end": 4902,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 4855,
									"end": 4904,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4991,
									"end": 4994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4973,
									"end": 4995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4963,
									"end": 4971,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4946,
									"end": 4957,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4917,
									"end": 4997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4917,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 5007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4561,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4471,
									"end": 5014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5124,
									"end": 5129,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5118,
									"end": 5122,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5114,
									"end": 5130,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5130,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5020,
									"end": 5137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5187,
									"end": 5193,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5268,
									"end": 5269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5264,
									"end": 5270,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5253,
									"end": 5254,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5249,
									"end": 5262,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5220,
									"end": 5271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5220,
									"end": 5271,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5216,
									"end": 5272,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5301,
									"end": 5305,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5295,
									"end": 5299,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5306,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5281,
									"end": 5306,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5194,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5143,
									"end": 5312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5393,
									"end": 5397,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5564,
									"end": 5567,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5539,
									"end": 5568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5539,
									"end": 5568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5601,
									"end": 5604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5598,
									"end": 5599,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5594,
									"end": 5605,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5588,
									"end": 5592,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5585,
									"end": 5606,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5577,
									"end": 5606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5317,
									"end": 5612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5767,
									"end": 5770,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5734,
									"end": 5771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5734,
									"end": 5771,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5836,
									"end": 5854,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5828,
									"end": 5834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5825,
									"end": 5855,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 5858,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5858,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5822,
									"end": 5878,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5934,
									"end": 5938,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5928,
									"end": 5939,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5902,
									"end": 5940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5902,
									"end": 5940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6047,
									"end": 6053,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6039,
									"end": 6045,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6037,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5987,
									"end": 6054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5987,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6081,
									"end": 6082,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6105,
									"end": 6109,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6092,
									"end": 6109,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6140,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6155,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6811,
									"end": 6812,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6828,
									"end": 6834,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6877,
									"end": 6886,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6872,
									"end": 6875,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6868,
									"end": 6887,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6888,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6888,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6825,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6988,
									"end": 6994,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6981,
									"end": 6986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 6928,
									"end": 6995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6928,
									"end": 6995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6922,
									"end": 6926,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6915,
									"end": 6996,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6784,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6149,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6201,
									"end": 6205,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6197,
									"end": 6206,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6195,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6185,
									"end": 6207,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6267,
									"end": 6271,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 6235,
									"end": 6272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6235,
									"end": 6272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6294,
									"end": 6295,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6322,
									"end": 6329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6319,
									"end": 6320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6316,
									"end": 6330,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6401,
									"end": 6410,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6411,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6412,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6378,
									"end": 6384,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6371,
									"end": 6413,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6453,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6444,
									"end": 6450,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6440,
									"end": 6454,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6430,
									"end": 6454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6499,
									"end": 6501,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6488,
									"end": 6497,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6484,
									"end": 6502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6471,
									"end": 6502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6342,
									"end": 6343,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6338,
									"end": 6350,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6350,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6308,
									"end": 6516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6544,
									"end": 6550,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6535,
									"end": 6542,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6532,
									"end": 6551,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6602,
									"end": 6611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6597,
									"end": 6600,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6593,
									"end": 6612,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6587,
									"end": 6613,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6687,
									"end": 6691,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6679,
									"end": 6685,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6675,
									"end": 6692,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6664,
									"end": 6673,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6645,
									"end": 6693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6645,
									"end": 6693,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6637,
									"end": 6643,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6630,
									"end": 6694,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6552,
									"end": 6708,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6529,
									"end": 6708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6754,
									"end": 6755,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6750,
									"end": 6751,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6742,
									"end": 6748,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6738,
									"end": 6752,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6734,
									"end": 6756,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6728,
									"end": 6732,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6757,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6119,
									"end": 7006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5709,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 7012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7123,
									"end": 7128,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 7105,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7105,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7103,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7093,
									"end": 7130,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7235,
									"end": 7239,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7275,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7262,
									"end": 7271,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7258,
									"end": 7276,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7250,
									"end": 7276,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7354,
									"end": 7355,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7343,
									"end": 7352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7339,
									"end": 7356,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7330,
									"end": 7336,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7286,
									"end": 7357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7286,
									"end": 7357,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7142,
									"end": 7364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7488,
									"end": 7494,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7483,
									"end": 7486,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7476,
									"end": 7495,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7528,
									"end": 7532,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7523,
									"end": 7526,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7519,
									"end": 7533,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7504,
									"end": 7533,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7504,
									"end": 7533,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7545,
									"end": 7719,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 7545,
									"end": 7719,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7685,
									"end": 7711,
									"name": "PUSH",
									"source": 8,
									"value": "496E76616C696420747265617375727920616464726573730000000000000000"
								},
								{
									"begin": 7681,
									"end": 7682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7673,
									"end": 7679,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7669,
									"end": 7683,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7662,
									"end": 7712,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7545,
									"end": 7719,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7545,
									"end": 7719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 8091,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 7725,
									"end": 8091,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7867,
									"end": 7870,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7888,
									"end": 7955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7952,
									"end": 7954,
									"name": "PUSH",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 7947,
									"end": 7950,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7888,
									"end": 7955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 7888,
									"end": 7955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7888,
									"end": 7955,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7888,
									"end": 7955,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7881,
									"end": 7955,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7881,
									"end": 7955,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7964,
									"end": 8057,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8053,
									"end": 8056,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7964,
									"end": 8057,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 7964,
									"end": 8057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7964,
									"end": 8057,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7964,
									"end": 8057,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8082,
									"end": 8084,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8077,
									"end": 8080,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8073,
									"end": 8085,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8066,
									"end": 8085,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8066,
									"end": 8085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 8091,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 8091,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 8091,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7725,
									"end": 8091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8097,
									"end": 8516,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 8097,
									"end": 8516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8263,
									"end": 8267,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8301,
									"end": 8303,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8290,
									"end": 8299,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8286,
									"end": 8304,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8278,
									"end": 8304,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8278,
									"end": 8304,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8344,
									"end": 8348,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8340,
									"end": 8360,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 8336,
									"end": 8337,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8325,
									"end": 8334,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8321,
									"end": 8338,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8314,
									"end": 8361,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8378,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8504,
									"end": 8508,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8378,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 8378,
									"end": 8509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8378,
									"end": 8509,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8378,
									"end": 8509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8370,
									"end": 8509,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8370,
									"end": 8509,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8097,
									"end": 8516,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8097,
									"end": 8516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8097,
									"end": 8516,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8097,
									"end": 8516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8522,
									"end": 8697,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 8522,
									"end": 8697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8662,
									"end": 8689,
									"name": "PUSH",
									"source": 8,
									"value": "456D697373696F6E2072617465206D757374206265203E203000000000000000"
								},
								{
									"begin": 8658,
									"end": 8659,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8650,
									"end": 8656,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8646,
									"end": 8660,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8639,
									"end": 8690,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8522,
									"end": 8697,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8522,
									"end": 8697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8703,
									"end": 9069,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 8703,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8845,
									"end": 8848,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8866,
									"end": 8933,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8930,
									"end": 8932,
									"name": "PUSH",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 8925,
									"end": 8928,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8866,
									"end": 8933,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 8866,
									"end": 8933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8866,
									"end": 8933,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8866,
									"end": 8933,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8859,
									"end": 8933,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8859,
									"end": 8933,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8942,
									"end": 9035,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 9031,
									"end": 9034,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8942,
									"end": 9035,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 8942,
									"end": 9035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8942,
									"end": 9035,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8942,
									"end": 9035,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9060,
									"end": 9062,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9055,
									"end": 9058,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9051,
									"end": 9063,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9044,
									"end": 9063,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9044,
									"end": 9063,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8703,
									"end": 9069,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8703,
									"end": 9069,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8703,
									"end": 9069,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8703,
									"end": 9069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9494,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 9075,
									"end": 9494,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9241,
									"end": 9245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9279,
									"end": 9281,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9268,
									"end": 9277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9264,
									"end": 9282,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9282,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9282,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9328,
									"end": 9337,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9322,
									"end": 9326,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9318,
									"end": 9338,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9303,
									"end": 9312,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9299,
									"end": 9316,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9292,
									"end": 9339,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9356,
									"end": 9487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9482,
									"end": 9486,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9356,
									"end": 9487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9356,
									"end": 9487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9356,
									"end": 9487,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 9356,
									"end": 9487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9348,
									"end": 9487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9348,
									"end": 9487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9494,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9494,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9494,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9075,
									"end": 9494,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9500,
									"end": 9680,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 9500,
									"end": 9680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9548,
									"end": 9625,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9545,
									"end": 9546,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 9626,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9645,
									"end": 9649,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 9642,
									"end": 9643,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 9635,
									"end": 9650,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9669,
									"end": 9673,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 9666,
									"end": 9667,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9659,
									"end": 9674,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 9686,
									"end": 9877,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 9686,
									"end": 9877,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9726,
									"end": 9729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9745,
									"end": 9765,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9763,
									"end": 9764,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9745,
									"end": 9765,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 9745,
									"end": 9765,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9745,
									"end": 9765,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 9745,
									"end": 9765,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9740,
									"end": 9765,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9740,
									"end": 9765,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9779,
									"end": 9799,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9797,
									"end": 9798,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9779,
									"end": 9799,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 9779,
									"end": 9799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9779,
									"end": 9799,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 9779,
									"end": 9799,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9774,
									"end": 9799,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9774,
									"end": 9799,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9822,
									"end": 9823,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9819,
									"end": 9820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9815,
									"end": 9824,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9808,
									"end": 9824,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9808,
									"end": 9824,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 9840,
									"end": 9841,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9837,
									"end": 9847,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9834,
									"end": 9870,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9834,
									"end": 9870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9834,
									"end": 9870,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9868,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9850,
									"end": 9868,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 9850,
									"end": 9868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9868,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9850,
									"end": 9868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9834,
									"end": 9870,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9834,
									"end": 9870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9686,
									"end": 9877,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9686,
									"end": 9877,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9686,
									"end": 9877,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9686,
									"end": 9877,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9686,
									"end": 9877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9883,
									"end": 10001,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 9883,
									"end": 10001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9970,
									"end": 9994,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9988,
									"end": 9993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9970,
									"end": 9994,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 9970,
									"end": 9994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9970,
									"end": 9994,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9970,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9965,
									"end": 9968,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9958,
									"end": 9995,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9883,
									"end": 10001,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9883,
									"end": 10001,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9883,
									"end": 10001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10156,
									"end": 10160,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10194,
									"end": 10196,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 10183,
									"end": 10192,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10179,
									"end": 10197,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10171,
									"end": 10197,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10171,
									"end": 10197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10207,
									"end": 10278,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 10275,
									"end": 10276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10264,
									"end": 10273,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10260,
									"end": 10277,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10251,
									"end": 10257,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10207,
									"end": 10278,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 10207,
									"end": 10278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10207,
									"end": 10278,
									"name": "tag",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 10207,
									"end": 10278,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10288,
									"end": 10360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 10356,
									"end": 10358,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10345,
									"end": 10354,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10341,
									"end": 10359,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10332,
									"end": 10338,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10288,
									"end": 10360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10288,
									"end": 10360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10288,
									"end": 10360,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 10288,
									"end": 10360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10370,
									"end": 10442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 10438,
									"end": 10440,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10427,
									"end": 10436,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10423,
									"end": 10441,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10414,
									"end": 10420,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10370,
									"end": 10442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10370,
									"end": 10442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10370,
									"end": 10442,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 10370,
									"end": 10442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10007,
									"end": 10449,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10455,
									"end": 10677,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 10455,
									"end": 10677,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10548,
									"end": 10552,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10586,
									"end": 10588,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10575,
									"end": 10584,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10571,
									"end": 10589,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10563,
									"end": 10589,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10563,
									"end": 10589,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10599,
									"end": 10670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 10667,
									"end": 10668,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10656,
									"end": 10665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10652,
									"end": 10669,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10643,
									"end": 10649,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10599,
									"end": 10670,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10599,
									"end": 10670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10599,
									"end": 10670,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 10599,
									"end": 10670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10455,
									"end": 10677,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10455,
									"end": 10677,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10455,
									"end": 10677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10455,
									"end": 10677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10455,
									"end": 10677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 551,
									"end": 3864,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5b5b7507d9db598f8c195cfc3242ba6017e213e9dc2ea94327fbb994c94f54e64736f6c634300081d0033",
									".code": [
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "96AFC450"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "7F51BB1F"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "284E1333"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "439AF45E"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "61D027B3"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "BA84CD2"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 3864,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3269,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3269,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2614,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 786,
											"end": 817,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 786,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 786,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 896,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 896,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3644,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3644,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3378,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3351,
											"end": 3408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3351,
											"end": 3408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3418,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3448,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFCC630BF88A67BA7C8B27440787C31777AE923AEE1E9BBD0127FEEA56DA2CD0"
										},
										{
											"begin": 3483,
											"end": 3498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3463,
											"end": 3499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3499,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2614,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2707,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2739,
											"end": 2755,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2755,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2717,
											"end": 2775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2717,
											"end": 2775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2818,
											"end": 2834,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2804,
											"end": 2834,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2804,
											"end": 2834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2804,
											"end": 2834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2834,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2883,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2868,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2868,
											"end": 2890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2867,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2867,
											"end": 2898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2867,
											"end": 2898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 2932,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2908,
											"end": 2954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2908,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 2995,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2965,
											"end": 2995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2995,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2995,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3033,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3005,
											"end": 3034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3005,
											"end": 3034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "EF80C279C178DD63CDAF5061224BE86EE325C4F4406D802D043ED33B45B2F68F"
										},
										{
											"begin": 3064,
											"end": 3076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3089,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3049,
											"end": 3090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3090,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 3097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 3097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 3097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 3097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 817,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 786,
											"end": 817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 919,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3749,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3726,
											"end": 3751,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3726,
											"end": 3751,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3751,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3718,
											"end": 3780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3718,
											"end": 3780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3812,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3790,
											"end": 3798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1"
										},
										{
											"begin": 3843,
											"end": 3854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3827,
											"end": 3855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3855,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6935,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6760,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6927,
											"name": "PUSH",
											"source": 8,
											"value": "456D697373696F6E2072617465206D757374206265203E203000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7104,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7097,
											"end": 7171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7269,
											"end": 7272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 7180,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7296,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6941,
											"end": 7307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7494,
											"end": 7520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7494,
											"end": 7520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7552,
											"end": 7553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7530,
											"end": 7577,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7720,
											"end": 7724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7594,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7903,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7738,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7878,
											"end": 7895,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2074696D6520656C61707365640000000000000000000000000000000000"
										},
										{
											"begin": 7874,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 8275,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7909,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8051,
											"end": 8054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8136,
											"end": 8138,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 8131,
											"end": 8134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 8072,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8139,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 8072,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8139,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8065,
											"end": 8139,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8237,
											"end": 8240,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 8148,
											"end": 8241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8241,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 8148,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8268,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8261,
											"end": 8264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 8275,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 8275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 8275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8700,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8281,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8487,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8474,
											"end": 8483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8462,
											"end": 8488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8462,
											"end": 8488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8528,
											"end": 8532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8544,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8520,
											"end": 8521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8505,
											"end": 8522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8498,
											"end": 8545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8688,
											"end": 8692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8562,
											"end": 8693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8693,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 8562,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8554,
											"end": 8693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8554,
											"end": 8693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8706,
											"end": 8886,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8706,
											"end": 8886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8754,
											"end": 8831,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8751,
											"end": 8752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8855,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8841,
											"end": 8856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8875,
											"end": 8879,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8880,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 9086,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 8892,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 8936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8970,
											"end": 8971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 8952,
											"end": 8972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 8952,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 9004,
											"end": 9005,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 8986,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8981,
											"end": 9006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8981,
											"end": 9006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9032,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9054,
											"end": 9055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9048,
											"end": 9052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9045,
											"end": 9056,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9042,
											"end": 9079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9042,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9042,
											"end": 9079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9059,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9042,
											"end": 9079,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9042,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 9086,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 9086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 9086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 9086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 9086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9502,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 9092,
											"end": 9502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9173,
											"end": 9174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9155,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 9155,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9155,
											"end": 9175,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9155,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9207,
											"end": 9208,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 9189,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9189,
											"end": 9209,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9189,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9184,
											"end": 9209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9241,
											"end": 9242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9246,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9266,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9284,
											"end": 9295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9266,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 9266,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9266,
											"end": 9296,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9266,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9436,
											"end": 9443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9432,
											"end": 9447,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9399,
											"end": 9408,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9379,
											"end": 9462,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9356,
											"end": 9495,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9475,
											"end": 9493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9495,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9356,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9502,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9502,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9688,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9508,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9556,
											"end": 9633,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9546,
											"end": 9634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9657,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9650,
											"end": 9651,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9643,
											"end": 9658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9681,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9674,
											"end": 9675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9879,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9694,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9751,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 9751,
											"end": 9771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9751,
											"end": 9771,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9751,
											"end": 9771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9771,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 9803,
											"end": 9804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 9785,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9805,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 9785,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 9805,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 9805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9824,
											"end": 9825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9814,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 9814,
											"end": 9849,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9829,
											"end": 9847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9814,
											"end": 9849,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 9814,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9871,
											"end": 9872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9868,
											"end": 9869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9879,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10052,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9885,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10044,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F20746F6B656E7320746F206D696E74000000000000000000000000000000"
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10009,
											"end": 10023,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10002,
											"end": 10045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 10052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10058,
											"end": 10424,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 10058,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10221,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10285,
											"end": 10287,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 10280,
											"end": 10283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 10221,
											"end": 10288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10288,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 10221,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10288,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10297,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10297,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 10297,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10297,
											"end": 10390,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10297,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10406,
											"end": 10418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10399,
											"end": 10418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10399,
											"end": 10418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10058,
											"end": 10424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10058,
											"end": 10424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10058,
											"end": 10424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10058,
											"end": 10424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10849,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 10430,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10596,
											"end": 10600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10636,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10611,
											"end": 10637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10611,
											"end": 10637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10683,
											"end": 10692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10677,
											"end": 10681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10673,
											"end": 10693,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10669,
											"end": 10670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10667,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10654,
											"end": 10671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10647,
											"end": 10694,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10711,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10837,
											"end": 10841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10711,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 10711,
											"end": 10842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10711,
											"end": 10842,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10711,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 10842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10703,
											"end": 10842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10976,
											"end": 10980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11014,
											"end": 11016,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11003,
											"end": 11012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10991,
											"end": 11017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 11095,
											"end": 11096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11084,
											"end": 11093,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11080,
											"end": 11097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 11027,
											"end": 11098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11098,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 11027,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 11176,
											"end": 11178,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11165,
											"end": 11174,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11179,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11152,
											"end": 11158,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 11108,
											"end": 11180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11180,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 11108,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 11187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11367,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 11193,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11333,
											"end": 11359,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420747265617375727920616464726573730000000000000000"
										},
										{
											"begin": 11329,
											"end": 11330,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11321,
											"end": 11327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11317,
											"end": 11331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11310,
											"end": 11360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11739,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 11373,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11515,
											"end": 11518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11600,
											"end": 11602,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 11595,
											"end": 11598,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11536,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11536,
											"end": 11603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11536,
											"end": 11603,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11536,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11612,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11701,
											"end": 11704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11612,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 11612,
											"end": 11705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11612,
											"end": 11705,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11612,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11730,
											"end": 11732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11725,
											"end": 11728,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11721,
											"end": 11733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12164,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 11745,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 11915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11938,
											"end": 11947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 11952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 11952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 11952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11998,
											"end": 12007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11992,
											"end": 11996,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12008,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11973,
											"end": 11982,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11969,
											"end": 11986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11962,
											"end": 12009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12026,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 12152,
											"end": 12156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12026,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 12026,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12026,
											"end": 12157,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 12026,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 12164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12319,
											"end": 12323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12359,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12346,
											"end": 12355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12342,
											"end": 12360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12334,
											"end": 12360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12334,
											"end": 12360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12370,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 12438,
											"end": 12439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12423,
											"end": 12440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12414,
											"end": 12420,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12370,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 12370,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12370,
											"end": 12441,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 12370,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12451,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 12519,
											"end": 12521,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12504,
											"end": 12522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12495,
											"end": 12501,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12451,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 12451,
											"end": 12523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12451,
											"end": 12523,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 12451,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 12601,
											"end": 12603,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12590,
											"end": 12599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12586,
											"end": 12604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12577,
											"end": 12583,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 12533,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12605,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 12533,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12170,
											"end": 12612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12799,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 12618,
											"end": 12799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12758,
											"end": 12791,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12754,
											"end": 12755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12746,
											"end": 12752,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12742,
											"end": 12756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12735,
											"end": 12792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12947,
											"end": 12950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 13032,
											"end": 13034,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13027,
											"end": 13030,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 12968,
											"end": 13035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 12968,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12961,
											"end": 13035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12961,
											"end": 13035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 13133,
											"end": 13136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 13044,
											"end": 13137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 13044,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13157,
											"end": 13160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13153,
											"end": 13165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13146,
											"end": 13165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13146,
											"end": 13165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 13171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 13171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13343,
											"end": 13347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13370,
											"end": 13379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13366,
											"end": 13384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 13384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13358,
											"end": 13384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13430,
											"end": 13439,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13424,
											"end": 13428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13420,
											"end": 13440,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13416,
											"end": 13417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13405,
											"end": 13414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13401,
											"end": 13418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13394,
											"end": 13441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 13584,
											"end": 13588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 13458,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 13458,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13450,
											"end": 13589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13450,
											"end": 13589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13793,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 13602,
											"end": 13793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13642,
											"end": 13645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 13679,
											"end": 13680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 13661,
											"end": 13681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13661,
											"end": 13681,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 13661,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13713,
											"end": 13714,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 13695,
											"end": 13715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13715,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13695,
											"end": 13715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13690,
											"end": 13715,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13690,
											"end": 13715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13738,
											"end": 13739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13724,
											"end": 13740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13724,
											"end": 13740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13759,
											"end": 13762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13756,
											"end": 13757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13753,
											"end": 13763,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13750,
											"end": 13786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13750,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 13750,
											"end": 13786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 13766,
											"end": 13784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13750,
											"end": 13786,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 13750,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13793,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"E/emission.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"emissionRate()": "96afc450",
							"lastEmissionTime()": "439af45e",
							"mintEmission()": "284e1333",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"updateEmissionRate(uint256)": "0ba84cd2",
							"updateTreasury(address)": "7f51bb1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialEmissionRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EmissionMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEmissionRate\",\"type\":\"uint256\"}],\"name\":\"EmissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEmissionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintEmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newEmissionRate\",\"type\":\"uint256\"}],\"name\":\"updateEmissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EmissionMinted(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens minted.\",\"timestamp\":\"The time when tokens were minted.\"}},\"EmissionRateUpdated(uint256)\":{\"params\":{\"newEmissionRate\":\"The new emission rate.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"TreasuryUpdated(address)\":{\"params\":{\"newTreasury\":\"The new treasury address.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_treasury\":\"The treasury address that will receive emitted tokens.\",\"initialEmissionRate\":\"The initial emission rate (tokens per second, scaled by 1e18).\",\"initialSupply\":\"The initial token supply minted to the deployer.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateEmissionRate(uint256)\":{\"params\":{\"newEmissionRate\":\"The new emission rate (tokens per second, scaled by 1e18).\"}},\"updateTreasury(address)\":{\"params\":{\"newTreasury\":\"The new treasury address.\"}}},\"title\":\"EmissionToken\",\"version\":1},\"userdoc\":{\"events\":{\"EmissionMinted(uint256,uint256)\":{\"notice\":\"Emitted when new tokens are minted via emission.\"},\"EmissionRateUpdated(uint256)\":{\"notice\":\"Emitted when the emission rate is updated.\"},\"TreasuryUpdated(address)\":{\"notice\":\"Emitted when the treasury address is updated.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor sets the token parameters, initial emission rate, and treasury.\"},\"emissionRate()\":{\"notice\":\"Emission rate in tokens per second (scaled by 1e18 for precision).\"},\"lastEmissionTime()\":{\"notice\":\"Timestamp of the last emission update.\"},\"mintEmission()\":{\"notice\":\"Triggers the emission of new tokens based on time elapsed. Anyone can call this function. It calculates:   tokensToMint = emissionRate * (currentTime - lastEmissionTime) / 1e18. Emitted tokens are minted to the treasury address.\"},\"treasury()\":{\"notice\":\"The treasury address to which emitted tokens are minted.\"},\"updateEmissionRate(uint256)\":{\"notice\":\"Allows the owner to update the emission rate.\"},\"updateTreasury(address)\":{\"notice\":\"Allows the owner to update the treasury address.\"}},\"notice\":\"An ERC20 token with a dynamic emission schedule. Tokens are minted continuously based on an emission rate (tokens per second, scaled by 1e18) and sent to a treasury address. Anyone can trigger emission via mintEmission(); the owner can update the emission rate and treasury.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/emission.sol\":\"EmissionToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"E/emission.sol\":{\"keccak256\":\"0x3068258f1c0f77c1aeee3fa5958fecb0a204e4f10cc043efe3c921cc221c82dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c370a38c6934df3a830fc2d7b679abb8fe8df4f3e33f43554dfb20cc8d2af58\",\"dweb:/ipfs/QmWYTZHHhm6jf7ooSUgWEU4Fs7NajG11eiLVB8ecxQtYnV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "E/emission.sol:EmissionToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1013,
								"contract": "E/emission.sol:EmissionToken",
								"label": "emissionRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1016,
								"contract": "E/emission.sol:EmissionToken",
								"label": "lastEmissionTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1019,
								"contract": "E/emission.sol:EmissionToken",
								"label": "treasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EmissionMinted(uint256,uint256)": {
								"notice": "Emitted when new tokens are minted via emission."
							},
							"EmissionRateUpdated(uint256)": {
								"notice": "Emitted when the emission rate is updated."
							},
							"TreasuryUpdated(address)": {
								"notice": "Emitted when the treasury address is updated."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor sets the token parameters, initial emission rate, and treasury."
							},
							"emissionRate()": {
								"notice": "Emission rate in tokens per second (scaled by 1e18 for precision)."
							},
							"lastEmissionTime()": {
								"notice": "Timestamp of the last emission update."
							},
							"mintEmission()": {
								"notice": "Triggers the emission of new tokens based on time elapsed. Anyone can call this function. It calculates:   tokensToMint = emissionRate * (currentTime - lastEmissionTime) / 1e18. Emitted tokens are minted to the treasury address."
							},
							"treasury()": {
								"notice": "The treasury address to which emitted tokens are minted."
							},
							"updateEmissionRate(uint256)": {
								"notice": "Allows the owner to update the emission rate."
							},
							"updateTreasury(address)": {
								"notice": "Allows the owner to update the treasury address."
							}
						},
						"notice": "An ERC20 token with a dynamic emission schedule. Tokens are minted continuously based on an emission rate (tokens per second, scaled by 1e18) and sent to a treasury address. Anyone can trigger emission via mintEmission(); the owner can update the emission rate and treasury.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"E/emission.sol": {
				"ast": {
					"absolutePath": "E/emission.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"EmissionToken": [
							1198
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 865,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 350,
							"src": "167:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1005,
										"name": "ERC20",
										"nameLocations": [
											"577:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "577:5:7"
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "577:5:7"
								},
								{
									"baseName": {
										"id": 1007,
										"name": "Ownable",
										"nameLocations": [
											"584:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "584:7:7"
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "584:7:7"
								},
								{
									"baseName": {
										"id": 1009,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"593:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "593:15:7"
									},
									"id": 1010,
									"nodeType": "InheritanceSpecifier",
									"src": "593:15:7"
								}
							],
							"canonicalName": "EmissionToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1004,
								"nodeType": "StructuredDocumentation",
								"src": "231:320:7",
								"text": "@title EmissionToken\n @notice An ERC20 token with a dynamic emission schedule. Tokens are minted continuously\n based on an emission rate (tokens per second, scaled by 1e18) and sent to a treasury address.\n Anyone can trigger emission via mintEmission(); the owner can update the emission rate and treasury."
							},
							"fullyImplemented": true,
							"id": 1198,
							"linearizedBaseContracts": [
								1198,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "EmissionToken",
							"nameLocation": "560:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "615:78:7",
										"text": "@notice Emission rate in tokens per second (scaled by 1e18 for precision)."
									},
									"functionSelector": "96afc450",
									"id": 1013,
									"mutability": "mutable",
									"name": "emissionRate",
									"nameLocation": "713:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "698:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1012,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "731:50:7",
										"text": "@notice Timestamp of the last emission update."
									},
									"functionSelector": "439af45e",
									"id": 1016,
									"mutability": "mutable",
									"name": "lastEmissionTime",
									"nameLocation": "801:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "786:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "823:68:7",
										"text": "@notice The treasury address to which emitted tokens are minted."
									},
									"functionSelector": "61d027b3",
									"id": 1019,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "911:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "896:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1018,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "896:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "926:170:7",
										"text": "@notice Emitted when new tokens are minted via emission.\n @param amount The amount of tokens minted.\n @param timestamp The time when tokens were minted."
									},
									"eventSelector": "ef80c279c178dd63cdaf5061224be86ee325c4f4406d802d043ed33b45b2f68f",
									"id": 1026,
									"name": "EmissionMinted",
									"nameLocation": "1107:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1130:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1122:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1146:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1138:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:35:7"
									},
									"src": "1101:56:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "1162:108:7",
										"text": "@notice Emitted when the emission rate is updated.\n @param newEmissionRate The new emission rate."
									},
									"eventSelector": "ffcc630bf88a67ba7c8b27440787c31777ae923aee1e9bbd0127feea56da2cd0",
									"id": 1031,
									"name": "EmissionRateUpdated",
									"nameLocation": "1281:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"indexed": false,
												"mutability": "mutable",
												"name": "newEmissionRate",
												"nameLocation": "1309:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "1301:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:25:7"
									},
									"src": "1275:51:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "1331:110:7",
										"text": "@notice Emitted when the treasury address is updated.\n @param newTreasury The new treasury address."
									},
									"eventSelector": "7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1",
									"id": 1036,
									"name": "TreasuryUpdated",
									"nameLocation": "1452:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "1476:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1468:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:21:7"
									},
									"src": "1446:43:7"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "2018:309:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1055,
																"name": "_treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "2036:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2057:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2049:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1056,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2049:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2049:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2036:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792061646472657373",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2061:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															},
															"value": "Invalid treasury address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2028:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2028:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "initialEmissionRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "2106:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2128:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2106:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d697373696f6e2072617465206d757374206265203e2030",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2131:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
																"typeString": "literal_string \"Emission rate must be > 0\""
															},
															"value": "Emission rate must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
																"typeString": "literal_string \"Emission rate must be > 0\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2098:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2098:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2098:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2176:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2180:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2176:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "2188:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2170:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2170:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "2170:32:7"
											},
											{
												"expression": {
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "emissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "2212:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1078,
														"name": "initialEmissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2227:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2212:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "2212:34:7"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1081,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2256:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1082,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "2267:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2256:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "2256:20:7"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "lastEmissionTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2286:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1086,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2305:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2311:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2305:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2286:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2286:34:7"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "1495:355:7",
										"text": " @notice Constructor sets the token parameters, initial emission rate, and treasury.\n @param initialSupply The initial token supply minted to the deployer.\n @param initialEmissionRate The initial emission rate (tokens per second, scaled by 1e18).\n @param _treasury The treasury address that will receive emitted tokens."
									},
									"id": 1091,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "456d697373696f6e546f6b656e",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1974:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_537c10a614692d284721938ac5621fd0d0b5dcf011e9adbaa215b2529c5eeb91",
														"typeString": "literal_string \"EmissionToken\""
													},
													"value": "EmissionToken"
												},
												{
													"hexValue": "454d54",
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1991:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f2568fa55e8bf97a44257a20356d495f2b196f1d8e1036ee9434f05d028bde85",
														"typeString": "literal_string \"EMT\""
													},
													"value": "EMT"
												}
											],
											"id": 1048,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1045,
												"name": "ERC20",
												"nameLocations": [
													"1968:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1968:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1968:29:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1050,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2006:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2010:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2006:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1052,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1049,
												"name": "Ownable",
												"nameLocations": [
													"1998:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1998:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1998:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1884:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1876:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "initialEmissionRate",
												"nameLocation": "1915:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1907:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1952:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1944:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1866:101:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2018:0:7"
									},
									"scope": 1198,
									"src": "1855:472:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "2660:437:7",
										"statements": [
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "2678:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2670:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2670:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"expression": {
														"id": 1099,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2692:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2698:9:7",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2692:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2670:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "currentTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "2725:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1104,
																"name": "lastEmissionTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2739:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2074696d6520656c6170736564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2757:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
																"typeString": "literal_string \"No time elapsed\""
															},
															"value": "No time elapsed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
																"typeString": "literal_string \"No time elapsed\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2717:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2717:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2717:58:7"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "elapsed",
														"nameLocation": "2794:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2786:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2786:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2804:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1112,
														"name": "lastEmissionTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2818:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2804:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:48:7"
											},
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "tokensToMint",
														"nameLocation": "2852:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2844:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1117,
																	"name": "emissionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "2868:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1118,
																	"name": "elapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "2883:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2868:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1120,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2867:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2894:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2867:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2844:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1125,
																"name": "tokensToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "2916:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2931:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2916:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f206d696e74",
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2934:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0",
																"typeString": "literal_string \"No tokens to mint\""
															},
															"value": "No tokens to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecfa81c04dc0cbbed5d49d3a127c3a5a9ad464dcfbde7e02de3b372ea1650ed0",
																"typeString": "literal_string \"No tokens to mint\""
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2908:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "2908:46:7"
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "lastEmissionTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "2965:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1132,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2984:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2965:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2965:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "3011:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "3021:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3005:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "3005:29:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1141,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "3064:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1142,
															"name": "currentTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "3078:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "EmissionMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3049:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3049:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "EmitStatement",
												"src": "3044:46:7"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2333:276:7",
										"text": " @notice Triggers the emission of new tokens based on time elapsed.\n Anyone can call this function. It calculates:\n   tokensToMint = emissionRate * (currentTime - lastEmissionTime) / 1e18.\n Emitted tokens are minted to the treasury address."
									},
									"functionSelector": "284e1333",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "nonReentrant",
												"nameLocations": [
													"2647:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2647:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2647:12:7"
										}
									],
									"name": "mintEmission",
									"nameLocation": "2623:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2635:2:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2660:0:7"
									},
									"scope": 1198,
									"src": "2614:483:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "3341:165:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "newEmissionRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "3359:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3377:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3359:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d697373696f6e2072617465206d757374206265203e2030",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3380:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
																"typeString": "literal_string \"Emission rate must be > 0\""
															},
															"value": "Emission rate must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_858f34511bfc9947f362ee2b118321f9931a071f315133496a413f92eb55a5df",
																"typeString": "literal_string \"Emission rate must be > 0\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3351:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "3351:57:7"
											},
											{
												"expression": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1161,
														"name": "emissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "3418:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1162,
														"name": "newEmissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3433:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3418:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "3418:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1166,
															"name": "newEmissionRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3483:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "EmissionRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "3463:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3463:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "EmitStatement",
												"src": "3458:41:7"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "3103:161:7",
										"text": " @notice Allows the owner to update the emission rate.\n @param newEmissionRate The new emission rate (tokens per second, scaled by 1e18)."
									},
									"functionSelector": "0ba84cd2",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1151,
												"name": "onlyOwner",
												"nameLocations": [
													"3331:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3331:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3331:9:7"
										}
									],
									"name": "updateEmissionRate",
									"nameLocation": "3278:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "newEmissionRate",
												"nameLocation": "3305:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3297:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:25:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:0:7"
									},
									"scope": 1198,
									"src": "3269:237:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "3708:154:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1179,
																"name": "newTreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3726:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3749:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3741:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1180,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3741:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3741:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3726:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792061646472657373",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3753:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															},
															"value": "Invalid treasury address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad62b1c0bd29081661072d57b01cc0cf06650cc62be9f64a16c6eeb674febe7f",
																"typeString": "literal_string \"Invalid treasury address\""
															}
														],
														"id": 1178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3718:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3718:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "3718:62:7"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1188,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3790:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "3801:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3790:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "3790:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "3843:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1192,
														"name": "TreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "3827:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3827:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "EmitStatement",
												"src": "3822:33:7"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "3512:127:7",
										"text": " @notice Allows the owner to update the treasury address.\n @param newTreasury The new treasury address."
									},
									"functionSelector": "7f51bb1f",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "onlyOwner",
												"nameLocations": [
													"3698:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3698:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3698:9:7"
										}
									],
									"name": "updateTreasury",
									"nameLocation": "3653:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "3676:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3668:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:21:7"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3708:0:7"
									},
									"scope": 1198,
									"src": "3644:218:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "551:3313:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1026,
								1031,
								1036
							]
						}
					],
					"src": "32:3833:7"
				},
				"id": 7
			}
		}
	}
}