{
	"id": "9d0af13d81afac9d016f7a19b74e2323",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/effective proof of stake.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title EffectiveProofOfStake\n/// @notice This contract implements an effective proof-of-stake system where each user's effective stake\n/// increases over time. The effective stake is computed as:\n/// effectiveStake = stakedAmount * (1 + (elapsedTime / bonusPeriod))\n/// The owner sets the staking token and the bonus period (e.g., 30 days).\ncontract EffectiveProofOfStake is Ownable, ReentrancyGuard {\n    /// @notice The ERC20 token used for staking.\n    IERC20 public stakingToken;\n    /// @notice Bonus period in seconds (e.g., 30 days = 30 * 24 * 60 * 60).\n    uint256 public bonusPeriod;\n\n    /// @notice Information about a user's stake.\n    struct StakeInfo {\n        uint256 amount;              // Total tokens staked by the user\n        uint256 weightedDepositTime; // A weighted average deposit timestamp (in seconds)\n    }\n\n    /// @notice Mapping from user address to their stake information.\n    mapping(address => StakeInfo) public stakes;\n\n    // --- Events ---\n    event Deposited(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event BonusPeriodUpdated(uint256 newBonusPeriod);\n\n    /**\n     * @notice Constructor sets the staking token and bonus period.\n     * @param _stakingToken The ERC20 token address used for staking.\n     * @param _bonusPeriod The bonus period in seconds (e.g., 30 days).\n     */\n    constructor(address _stakingToken, uint256 _bonusPeriod) Ownable(msg.sender) {\n        require(_stakingToken != address(0), \"Invalid token address\");\n        require(_bonusPeriod > 0, \"Bonus period must be > 0\");\n\n        stakingToken = IERC20(_stakingToken);\n        bonusPeriod = _bonusPeriod;\n    }\n\n    /**\n     * @notice Allows a user to deposit tokens for staking.\n     * The deposited tokens are recorded, and the weighted deposit time is updated.\n     * @param amount The amount of tokens to deposit.\n     */\n    function deposit(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Deposit amount must be > 0\");\n        require(stakingToken.transferFrom(msg.sender, address(this), amount), \"Token transfer failed\");\n\n        StakeInfo storage info = stakes[msg.sender];\n        uint256 totalAmount = info.amount + amount;\n\n        if (info.amount == 0) {\n            // If this is the first deposit, set weighted deposit time to current block timestamp.\n            info.weightedDepositTime = block.timestamp;\n        } else {\n            // Compute new weighted deposit time:\n            // newWeightedTime = (oldWeightedTime * oldAmount + block.timestamp * newAmount) / (oldAmount + newAmount)\n            info.weightedDepositTime = (info.weightedDepositTime * info.amount + block.timestamp * amount) / totalAmount;\n        }\n        info.amount = totalAmount;\n\n        emit Deposited(msg.sender, amount);\n    }\n\n    /**\n     * @notice Allows a user to withdraw (unstake) tokens.\n     * @param amount The amount of tokens to withdraw.\n     */\n    function withdraw(uint256 amount) external nonReentrant {\n        StakeInfo storage info = stakes[msg.sender];\n        require(info.amount >= amount, \"Insufficient staked balance\");\n\n        info.amount -= amount;\n        if (info.amount == 0) {\n            info.weightedDepositTime = 0;\n        }\n        require(stakingToken.transfer(msg.sender, amount), \"Token transfer failed\");\n\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    /**\n     * @notice Calculates the effective stake of a user.\n     * The effective stake increases over time based on how long the tokens have been staked.\n     * @param user The address of the user.\n     * @return The effective stake value.\n     */\n    function effectiveStake(address user) external view returns (uint256) {\n        StakeInfo storage info = stakes[user];\n        if (info.amount == 0) {\n            return 0;\n        }\n        uint256 elapsed = block.timestamp - info.weightedDepositTime;\n        // Calculate multiplier: 1 + (elapsed / bonusPeriod)\n        // We scale calculations by 1e18 for precision.\n        uint256 multiplier = 1e18 + (elapsed * 1e18) / bonusPeriod;\n        return (info.amount * multiplier) / 1e18;\n    }\n\n    /**\n     * @notice Updates the bonus period. Only the owner can call this.\n     * @param newBonusPeriod The new bonus period in seconds.\n     */\n    function updateBonusPeriod(uint256 newBonusPeriod) external onlyOwner {\n        require(newBonusPeriod > 0, \"Bonus period must be > 0\");\n        bonusPeriod = newBonusPeriod;\n        emit BonusPeriodUpdated(newBonusPeriod);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/effective proof of stake.sol": {
				"EffectiveProofOfStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_bonusPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBonusPeriod",
									"type": "uint256"
								}
							],
							"name": "BonusPeriodUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "bonusPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "effectiveStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weightedDepositTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBonusPeriod",
									"type": "uint256"
								}
							],
							"name": "updateBonusPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_bonusPeriod": "The bonus period in seconds (e.g., 30 days).",
									"_stakingToken": "The ERC20 token address used for staking."
								}
							},
							"deposit(uint256)": {
								"params": {
									"amount": "The amount of tokens to deposit."
								}
							},
							"effectiveStake(address)": {
								"params": {
									"user": "The address of the user."
								},
								"returns": {
									"_0": "The effective stake value."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateBonusPeriod(uint256)": {
								"params": {
									"newBonusPeriod": "The new bonus period in seconds."
								}
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "The amount of tokens to withdraw."
								}
							}
						},
						"title": "EffectiveProofOfStake",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/effective proof of stake.sol\":577:4762  contract EffectiveProofOfStake is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"E/effective proof of stake.sol\":1617:1918  constructor(address _stakingToken, uint256 _bonusPeriod) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"E/effective proof of stake.sol\":1682:1692  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/effective proof of stake.sol\":1737:1738  0 */\n  0x00\n    /* \"E/effective proof of stake.sol\":1712:1739  _stakingToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"E/effective proof of stake.sol\":1712:1725  _stakingToken */\n  dup3\n    /* \"E/effective proof of stake.sol\":1712:1739  _stakingToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"E/effective proof of stake.sol\":1704:1765  require(_stakingToken != address(0), \"Invalid token address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"E/effective proof of stake.sol\":1798:1799  0 */\n  0x00\n    /* \"E/effective proof of stake.sol\":1783:1795  _bonusPeriod */\n  dup2\n    /* \"E/effective proof of stake.sol\":1783:1799  _bonusPeriod > 0 */\n  gt\n    /* \"E/effective proof of stake.sol\":1775:1828  require(_bonusPeriod > 0, \"Bonus period must be > 0\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"E/effective proof of stake.sol\":1861:1874  _stakingToken */\n  dup2\n    /* \"E/effective proof of stake.sol\":1839:1851  stakingToken */\n  0x02\n  0x00\n    /* \"E/effective proof of stake.sol\":1839:1875  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"E/effective proof of stake.sol\":1899:1911  _bonusPeriod */\n  dup1\n    /* \"E/effective proof of stake.sol\":1885:1896  bonusPeriod */\n  0x03\n    /* \"E/effective proof of stake.sol\":1885:1911  bonusPeriod = _bonusPeriod */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/effective proof of stake.sol\":1617:1918  constructor(address _stakingToken, uint256 _bonusPeriod) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"E/effective proof of stake.sol\":577:4762  contract EffectiveProofOfStake is Ownable, ReentrancyGuard {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_27:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_28:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_27\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_29:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_28\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_30:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_31:\n    /* \"#utility.yul\":1001:1025   */\n  tag_53\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_30\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_54:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_32:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_56\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_31\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_59\n  tag_24\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1309:1428   */\ntag_58:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_60\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_29\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_61\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_32\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1836   */\ntag_33:\n    /* \"#utility.yul\":1805:1829   */\n  tag_63\n    /* \"#utility.yul\":1823:1828   */\n  dup2\n    /* \"#utility.yul\":1805:1829   */\n  tag_27\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1800:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1830   */\n  mstore\n    /* \"#utility.yul\":1718:1836   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1842:2064   */\ntag_10:\n    /* \"#utility.yul\":1935:1939   */\n  0x00\n    /* \"#utility.yul\":1973:1975   */\n  0x20\n    /* \"#utility.yul\":1962:1971   */\n  dup3\n    /* \"#utility.yul\":1958:1976   */\n  add\n    /* \"#utility.yul\":1950:1976   */\n  swap1\n  pop\n    /* \"#utility.yul\":1986:2057   */\n  tag_65\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2043:2052   */\n  dup4\n    /* \"#utility.yul\":2039:2056   */\n  add\n    /* \"#utility.yul\":2030:2036   */\n  dup5\n    /* \"#utility.yul\":1986:2057   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1842:2064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2070:2239   */\ntag_34:\n    /* \"#utility.yul\":2154:2165   */\n  0x00\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2183:2186   */\n  dup3\n    /* \"#utility.yul\":2176:2195   */\n  mstore\n    /* \"#utility.yul\":2228:2232   */\n  0x20\n    /* \"#utility.yul\":2223:2226   */\n  dup3\n    /* \"#utility.yul\":2219:2233   */\n  add\n    /* \"#utility.yul\":2204:2233   */\n  swap1\n  pop\n    /* \"#utility.yul\":2070:2239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2245:2416   */\ntag_35:\n    /* \"#utility.yul\":2385:2408   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":2381:2382   */\n  0x00\n    /* \"#utility.yul\":2373:2379   */\n  dup3\n    /* \"#utility.yul\":2369:2383   */\n  add\n    /* \"#utility.yul\":2362:2409   */\n  mstore\n    /* \"#utility.yul\":2245:2416   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2422:2788   */\ntag_36:\n    /* \"#utility.yul\":2564:2567   */\n  0x00\n    /* \"#utility.yul\":2585:2652   */\n  tag_69\n    /* \"#utility.yul\":2649:2651   */\n  0x15\n    /* \"#utility.yul\":2644:2647   */\n  dup4\n    /* \"#utility.yul\":2585:2652   */\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2578:2652   */\n  swap2\n  pop\n    /* \"#utility.yul\":2661:2754   */\n  tag_70\n    /* \"#utility.yul\":2750:2753   */\n  dup3\n    /* \"#utility.yul\":2661:2754   */\n  tag_35\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2779:2781   */\n  0x20\n    /* \"#utility.yul\":2774:2777   */\n  dup3\n    /* \"#utility.yul\":2770:2782   */\n  add\n    /* \"#utility.yul\":2763:2782   */\n  swap1\n  pop\n    /* \"#utility.yul\":2422:2788   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2794:3213   */\ntag_17:\n    /* \"#utility.yul\":2960:2964   */\n  0x00\n    /* \"#utility.yul\":2998:3000   */\n  0x20\n    /* \"#utility.yul\":2987:2996   */\n  dup3\n    /* \"#utility.yul\":2983:3001   */\n  add\n    /* \"#utility.yul\":2975:3001   */\n  swap1\n  pop\n    /* \"#utility.yul\":3047:3056   */\n  dup2\n    /* \"#utility.yul\":3041:3045   */\n  dup2\n    /* \"#utility.yul\":3037:3057   */\n  sub\n    /* \"#utility.yul\":3033:3034   */\n  0x00\n    /* \"#utility.yul\":3022:3031   */\n  dup4\n    /* \"#utility.yul\":3018:3035   */\n  add\n    /* \"#utility.yul\":3011:3058   */\n  mstore\n    /* \"#utility.yul\":3075:3206   */\n  tag_72\n    /* \"#utility.yul\":3201:3205   */\n  dup2\n    /* \"#utility.yul\":3075:3206   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3067:3206   */\n  swap1\n  pop\n    /* \"#utility.yul\":2794:3213   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3219:3393   */\ntag_37:\n    /* \"#utility.yul\":3359:3385   */\n  0x426f6e757320706572696f64206d757374206265203e20300000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3347:3353   */\n  dup3\n    /* \"#utility.yul\":3343:3357   */\n  add\n    /* \"#utility.yul\":3336:3386   */\n  mstore\n    /* \"#utility.yul\":3219:3393   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3399:3765   */\ntag_38:\n    /* \"#utility.yul\":3541:3544   */\n  0x00\n    /* \"#utility.yul\":3562:3629   */\n  tag_75\n    /* \"#utility.yul\":3626:3628   */\n  0x18\n    /* \"#utility.yul\":3621:3624   */\n  dup4\n    /* \"#utility.yul\":3562:3629   */\n  tag_34\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3555:3629   */\n  swap2\n  pop\n    /* \"#utility.yul\":3638:3731   */\n  tag_76\n    /* \"#utility.yul\":3727:3730   */\n  dup3\n    /* \"#utility.yul\":3638:3731   */\n  tag_37\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3756:3758   */\n  0x20\n    /* \"#utility.yul\":3751:3754   */\n  dup3\n    /* \"#utility.yul\":3747:3759   */\n  add\n    /* \"#utility.yul\":3740:3759   */\n  swap1\n  pop\n    /* \"#utility.yul\":3399:3765   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3771:4190   */\ntag_20:\n    /* \"#utility.yul\":3937:3941   */\n  0x00\n    /* \"#utility.yul\":3975:3977   */\n  0x20\n    /* \"#utility.yul\":3964:3973   */\n  dup3\n    /* \"#utility.yul\":3960:3978   */\n  add\n    /* \"#utility.yul\":3952:3978   */\n  swap1\n  pop\n    /* \"#utility.yul\":4024:4033   */\n  dup2\n    /* \"#utility.yul\":4018:4022   */\n  dup2\n    /* \"#utility.yul\":4014:4034   */\n  sub\n    /* \"#utility.yul\":4010:4011   */\n  0x00\n    /* \"#utility.yul\":3999:4008   */\n  dup4\n    /* \"#utility.yul\":3995:4012   */\n  add\n    /* \"#utility.yul\":3988:4035   */\n  mstore\n    /* \"#utility.yul\":4052:4183   */\n  tag_78\n    /* \"#utility.yul\":4178:4182   */\n  dup2\n    /* \"#utility.yul\":4052:4183   */\n  tag_38\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4044:4183   */\n  swap1\n  pop\n    /* \"#utility.yul\":3771:4190   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"E/effective proof of stake.sol\":577:4762  contract EffectiveProofOfStake is Ownable, ReentrancyGuard {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/effective proof of stake.sol\":577:4762  contract EffectiveProofOfStake is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb35bae68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xec4d38b4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4af4a127\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"E/effective proof of stake.sol\":1146:1189  mapping(address => StakeInfo) public stakes */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/effective proof of stake.sol\":3191:3624  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"E/effective proof of stake.sol\":801:827  uint256 public bonusPeriod */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"E/effective proof of stake.sol\":692:718  IERC20 public stakingToken */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/effective proof of stake.sol\":4531:4760  function updateBonusPeriod(uint256 newBonusPeriod) external onlyOwner {... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"E/effective proof of stake.sol\":2138:3055  function deposit(uint256 amount) external nonReentrant {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"E/effective proof of stake.sol\":3883:4376  function effectiveStake(address user) external view returns (uint256) {... */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"E/effective proof of stake.sol\":1146:1189  mapping(address => StakeInfo) public stakes */\n    tag_17:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"E/effective proof of stake.sol\":3191:3624  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_52:\n        /* \"E/effective proof of stake.sol\":3257:3279  StakeInfo storage info */\n      0x00\n        /* \"E/effective proof of stake.sol\":3282:3288  stakes */\n      0x04\n        /* \"E/effective proof of stake.sol\":3282:3300  stakes[msg.sender] */\n      0x00\n        /* \"E/effective proof of stake.sol\":3289:3299  msg.sender */\n      caller\n        /* \"E/effective proof of stake.sol\":3282:3300  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"E/effective proof of stake.sol\":3257:3300  StakeInfo storage info = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"E/effective proof of stake.sol\":3333:3339  amount */\n      dup2\n        /* \"E/effective proof of stake.sol\":3318:3322  info */\n      dup2\n        /* \"E/effective proof of stake.sol\":3318:3329  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":3318:3339  info.amount >= amount */\n      lt\n      iszero\n        /* \"E/effective proof of stake.sol\":3310:3371  require(info.amount >= amount, \"Insufficient staked balance\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"E/effective proof of stake.sol\":3397:3403  amount */\n      dup2\n        /* \"E/effective proof of stake.sol\":3382:3386  info */\n      dup2\n        /* \"E/effective proof of stake.sol\":3382:3393  info.amount */\n      0x00\n      add\n      0x00\n        /* \"E/effective proof of stake.sol\":3382:3403  info.amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/effective proof of stake.sol\":3432:3433  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":3417:3421  info */\n      dup2\n        /* \"E/effective proof of stake.sol\":3417:3428  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":3417:3433  info.amount == 0 */\n      sub\n        /* \"E/effective proof of stake.sol\":3413:3488  if (info.amount == 0) {... */\n      tag_60\n      jumpi\n        /* \"E/effective proof of stake.sol\":3476:3477  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":3449:3453  info */\n      dup2\n        /* \"E/effective proof of stake.sol\":3449:3473  info.weightedDepositTime */\n      0x01\n      add\n        /* \"E/effective proof of stake.sol\":3449:3477  info.weightedDepositTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/effective proof of stake.sol\":3413:3488  if (info.amount == 0) {... */\n    tag_60:\n        /* \"E/effective proof of stake.sol\":3505:3517  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/effective proof of stake.sol\":3505:3526  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"E/effective proof of stake.sol\":3527:3537  msg.sender */\n      caller\n        /* \"E/effective proof of stake.sol\":3539:3545  amount */\n      dup5\n        /* \"E/effective proof of stake.sol\":3505:3546  stakingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"E/effective proof of stake.sol\":3497:3572  require(stakingToken.transfer(msg.sender, amount), \"Token transfer failed\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"E/effective proof of stake.sol\":3598:3608  msg.sender */\n      caller\n        /* \"E/effective proof of stake.sol\":3588:3617  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"E/effective proof of stake.sol\":3610:3616  amount */\n      dup4\n        /* \"E/effective proof of stake.sol\":3588:3617  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"E/effective proof of stake.sol\":3247:3624  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_71:\n        /* \"E/effective proof of stake.sol\":3191:3624  function withdraw(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"E/effective proof of stake.sol\":801:827  uint256 public bonusPeriod */\n    tag_25:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"E/effective proof of stake.sol\":692:718  IERC20 public stakingToken */\n    tag_31:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"E/effective proof of stake.sol\":4531:4760  function updateBonusPeriod(uint256 newBonusPeriod) external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"E/effective proof of stake.sol\":4636:4637  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":4619:4633  newBonusPeriod */\n      dup2\n        /* \"E/effective proof of stake.sol\":4619:4637  newBonusPeriod > 0 */\n      gt\n        /* \"E/effective proof of stake.sol\":4611:4666  require(newBonusPeriod > 0, \"Bonus period must be > 0\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"E/effective proof of stake.sol\":4690:4704  newBonusPeriod */\n      dup1\n        /* \"E/effective proof of stake.sol\":4676:4687  bonusPeriod */\n      0x03\n        /* \"E/effective proof of stake.sol\":4676:4704  bonusPeriod = newBonusPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/effective proof of stake.sol\":4719:4753  BonusPeriodUpdated(newBonusPeriod) */\n      0xdec900c033f508b1a342c6903692eb0c7ce2a86b1c98a96cba42983a032c9ad8\n        /* \"E/effective proof of stake.sol\":4738:4752  newBonusPeriod */\n      dup2\n        /* \"E/effective proof of stake.sol\":4719:4753  BonusPeriodUpdated(newBonusPeriod) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/effective proof of stake.sol\":4531:4760  function updateBonusPeriod(uint256 newBonusPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"E/effective proof of stake.sol\":2138:3055  function deposit(uint256 amount) external nonReentrant {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_88:\n        /* \"E/effective proof of stake.sol\":2220:2221  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":2211:2217  amount */\n      dup2\n        /* \"E/effective proof of stake.sol\":2211:2221  amount > 0 */\n      gt\n        /* \"E/effective proof of stake.sol\":2203:2252  require(amount > 0, \"Deposit amount must be > 0\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"E/effective proof of stake.sol\":2270:2282  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/effective proof of stake.sol\":2270:2295  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"E/effective proof of stake.sol\":2296:2306  msg.sender */\n      caller\n        /* \"E/effective proof of stake.sol\":2316:2320  this */\n      address\n        /* \"E/effective proof of stake.sol\":2323:2329  amount */\n      dup5\n        /* \"E/effective proof of stake.sol\":2270:2330  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_97:\n        /* \"E/effective proof of stake.sol\":2262:2356  require(stakingToken.transferFrom(msg.sender, address(this), amount), \"Token transfer failed\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_69\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"E/effective proof of stake.sol\":2367:2389  StakeInfo storage info */\n      0x00\n        /* \"E/effective proof of stake.sol\":2392:2398  stakes */\n      0x04\n        /* \"E/effective proof of stake.sol\":2392:2410  stakes[msg.sender] */\n      0x00\n        /* \"E/effective proof of stake.sol\":2399:2409  msg.sender */\n      caller\n        /* \"E/effective proof of stake.sol\":2392:2410  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"E/effective proof of stake.sol\":2367:2410  StakeInfo storage info = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"E/effective proof of stake.sol\":2420:2439  uint256 totalAmount */\n      0x00\n        /* \"E/effective proof of stake.sol\":2456:2462  amount */\n      dup3\n        /* \"E/effective proof of stake.sol\":2442:2446  info */\n      dup3\n        /* \"E/effective proof of stake.sol\":2442:2453  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":2442:2462  info.amount + amount */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"E/effective proof of stake.sol\":2420:2462  uint256 totalAmount = info.amount + amount */\n      swap1\n      pop\n        /* \"E/effective proof of stake.sol\":2492:2493  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":2477:2481  info */\n      dup3\n        /* \"E/effective proof of stake.sol\":2477:2488  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":2477:2493  info.amount == 0 */\n      sub\n        /* \"E/effective proof of stake.sol\":2473:2969  if (info.amount == 0) {... */\n      tag_102\n      jumpi\n        /* \"E/effective proof of stake.sol\":2635:2650  block.timestamp */\n      timestamp\n        /* \"E/effective proof of stake.sol\":2608:2612  info */\n      dup3\n        /* \"E/effective proof of stake.sol\":2608:2632  info.weightedDepositTime */\n      0x01\n      add\n        /* \"E/effective proof of stake.sol\":2608:2650  info.weightedDepositTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/effective proof of stake.sol\":2473:2969  if (info.amount == 0) {... */\n      jump(tag_103)\n    tag_102:\n        /* \"E/effective proof of stake.sol\":2947:2958  totalAmount */\n      dup1\n        /* \"E/effective proof of stake.sol\":2937:2943  amount */\n      dup4\n        /* \"E/effective proof of stake.sol\":2919:2934  block.timestamp */\n      timestamp\n        /* \"E/effective proof of stake.sol\":2919:2943  block.timestamp * amount */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"E/effective proof of stake.sol\":2905:2909  info */\n      dup4\n        /* \"E/effective proof of stake.sol\":2905:2916  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":2878:2882  info */\n      dup5\n        /* \"E/effective proof of stake.sol\":2878:2902  info.weightedDepositTime */\n      0x01\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":2878:2916  info.weightedDepositTime * info.amount */\n      tag_106\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n        /* \"E/effective proof of stake.sol\":2878:2943  info.weightedDepositTime * info.amount + block.timestamp * amount */\n      tag_107\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_107:\n        /* \"E/effective proof of stake.sol\":2877:2958  (info.weightedDepositTime * info.amount + block.timestamp * amount) / totalAmount */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"E/effective proof of stake.sol\":2850:2854  info */\n      dup3\n        /* \"E/effective proof of stake.sol\":2850:2874  info.weightedDepositTime */\n      0x01\n      add\n        /* \"E/effective proof of stake.sol\":2850:2958  info.weightedDepositTime = (info.weightedDepositTime * info.amount + block.timestamp * amount) / totalAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/effective proof of stake.sol\":2473:2969  if (info.amount == 0) {... */\n    tag_103:\n        /* \"E/effective proof of stake.sol\":2992:3003  totalAmount */\n      dup1\n        /* \"E/effective proof of stake.sol\":2978:2982  info */\n      dup3\n        /* \"E/effective proof of stake.sol\":2978:2989  info.amount */\n      0x00\n      add\n        /* \"E/effective proof of stake.sol\":2978:3003  info.amount = totalAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/effective proof of stake.sol\":3029:3039  msg.sender */\n      caller\n        /* \"E/effective proof of stake.sol\":3019:3048  Deposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"E/effective proof of stake.sol\":3041:3047  amount */\n      dup5\n        /* \"E/effective proof of stake.sol\":3019:3048  Deposited(msg.sender, amount) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"E/effective proof of stake.sol\":2193:3055  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_111\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_111:\n        /* \"E/effective proof of stake.sol\":2138:3055  function deposit(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"E/effective proof of stake.sol\":3883:4376  function effectiveStake(address user) external view returns (uint256) {... */\n    tag_46:\n        /* \"E/effective proof of stake.sol\":3944:3951  uint256 */\n      0x00\n        /* \"E/effective proof of stake.sol\":3963:3985  StakeInfo storage info */\n      dup1\n        /* \"E/effective proof of stake.sol\":3988:3994  stakes */\n      0x04\n        /* \"E/effective proof of stake.sol\":3988:4000  stakes[user] */\n      0x00\n        /* \"E/effective proof of stake.sol\":3995:3999  user */\n      dup5\n        /* \"E/effective proof of stake.sol\":3988:4000  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"E/effective proof of stake.sol\":3963:4000  StakeInfo storage info = stakes[user] */\n      swap1\n      pop\n        /* \"E/effective proof of stake.sol\":4029:4030  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":4014:4018  info */\n      dup2\n        /* \"E/effective proof of stake.sol\":4014:4025  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":4014:4030  info.amount == 0 */\n      sub\n        /* \"E/effective proof of stake.sol\":4010:4065  if (info.amount == 0) {... */\n      tag_113\n      jumpi\n        /* \"E/effective proof of stake.sol\":4053:4054  0 */\n      0x00\n        /* \"E/effective proof of stake.sol\":4046:4054  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_112)\n        /* \"E/effective proof of stake.sol\":4010:4065  if (info.amount == 0) {... */\n    tag_113:\n        /* \"E/effective proof of stake.sol\":4074:4089  uint256 elapsed */\n      0x00\n        /* \"E/effective proof of stake.sol\":4110:4114  info */\n      dup2\n        /* \"E/effective proof of stake.sol\":4110:4134  info.weightedDepositTime */\n      0x01\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":4092:4107  block.timestamp */\n      timestamp\n        /* \"E/effective proof of stake.sol\":4092:4134  block.timestamp - info.weightedDepositTime */\n      tag_114\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_114:\n        /* \"E/effective proof of stake.sol\":4074:4134  uint256 elapsed = block.timestamp - info.weightedDepositTime */\n      swap1\n      pop\n        /* \"E/effective proof of stake.sol\":4261:4279  uint256 multiplier */\n      0x00\n        /* \"E/effective proof of stake.sol\":4308:4319  bonusPeriod */\n      sload(0x03)\n        /* \"E/effective proof of stake.sol\":4300:4304  1e18 */\n      0x0de0b6b3a7640000\n        /* \"E/effective proof of stake.sol\":4290:4297  elapsed */\n      dup4\n        /* \"E/effective proof of stake.sol\":4290:4304  elapsed * 1e18 */\n      tag_115\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_115:\n        /* \"E/effective proof of stake.sol\":4289:4319  (elapsed * 1e18) / bonusPeriod */\n      tag_116\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_116:\n        /* \"E/effective proof of stake.sol\":4282:4286  1e18 */\n      0x0de0b6b3a7640000\n        /* \"E/effective proof of stake.sol\":4282:4319  1e18 + (elapsed * 1e18) / bonusPeriod */\n      tag_117\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_117:\n        /* \"E/effective proof of stake.sol\":4261:4319  uint256 multiplier = 1e18 + (elapsed * 1e18) / bonusPeriod */\n      swap1\n      pop\n        /* \"E/effective proof of stake.sol\":4365:4369  1e18 */\n      0x0de0b6b3a7640000\n        /* \"E/effective proof of stake.sol\":4351:4361  multiplier */\n      dup2\n        /* \"E/effective proof of stake.sol\":4337:4341  info */\n      dup5\n        /* \"E/effective proof of stake.sol\":4337:4348  info.amount */\n      0x00\n      add\n      sload\n        /* \"E/effective proof of stake.sol\":4337:4361  info.amount * multiplier */\n      tag_118\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_118:\n        /* \"E/effective proof of stake.sol\":4336:4369  (info.amount * multiplier) / 1e18 */\n      tag_119\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_119:\n        /* \"E/effective proof of stake.sol\":4329:4369  return (info.amount * multiplier) / 1e18 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"E/effective proof of stake.sol\":3883:4376  function effectiveStake(address user) external view returns (uint256) {... */\n    tag_112:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_141:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_143:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_144:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_179\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_143\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_145:\n        /* \"#utility.yul\":641:665   */\n      tag_181\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_144\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_182:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_146:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_184\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_145\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_187\n      tag_141\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":917:1036   */\n    tag_186:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_188\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_147:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_148:\n        /* \"#utility.yul\":1346:1370   */\n      tag_191\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_147\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1715   */\n    tag_19:\n        /* \"#utility.yul\":1504:1508   */\n      0x00\n        /* \"#utility.yul\":1542:1544   */\n      0x40\n        /* \"#utility.yul\":1531:1540   */\n      dup3\n        /* \"#utility.yul\":1527:1545   */\n      add\n        /* \"#utility.yul\":1519:1545   */\n      swap1\n      pop\n        /* \"#utility.yul\":1555:1626   */\n      tag_193\n        /* \"#utility.yul\":1623:1624   */\n      0x00\n        /* \"#utility.yul\":1612:1621   */\n      dup4\n        /* \"#utility.yul\":1608:1625   */\n      add\n        /* \"#utility.yul\":1599:1605   */\n      dup6\n        /* \"#utility.yul\":1555:1626   */\n      tag_148\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1636:1708   */\n      tag_194\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1693:1702   */\n      dup4\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"#utility.yul\":1680:1686   */\n      dup5\n        /* \"#utility.yul\":1636:1708   */\n      tag_148\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1383:1715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1721:1843   */\n    tag_149:\n        /* \"#utility.yul\":1794:1818   */\n      tag_196\n        /* \"#utility.yul\":1812:1817   */\n      dup2\n        /* \"#utility.yul\":1794:1818   */\n      tag_147\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1787:1792   */\n      dup2\n        /* \"#utility.yul\":1784:1819   */\n      eq\n        /* \"#utility.yul\":1774:1837   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1830:1831   */\n      dup1\n        /* \"#utility.yul\":1823:1835   */\n      revert\n        /* \"#utility.yul\":1774:1837   */\n    tag_197:\n        /* \"#utility.yul\":1721:1843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1849:1988   */\n    tag_150:\n        /* \"#utility.yul\":1895:1900   */\n      0x00\n        /* \"#utility.yul\":1933:1939   */\n      dup2\n        /* \"#utility.yul\":1920:1940   */\n      calldataload\n        /* \"#utility.yul\":1911:1940   */\n      swap1\n      pop\n        /* \"#utility.yul\":1949:1982   */\n      tag_199\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1949:1982   */\n      tag_149\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1849:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2323   */\n    tag_22:\n        /* \"#utility.yul\":2053:2059   */\n      0x00\n        /* \"#utility.yul\":2102:2104   */\n      0x20\n        /* \"#utility.yul\":2090:2099   */\n      dup3\n        /* \"#utility.yul\":2081:2088   */\n      dup5\n        /* \"#utility.yul\":2077:2100   */\n      sub\n        /* \"#utility.yul\":2073:2105   */\n      slt\n        /* \"#utility.yul\":2070:2189   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2108:2187   */\n      tag_202\n      tag_141\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2070:2189   */\n    tag_201:\n        /* \"#utility.yul\":2228:2229   */\n      0x00\n        /* \"#utility.yul\":2253:2306   */\n      tag_203\n        /* \"#utility.yul\":2298:2305   */\n      dup5\n        /* \"#utility.yul\":2289:2295   */\n      dup3\n        /* \"#utility.yul\":2278:2287   */\n      dup6\n        /* \"#utility.yul\":2274:2296   */\n      add\n        /* \"#utility.yul\":2253:2306   */\n      tag_150\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2243:2306   */\n      swap2\n      pop\n        /* \"#utility.yul\":2199:2316   */\n      pop\n        /* \"#utility.yul\":1994:2323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2551   */\n    tag_27:\n        /* \"#utility.yul\":2422:2426   */\n      0x00\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2449:2458   */\n      dup3\n        /* \"#utility.yul\":2445:2463   */\n      add\n        /* \"#utility.yul\":2437:2463   */\n      swap1\n      pop\n        /* \"#utility.yul\":2473:2544   */\n      tag_205\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2530:2539   */\n      dup4\n        /* \"#utility.yul\":2526:2543   */\n      add\n        /* \"#utility.yul\":2517:2523   */\n      dup5\n        /* \"#utility.yul\":2473:2544   */\n      tag_148\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2329:2551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2617   */\n    tag_151:\n        /* \"#utility.yul\":2585:2588   */\n      0x00\n        /* \"#utility.yul\":2606:2611   */\n      dup2\n        /* \"#utility.yul\":2599:2611   */\n      swap1\n      pop\n        /* \"#utility.yul\":2557:2617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2765   */\n    tag_152:\n        /* \"#utility.yul\":2673:2682   */\n      0x00\n        /* \"#utility.yul\":2706:2759   */\n      tag_208\n        /* \"#utility.yul\":2724:2758   */\n      tag_209\n        /* \"#utility.yul\":2733:2757   */\n      tag_210\n        /* \"#utility.yul\":2751:2756   */\n      dup5\n        /* \"#utility.yul\":2733:2757   */\n      tag_143\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2724:2758   */\n      tag_151\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2706:2759   */\n      tag_143\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2693:2759   */\n      swap1\n      pop\n        /* \"#utility.yul\":2623:2765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2771:2897   */\n    tag_153:\n        /* \"#utility.yul\":2821:2830   */\n      0x00\n        /* \"#utility.yul\":2854:2891   */\n      tag_212\n        /* \"#utility.yul\":2885:2890   */\n      dup3\n        /* \"#utility.yul\":2854:2891   */\n      tag_152\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2841:2891   */\n      swap1\n      pop\n        /* \"#utility.yul\":2771:2897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3043   */\n    tag_154:\n        /* \"#utility.yul\":2967:2976   */\n      0x00\n        /* \"#utility.yul\":3000:3037   */\n      tag_214\n        /* \"#utility.yul\":3031:3036   */\n      dup3\n        /* \"#utility.yul\":3000:3037   */\n      tag_153\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2987:3037   */\n      swap1\n      pop\n        /* \"#utility.yul\":2903:3043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3049:3208   */\n    tag_155:\n        /* \"#utility.yul\":3150:3201   */\n      tag_216\n        /* \"#utility.yul\":3195:3200   */\n      dup2\n        /* \"#utility.yul\":3150:3201   */\n      tag_154\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3145:3148   */\n      dup3\n        /* \"#utility.yul\":3138:3202   */\n      mstore\n        /* \"#utility.yul\":3049:3208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3214:3464   */\n    tag_33:\n        /* \"#utility.yul\":3321:3325   */\n      0x00\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"#utility.yul\":3348:3357   */\n      dup3\n        /* \"#utility.yul\":3344:3362   */\n      add\n        /* \"#utility.yul\":3336:3362   */\n      swap1\n      pop\n        /* \"#utility.yul\":3372:3457   */\n      tag_218\n        /* \"#utility.yul\":3454:3455   */\n      0x00\n        /* \"#utility.yul\":3443:3452   */\n      dup4\n        /* \"#utility.yul\":3439:3456   */\n      add\n        /* \"#utility.yul\":3430:3436   */\n      dup5\n        /* \"#utility.yul\":3372:3457   */\n      tag_155\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3214:3464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3470:3588   */\n    tag_156:\n        /* \"#utility.yul\":3557:3581   */\n      tag_220\n        /* \"#utility.yul\":3575:3580   */\n      dup2\n        /* \"#utility.yul\":3557:3581   */\n      tag_144\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3552:3555   */\n      dup3\n        /* \"#utility.yul\":3545:3582   */\n      mstore\n        /* \"#utility.yul\":3470:3588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3594:3816   */\n    tag_37:\n        /* \"#utility.yul\":3687:3691   */\n      0x00\n        /* \"#utility.yul\":3725:3727   */\n      0x20\n        /* \"#utility.yul\":3714:3723   */\n      dup3\n        /* \"#utility.yul\":3710:3728   */\n      add\n        /* \"#utility.yul\":3702:3728   */\n      swap1\n      pop\n        /* \"#utility.yul\":3738:3809   */\n      tag_222\n        /* \"#utility.yul\":3806:3807   */\n      0x00\n        /* \"#utility.yul\":3795:3804   */\n      dup4\n        /* \"#utility.yul\":3791:3808   */\n      add\n        /* \"#utility.yul\":3782:3788   */\n      dup5\n        /* \"#utility.yul\":3738:3809   */\n      tag_156\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3594:3816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3822:3991   */\n    tag_157:\n        /* \"#utility.yul\":3906:3917   */\n      0x00\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3935:3938   */\n      dup3\n        /* \"#utility.yul\":3928:3947   */\n      mstore\n        /* \"#utility.yul\":3980:3984   */\n      0x20\n        /* \"#utility.yul\":3975:3978   */\n      dup3\n        /* \"#utility.yul\":3971:3985   */\n      add\n        /* \"#utility.yul\":3956:3985   */\n      swap1\n      pop\n        /* \"#utility.yul\":3822:3991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4174   */\n    tag_158:\n        /* \"#utility.yul\":4137:4166   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4125:4131   */\n      dup3\n        /* \"#utility.yul\":4121:4135   */\n      add\n        /* \"#utility.yul\":4114:4167   */\n      mstore\n        /* \"#utility.yul\":3997:4174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4546   */\n    tag_159:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4343:4410   */\n      tag_226\n        /* \"#utility.yul\":4407:4409   */\n      0x1b\n        /* \"#utility.yul\":4402:4405   */\n      dup4\n        /* \"#utility.yul\":4343:4410   */\n      tag_157\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4336:4410   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4512   */\n      tag_227\n        /* \"#utility.yul\":4508:4511   */\n      dup3\n        /* \"#utility.yul\":4419:4512   */\n      tag_158\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4537:4539   */\n      0x20\n        /* \"#utility.yul\":4532:4535   */\n      dup3\n        /* \"#utility.yul\":4528:4540   */\n      add\n        /* \"#utility.yul\":4521:4540   */\n      swap1\n      pop\n        /* \"#utility.yul\":4180:4546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4552:4971   */\n    tag_57:\n        /* \"#utility.yul\":4718:4722   */\n      0x00\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup3\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4733:4759   */\n      swap1\n      pop\n        /* \"#utility.yul\":4805:4814   */\n      dup2\n        /* \"#utility.yul\":4799:4803   */\n      dup2\n        /* \"#utility.yul\":4795:4815   */\n      sub\n        /* \"#utility.yul\":4791:4792   */\n      0x00\n        /* \"#utility.yul\":4780:4789   */\n      dup4\n        /* \"#utility.yul\":4776:4793   */\n      add\n        /* \"#utility.yul\":4769:4816   */\n      mstore\n        /* \"#utility.yul\":4833:4964   */\n      tag_229\n        /* \"#utility.yul\":4959:4963   */\n      dup2\n        /* \"#utility.yul\":4833:4964   */\n      tag_159\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4825:4964   */\n      swap1\n      pop\n        /* \"#utility.yul\":4552:4971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4977:5157   */\n    tag_160:\n        /* \"#utility.yul\":5025:5102   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5022:5023   */\n      0x00\n        /* \"#utility.yul\":5015:5103   */\n      mstore\n        /* \"#utility.yul\":5122:5126   */\n      0x11\n        /* \"#utility.yul\":5119:5120   */\n      0x04\n        /* \"#utility.yul\":5112:5127   */\n      mstore\n        /* \"#utility.yul\":5146:5150   */\n      0x24\n        /* \"#utility.yul\":5143:5144   */\n      0x00\n        /* \"#utility.yul\":5136:5151   */\n      revert\n        /* \"#utility.yul\":5163:5357   */\n    tag_59:\n        /* \"#utility.yul\":5203:5207   */\n      0x00\n        /* \"#utility.yul\":5223:5243   */\n      tag_232\n        /* \"#utility.yul\":5241:5242   */\n      dup3\n        /* \"#utility.yul\":5223:5243   */\n      tag_147\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5218:5243   */\n      swap2\n      pop\n        /* \"#utility.yul\":5257:5277   */\n      tag_233\n        /* \"#utility.yul\":5275:5276   */\n      dup4\n        /* \"#utility.yul\":5257:5277   */\n      tag_147\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5252:5277   */\n      swap3\n      pop\n        /* \"#utility.yul\":5301:5302   */\n      dup3\n        /* \"#utility.yul\":5298:5299   */\n      dup3\n        /* \"#utility.yul\":5294:5303   */\n      sub\n        /* \"#utility.yul\":5286:5303   */\n      swap1\n      pop\n        /* \"#utility.yul\":5325:5326   */\n      dup2\n        /* \"#utility.yul\":5319:5323   */\n      dup2\n        /* \"#utility.yul\":5316:5327   */\n      gt\n        /* \"#utility.yul\":5313:5350   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":5330:5348   */\n      tag_235\n      tag_160\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5313:5350   */\n    tag_234:\n        /* \"#utility.yul\":5163:5357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5363:5695   */\n    tag_62:\n        /* \"#utility.yul\":5484:5488   */\n      0x00\n        /* \"#utility.yul\":5522:5524   */\n      0x40\n        /* \"#utility.yul\":5511:5520   */\n      dup3\n        /* \"#utility.yul\":5507:5525   */\n      add\n        /* \"#utility.yul\":5499:5525   */\n      swap1\n      pop\n        /* \"#utility.yul\":5535:5606   */\n      tag_237\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5592:5601   */\n      dup4\n        /* \"#utility.yul\":5588:5605   */\n      add\n        /* \"#utility.yul\":5579:5585   */\n      dup6\n        /* \"#utility.yul\":5535:5606   */\n      tag_156\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5616:5688   */\n      tag_238\n        /* \"#utility.yul\":5684:5686   */\n      0x20\n        /* \"#utility.yul\":5673:5682   */\n      dup4\n        /* \"#utility.yul\":5669:5687   */\n      add\n        /* \"#utility.yul\":5660:5666   */\n      dup5\n        /* \"#utility.yul\":5616:5688   */\n      tag_148\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5363:5695   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5701:5791   */\n    tag_161:\n        /* \"#utility.yul\":5735:5742   */\n      0x00\n        /* \"#utility.yul\":5778:5783   */\n      dup2\n        /* \"#utility.yul\":5771:5784   */\n      iszero\n        /* \"#utility.yul\":5764:5785   */\n      iszero\n        /* \"#utility.yul\":5753:5785   */\n      swap1\n      pop\n        /* \"#utility.yul\":5701:5791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5797:5913   */\n    tag_162:\n        /* \"#utility.yul\":5867:5888   */\n      tag_241\n        /* \"#utility.yul\":5882:5887   */\n      dup2\n        /* \"#utility.yul\":5867:5888   */\n      tag_161\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5860:5865   */\n      dup2\n        /* \"#utility.yul\":5857:5889   */\n      eq\n        /* \"#utility.yul\":5847:5907   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":5903:5904   */\n      0x00\n        /* \"#utility.yul\":5900:5901   */\n      dup1\n        /* \"#utility.yul\":5893:5905   */\n      revert\n        /* \"#utility.yul\":5847:5907   */\n    tag_242:\n        /* \"#utility.yul\":5797:5913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5919:6056   */\n    tag_163:\n        /* \"#utility.yul\":5973:5978   */\n      0x00\n        /* \"#utility.yul\":6004:6010   */\n      dup2\n        /* \"#utility.yul\":5998:6011   */\n      mload\n        /* \"#utility.yul\":5989:6011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6020:6050   */\n      tag_244\n        /* \"#utility.yul\":6044:6049   */\n      dup2\n        /* \"#utility.yul\":6020:6050   */\n      tag_162\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5919:6056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6062:6407   */\n    tag_66:\n        /* \"#utility.yul\":6129:6135   */\n      0x00\n        /* \"#utility.yul\":6178:6180   */\n      0x20\n        /* \"#utility.yul\":6166:6175   */\n      dup3\n        /* \"#utility.yul\":6157:6164   */\n      dup5\n        /* \"#utility.yul\":6153:6176   */\n      sub\n        /* \"#utility.yul\":6149:6181   */\n      slt\n        /* \"#utility.yul\":6146:6265   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6184:6263   */\n      tag_247\n      tag_141\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6146:6265   */\n    tag_246:\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6329:6390   */\n      tag_248\n        /* \"#utility.yul\":6382:6389   */\n      dup5\n        /* \"#utility.yul\":6373:6379   */\n      dup3\n        /* \"#utility.yul\":6362:6371   */\n      dup6\n        /* \"#utility.yul\":6358:6380   */\n      add\n        /* \"#utility.yul\":6329:6390   */\n      tag_163\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6319:6390   */\n      swap2\n      pop\n        /* \"#utility.yul\":6275:6400   */\n      pop\n        /* \"#utility.yul\":6062:6407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6413:6584   */\n    tag_164:\n        /* \"#utility.yul\":6553:6576   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":6549:6550   */\n      0x00\n        /* \"#utility.yul\":6541:6547   */\n      dup3\n        /* \"#utility.yul\":6537:6551   */\n      add\n        /* \"#utility.yul\":6530:6577   */\n      mstore\n        /* \"#utility.yul\":6413:6584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6956   */\n    tag_165:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6753:6820   */\n      tag_251\n        /* \"#utility.yul\":6817:6819   */\n      0x15\n        /* \"#utility.yul\":6812:6815   */\n      dup4\n        /* \"#utility.yul\":6753:6820   */\n      tag_157\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6746:6820   */\n      swap2\n      pop\n        /* \"#utility.yul\":6829:6922   */\n      tag_252\n        /* \"#utility.yul\":6918:6921   */\n      dup3\n        /* \"#utility.yul\":6829:6922   */\n      tag_164\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6947:6949   */\n      0x20\n        /* \"#utility.yul\":6942:6945   */\n      dup3\n        /* \"#utility.yul\":6938:6950   */\n      add\n        /* \"#utility.yul\":6931:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6962:7381   */\n    tag_69:\n        /* \"#utility.yul\":7128:7132   */\n      0x00\n        /* \"#utility.yul\":7166:7168   */\n      0x20\n        /* \"#utility.yul\":7155:7164   */\n      dup3\n        /* \"#utility.yul\":7151:7169   */\n      add\n        /* \"#utility.yul\":7143:7169   */\n      swap1\n      pop\n        /* \"#utility.yul\":7215:7224   */\n      dup2\n        /* \"#utility.yul\":7209:7213   */\n      dup2\n        /* \"#utility.yul\":7205:7225   */\n      sub\n        /* \"#utility.yul\":7201:7202   */\n      0x00\n        /* \"#utility.yul\":7190:7199   */\n      dup4\n        /* \"#utility.yul\":7186:7203   */\n      add\n        /* \"#utility.yul\":7179:7226   */\n      mstore\n        /* \"#utility.yul\":7243:7374   */\n      tag_254\n        /* \"#utility.yul\":7369:7373   */\n      dup2\n        /* \"#utility.yul\":7243:7374   */\n      tag_165\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7235:7374   */\n      swap1\n      pop\n        /* \"#utility.yul\":6962:7381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7387:7561   */\n    tag_166:\n        /* \"#utility.yul\":7527:7553   */\n      0x426f6e757320706572696f64206d757374206265203e20300000000000000000\n        /* \"#utility.yul\":7523:7524   */\n      0x00\n        /* \"#utility.yul\":7515:7521   */\n      dup3\n        /* \"#utility.yul\":7511:7525   */\n      add\n        /* \"#utility.yul\":7504:7554   */\n      mstore\n        /* \"#utility.yul\":7387:7561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7567:7933   */\n    tag_167:\n        /* \"#utility.yul\":7709:7712   */\n      0x00\n        /* \"#utility.yul\":7730:7797   */\n      tag_257\n        /* \"#utility.yul\":7794:7796   */\n      0x18\n        /* \"#utility.yul\":7789:7792   */\n      dup4\n        /* \"#utility.yul\":7730:7797   */\n      tag_157\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7723:7797   */\n      swap2\n      pop\n        /* \"#utility.yul\":7806:7899   */\n      tag_258\n        /* \"#utility.yul\":7895:7898   */\n      dup3\n        /* \"#utility.yul\":7806:7899   */\n      tag_166\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7924:7926   */\n      0x20\n        /* \"#utility.yul\":7919:7922   */\n      dup3\n        /* \"#utility.yul\":7915:7927   */\n      add\n        /* \"#utility.yul\":7908:7927   */\n      swap1\n      pop\n        /* \"#utility.yul\":7567:7933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7939:8358   */\n    tag_85:\n        /* \"#utility.yul\":8105:8109   */\n      0x00\n        /* \"#utility.yul\":8143:8145   */\n      0x20\n        /* \"#utility.yul\":8132:8141   */\n      dup3\n        /* \"#utility.yul\":8128:8146   */\n      add\n        /* \"#utility.yul\":8120:8146   */\n      swap1\n      pop\n        /* \"#utility.yul\":8192:8201   */\n      dup2\n        /* \"#utility.yul\":8186:8190   */\n      dup2\n        /* \"#utility.yul\":8182:8202   */\n      sub\n        /* \"#utility.yul\":8178:8179   */\n      0x00\n        /* \"#utility.yul\":8167:8176   */\n      dup4\n        /* \"#utility.yul\":8163:8180   */\n      add\n        /* \"#utility.yul\":8156:8203   */\n      mstore\n        /* \"#utility.yul\":8220:8351   */\n      tag_260\n        /* \"#utility.yul\":8346:8350   */\n      dup2\n        /* \"#utility.yul\":8220:8351   */\n      tag_167\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8212:8351   */\n      swap1\n      pop\n        /* \"#utility.yul\":7939:8358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8364:8540   */\n    tag_168:\n        /* \"#utility.yul\":8504:8532   */\n      0x4465706f73697420616d6f756e74206d757374206265203e2030000000000000\n        /* \"#utility.yul\":8500:8501   */\n      0x00\n        /* \"#utility.yul\":8492:8498   */\n      dup3\n        /* \"#utility.yul\":8488:8502   */\n      add\n        /* \"#utility.yul\":8481:8533   */\n      mstore\n        /* \"#utility.yul\":8364:8540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8546:8912   */\n    tag_169:\n        /* \"#utility.yul\":8688:8691   */\n      0x00\n        /* \"#utility.yul\":8709:8776   */\n      tag_263\n        /* \"#utility.yul\":8773:8775   */\n      0x1a\n        /* \"#utility.yul\":8768:8771   */\n      dup4\n        /* \"#utility.yul\":8709:8776   */\n      tag_157\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8702:8776   */\n      swap2\n      pop\n        /* \"#utility.yul\":8785:8878   */\n      tag_264\n        /* \"#utility.yul\":8874:8877   */\n      dup3\n        /* \"#utility.yul\":8785:8878   */\n      tag_168\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8903:8905   */\n      0x20\n        /* \"#utility.yul\":8898:8901   */\n      dup3\n        /* \"#utility.yul\":8894:8906   */\n      add\n        /* \"#utility.yul\":8887:8906   */\n      swap1\n      pop\n        /* \"#utility.yul\":8546:8912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8918:9337   */\n    tag_92:\n        /* \"#utility.yul\":9084:9088   */\n      0x00\n        /* \"#utility.yul\":9122:9124   */\n      0x20\n        /* \"#utility.yul\":9111:9120   */\n      dup3\n        /* \"#utility.yul\":9107:9125   */\n      add\n        /* \"#utility.yul\":9099:9125   */\n      swap1\n      pop\n        /* \"#utility.yul\":9171:9180   */\n      dup2\n        /* \"#utility.yul\":9165:9169   */\n      dup2\n        /* \"#utility.yul\":9161:9181   */\n      sub\n        /* \"#utility.yul\":9157:9158   */\n      0x00\n        /* \"#utility.yul\":9146:9155   */\n      dup4\n        /* \"#utility.yul\":9142:9159   */\n      add\n        /* \"#utility.yul\":9135:9182   */\n      mstore\n        /* \"#utility.yul\":9199:9330   */\n      tag_266\n        /* \"#utility.yul\":9325:9329   */\n      dup2\n        /* \"#utility.yul\":9199:9330   */\n      tag_169\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9191:9330   */\n      swap1\n      pop\n        /* \"#utility.yul\":8918:9337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9343:9785   */\n    tag_94:\n        /* \"#utility.yul\":9492:9496   */\n      0x00\n        /* \"#utility.yul\":9530:9532   */\n      0x60\n        /* \"#utility.yul\":9519:9528   */\n      dup3\n        /* \"#utility.yul\":9515:9533   */\n      add\n        /* \"#utility.yul\":9507:9533   */\n      swap1\n      pop\n        /* \"#utility.yul\":9543:9614   */\n      tag_268\n        /* \"#utility.yul\":9611:9612   */\n      0x00\n        /* \"#utility.yul\":9600:9609   */\n      dup4\n        /* \"#utility.yul\":9596:9613   */\n      add\n        /* \"#utility.yul\":9587:9593   */\n      dup7\n        /* \"#utility.yul\":9543:9614   */\n      tag_156\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9624:9696   */\n      tag_269\n        /* \"#utility.yul\":9692:9694   */\n      0x20\n        /* \"#utility.yul\":9681:9690   */\n      dup4\n        /* \"#utility.yul\":9677:9695   */\n      add\n        /* \"#utility.yul\":9668:9674   */\n      dup6\n        /* \"#utility.yul\":9624:9696   */\n      tag_156\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9706:9778   */\n      tag_270\n        /* \"#utility.yul\":9774:9776   */\n      0x40\n        /* \"#utility.yul\":9763:9772   */\n      dup4\n        /* \"#utility.yul\":9759:9777   */\n      add\n        /* \"#utility.yul\":9750:9756   */\n      dup5\n        /* \"#utility.yul\":9706:9778   */\n      tag_148\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9343:9785   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9791:9982   */\n    tag_101:\n        /* \"#utility.yul\":9831:9834   */\n      0x00\n        /* \"#utility.yul\":9850:9870   */\n      tag_272\n        /* \"#utility.yul\":9868:9869   */\n      dup3\n        /* \"#utility.yul\":9850:9870   */\n      tag_147\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9845:9870   */\n      swap2\n      pop\n        /* \"#utility.yul\":9884:9904   */\n      tag_273\n        /* \"#utility.yul\":9902:9903   */\n      dup4\n        /* \"#utility.yul\":9884:9904   */\n      tag_147\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9879:9904   */\n      swap3\n      pop\n        /* \"#utility.yul\":9927:9928   */\n      dup3\n        /* \"#utility.yul\":9924:9925   */\n      dup3\n        /* \"#utility.yul\":9920:9929   */\n      add\n        /* \"#utility.yul\":9913:9929   */\n      swap1\n      pop\n        /* \"#utility.yul\":9948:9951   */\n      dup1\n        /* \"#utility.yul\":9945:9946   */\n      dup3\n        /* \"#utility.yul\":9942:9952   */\n      gt\n        /* \"#utility.yul\":9939:9975   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":9955:9973   */\n      tag_275\n      tag_160\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9939:9975   */\n    tag_274:\n        /* \"#utility.yul\":9791:9982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9988:10398   */\n    tag_105:\n        /* \"#utility.yul\":10028:10035   */\n      0x00\n        /* \"#utility.yul\":10051:10071   */\n      tag_277\n        /* \"#utility.yul\":10069:10070   */\n      dup3\n        /* \"#utility.yul\":10051:10071   */\n      tag_147\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10046:10071   */\n      swap2\n      pop\n        /* \"#utility.yul\":10085:10105   */\n      tag_278\n        /* \"#utility.yul\":10103:10104   */\n      dup4\n        /* \"#utility.yul\":10085:10105   */\n      tag_147\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10080:10105   */\n      swap3\n      pop\n        /* \"#utility.yul\":10140:10141   */\n      dup3\n        /* \"#utility.yul\":10137:10138   */\n      dup3\n        /* \"#utility.yul\":10133:10142   */\n      mul\n        /* \"#utility.yul\":10162:10192   */\n      tag_279\n        /* \"#utility.yul\":10180:10191   */\n      dup2\n        /* \"#utility.yul\":10162:10192   */\n      tag_147\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10151:10192   */\n      swap2\n      pop\n        /* \"#utility.yul\":10341:10342   */\n      dup3\n        /* \"#utility.yul\":10332:10339   */\n      dup3\n        /* \"#utility.yul\":10328:10343   */\n      div\n        /* \"#utility.yul\":10325:10326   */\n      dup5\n        /* \"#utility.yul\":10322:10344   */\n      eq\n        /* \"#utility.yul\":10302:10303   */\n      dup4\n        /* \"#utility.yul\":10295:10304   */\n      iszero\n        /* \"#utility.yul\":10275:10358   */\n      or\n        /* \"#utility.yul\":10252:10391   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10371:10389   */\n      tag_281\n      tag_160\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10252:10391   */\n    tag_280:\n        /* \"#utility.yul\":10036:10398   */\n      pop\n        /* \"#utility.yul\":9988:10398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10404:10584   */\n    tag_170:\n        /* \"#utility.yul\":10452:10529   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10449:10450   */\n      0x00\n        /* \"#utility.yul\":10442:10530   */\n      mstore\n        /* \"#utility.yul\":10549:10553   */\n      0x12\n        /* \"#utility.yul\":10546:10547   */\n      0x04\n        /* \"#utility.yul\":10539:10554   */\n      mstore\n        /* \"#utility.yul\":10573:10577   */\n      0x24\n        /* \"#utility.yul\":10570:10571   */\n      0x00\n        /* \"#utility.yul\":10563:10578   */\n      revert\n        /* \"#utility.yul\":10590:10775   */\n    tag_109:\n        /* \"#utility.yul\":10630:10631   */\n      0x00\n        /* \"#utility.yul\":10647:10667   */\n      tag_284\n        /* \"#utility.yul\":10665:10666   */\n      dup3\n        /* \"#utility.yul\":10647:10667   */\n      tag_147\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10642:10667   */\n      swap2\n      pop\n        /* \"#utility.yul\":10681:10701   */\n      tag_285\n        /* \"#utility.yul\":10699:10700   */\n      dup4\n        /* \"#utility.yul\":10681:10701   */\n      tag_147\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10676:10701   */\n      swap3\n      pop\n        /* \"#utility.yul\":10720:10721   */\n      dup3\n        /* \"#utility.yul\":10710:10745   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":10725:10743   */\n      tag_287\n      tag_170\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10710:10745   */\n    tag_286:\n        /* \"#utility.yul\":10767:10768   */\n      dup3\n        /* \"#utility.yul\":10764:10765   */\n      dup3\n        /* \"#utility.yul\":10760:10769   */\n      div\n        /* \"#utility.yul\":10755:10769   */\n      swap1\n      pop\n        /* \"#utility.yul\":10590:10775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10781:10962   */\n    tag_171:\n        /* \"#utility.yul\":10921:10954   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10917:10918   */\n      0x00\n        /* \"#utility.yul\":10909:10915   */\n      dup3\n        /* \"#utility.yul\":10905:10919   */\n      add\n        /* \"#utility.yul\":10898:10955   */\n      mstore\n        /* \"#utility.yul\":10781:10962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10968:11334   */\n    tag_172:\n        /* \"#utility.yul\":11110:11113   */\n      0x00\n        /* \"#utility.yul\":11131:11198   */\n      tag_290\n        /* \"#utility.yul\":11195:11197   */\n      0x1f\n        /* \"#utility.yul\":11190:11193   */\n      dup4\n        /* \"#utility.yul\":11131:11198   */\n      tag_157\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11124:11198   */\n      swap2\n      pop\n        /* \"#utility.yul\":11207:11300   */\n      tag_291\n        /* \"#utility.yul\":11296:11299   */\n      dup3\n        /* \"#utility.yul\":11207:11300   */\n      tag_171\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11325:11327   */\n      0x20\n        /* \"#utility.yul\":11320:11323   */\n      dup3\n        /* \"#utility.yul\":11316:11328   */\n      add\n        /* \"#utility.yul\":11309:11328   */\n      swap1\n      pop\n        /* \"#utility.yul\":10968:11334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11759   */\n    tag_129:\n        /* \"#utility.yul\":11506:11510   */\n      0x00\n        /* \"#utility.yul\":11544:11546   */\n      0x20\n        /* \"#utility.yul\":11533:11542   */\n      dup3\n        /* \"#utility.yul\":11529:11547   */\n      add\n        /* \"#utility.yul\":11521:11547   */\n      swap1\n      pop\n        /* \"#utility.yul\":11593:11602   */\n      dup2\n        /* \"#utility.yul\":11587:11591   */\n      dup2\n        /* \"#utility.yul\":11583:11603   */\n      sub\n        /* \"#utility.yul\":11579:11580   */\n      0x00\n        /* \"#utility.yul\":11568:11577   */\n      dup4\n        /* \"#utility.yul\":11564:11581   */\n      add\n        /* \"#utility.yul\":11557:11604   */\n      mstore\n        /* \"#utility.yul\":11621:11752   */\n      tag_293\n        /* \"#utility.yul\":11747:11751   */\n      dup2\n        /* \"#utility.yul\":11621:11752   */\n      tag_172\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":11613:11752   */\n      swap1\n      pop\n        /* \"#utility.yul\":11340:11759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dc4269f5464315540c534f1a4eeb7a88ac554af7e6359efbde27642a56b423e664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_405": {
									"entryPoint": null,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 456,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4193:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:5",
														"type": ""
													}
												],
												"src": "845:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:5"
															},
															"nodeType": "YulIf",
															"src": "981:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:5",
														"type": ""
													}
												],
												"src": "928:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:5",
														"type": ""
													}
												],
												"src": "1056:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:5"
															},
															"nodeType": "YulIf",
															"src": "1309:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:5",
														"type": ""
													}
												],
												"src": "1205:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1800:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1823:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1805:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1771:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1778:3:5",
														"type": ""
													}
												],
												"src": "1718:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1950:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1950:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1986:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1986:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1912:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1924:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1935:4:5",
														"type": ""
													}
												],
												"src": "1842:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2183:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2188:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2176:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2204:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2223:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2204:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2138:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2143:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2154:11:5",
														"type": ""
													}
												],
												"src": "2070:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:14:5"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:23:5",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2362:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2343:6:5",
														"type": ""
													}
												],
												"src": "2245:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2568:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2578:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2644:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2585:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2578:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2750:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nodeType": "YulIdentifier",
																	"src": "2661:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2661:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2763:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2774:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2770:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2556:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2564:3:5",
														"type": ""
													}
												],
												"src": "2422:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2965:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2975:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2987:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2975:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3022:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3033:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3041:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3047:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3037:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3037:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3011:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3011:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3067:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3201:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3075:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3067:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2945:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2960:4:5",
														"type": ""
													}
												],
												"src": "2794:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:68:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3347:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3355:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3343:14:5"
																	},
																	{
																		"hexValue": "426f6e757320706572696f64206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3359:26:5",
																		"type": "",
																		"value": "Bonus period must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3336:50:5"
														}
													]
												},
												"name": "store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3317:6:5",
														"type": ""
													}
												],
												"src": "3219:174:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3545:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3555:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3621:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3562:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3727:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
																	"nodeType": "YulIdentifier",
																	"src": "3638:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3638:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3740:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3751:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3756:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3747:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3747:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3740:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3533:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3541:3:5",
														"type": ""
													}
												],
												"src": "3399:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3952:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3964:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3975:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3960:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3952:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4018:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4014:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4014:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3988:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4044:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4178:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4052:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4044:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3922:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3937:4:5",
														"type": ""
													}
												],
												"src": "3771:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bonus period must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200149a3803806200149a833981810160405281019062000036919062000326565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a191906200037c565b60405180910390fd5b620000bb81620001c860201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000134576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012b90620003f5565b60405180910390fd5b5f811162000179576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001709062000463565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505062000483565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002b8826200028d565b9050919050565b620002ca81620002ac565b8114620002d5575f80fd5b50565b5f81519050620002e881620002bf565b92915050565b5f819050919050565b6200030281620002ee565b81146200030d575f80fd5b50565b5f815190506200032081620002f7565b92915050565b5f80604083850312156200033f576200033e62000289565b5b5f6200034e85828601620002d8565b9250506020620003618582860162000310565b9150509250929050565b6200037681620002ac565b82525050565b5f602082019050620003915f8301846200036b565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f620003dd60158362000397565b9150620003ea82620003a7565b602082019050919050565b5f6020820190508181035f8301526200040e81620003cf565b9050919050565b7f426f6e757320706572696f64206d757374206265203e203000000000000000005f82015250565b5f6200044b60188362000397565b9150620004588262000415565b602082019050919050565b5f6020820190508181035f8301526200047c816200043d565b9050919050565b61100980620004915f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b14610133578063b35bae6814610151578063b6b55f251461016d578063ec4d38b414610189578063f2fde38b146101b95761009c565b806316934fc4146100a05780632e1a7d4d146100d15780634af4a127146100ed578063715018a61461010b57806372f702f314610115575b5f80fd5b6100ba60048036038101906100b59190610a5a565b6101d5565b6040516100c8929190610a9d565b60405180910390f35b6100eb60048036038101906100e69190610aee565b6101f5565b005b6100f56103e5565b6040516101029190610b19565b60405180910390f35b6101136103eb565b005b61011d6103fe565b60405161012a9190610b8d565b60405180910390f35b61013b610423565b6040516101489190610bb5565b60405180910390f35b61016b60048036038101906101669190610aee565b61044a565b005b61018760048036038101906101829190610aee565b6104d5565b005b6101a3600480360381019061019e9190610a5a565b610706565b6040516101b09190610b19565b60405180910390f35b6101d360048036038101906101ce9190610a5a565b6107d1565b005b6004602052805f5260405f205f91509050805f0154908060010154905082565b6101fd610855565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f01541015610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a90610c28565b60405180910390fd5b81815f015f8282546102959190610c73565b925050819055505f815f0154036102b0575f81600101819055505b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161030c929190610ca6565b6020604051808303815f875af1158015610328573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034c9190610d02565b61038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038290610d77565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516103d19190610b19565b60405180910390a2506103e26108a4565b50565b60035481565b6103f36108ad565b6103fc5f610934565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104526108ad565b5f8111610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610ddf565b60405180910390fd5b806003819055507fdec900c033f508b1a342c6903692eb0c7ce2a86b1c98a96cba42983a032c9ad8816040516104ca9190610b19565b60405180910390a150565b6104dd610855565b5f811161051f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051690610e47565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161057d93929190610e65565b6020604051808303815f875af1158015610599573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105bd9190610d02565b6105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f390610d77565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f82825f015461064c9190610e9a565b90505f825f015403610666574282600101819055506106a3565b8083426106739190610ecd565b835f015484600101546106869190610ecd565b6106909190610e9a565b61069a9190610f3b565b82600101819055505b80825f01819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4846040516106f19190610b19565b60405180910390a250506107036108a4565b50565b5f8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01540361075a575f9150506107cc565b5f81600101544261076b9190610c73565b90505f600354670de0b6b3a7640000836107859190610ecd565b61078f9190610f3b565b670de0b6b3a76400006107a29190610e9a565b9050670de0b6b3a764000081845f01546107bc9190610ecd565b6107c69190610f3b565b93505050505b919050565b6107d96108ad565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610849575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108409190610bb5565b60405180910390fd5b61085281610934565b50565b60026001540361089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190610fb5565b60405180910390fd5b6002600181905550565b60018081905550565b6108b56109f5565b73ffffffffffffffffffffffffffffffffffffffff166108d3610423565b73ffffffffffffffffffffffffffffffffffffffff1614610932576108f66109f5565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109299190610bb5565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a2982610a00565b9050919050565b610a3981610a1f565b8114610a43575f80fd5b50565b5f81359050610a5481610a30565b92915050565b5f60208284031215610a6f57610a6e6109fc565b5b5f610a7c84828501610a46565b91505092915050565b5f819050919050565b610a9781610a85565b82525050565b5f604082019050610ab05f830185610a8e565b610abd6020830184610a8e565b9392505050565b610acd81610a85565b8114610ad7575f80fd5b50565b5f81359050610ae881610ac4565b92915050565b5f60208284031215610b0357610b026109fc565b5b5f610b1084828501610ada565b91505092915050565b5f602082019050610b2c5f830184610a8e565b92915050565b5f819050919050565b5f610b55610b50610b4b84610a00565b610b32565b610a00565b9050919050565b5f610b6682610b3b565b9050919050565b5f610b7782610b5c565b9050919050565b610b8781610b6d565b82525050565b5f602082019050610ba05f830184610b7e565b92915050565b610baf81610a1f565b82525050565b5f602082019050610bc85f830184610ba6565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610c12601b83610bce565b9150610c1d82610bde565b602082019050919050565b5f6020820190508181035f830152610c3f81610c06565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c7d82610a85565b9150610c8883610a85565b9250828203905081811115610ca057610c9f610c46565b5b92915050565b5f604082019050610cb95f830185610ba6565b610cc66020830184610a8e565b9392505050565b5f8115159050919050565b610ce181610ccd565b8114610ceb575f80fd5b50565b5f81519050610cfc81610cd8565b92915050565b5f60208284031215610d1757610d166109fc565b5b5f610d2484828501610cee565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f610d61601583610bce565b9150610d6c82610d2d565b602082019050919050565b5f6020820190508181035f830152610d8e81610d55565b9050919050565b7f426f6e757320706572696f64206d757374206265203e203000000000000000005f82015250565b5f610dc9601883610bce565b9150610dd482610d95565b602082019050919050565b5f6020820190508181035f830152610df681610dbd565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265203e20300000000000005f82015250565b5f610e31601a83610bce565b9150610e3c82610dfd565b602082019050919050565b5f6020820190508181035f830152610e5e81610e25565b9050919050565b5f606082019050610e785f830186610ba6565b610e856020830185610ba6565b610e926040830184610a8e565b949350505050565b5f610ea482610a85565b9150610eaf83610a85565b9250828201905080821115610ec757610ec6610c46565b5b92915050565b5f610ed782610a85565b9150610ee283610a85565b9250828202610ef081610a85565b91508282048414831517610f0757610f06610c46565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f4582610a85565b9150610f5083610a85565b925082610f6057610f5f610f0e565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610f9f601f83610bce565b9150610faa82610f6b565b602082019050919050565b5f6020820190508181035f830152610fcc81610f93565b905091905056fea2646970667358221220dc4269f5464315540c534f1a4eeb7a88ac554af7e6359efbde27642a56b423e664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x149A CODESIZE SUB DUP1 PUSH3 0x149A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x326 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12B SWAP1 PUSH3 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH3 0x179 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x170 SWAP1 PUSH3 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x483 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2B8 DUP3 PUSH3 0x28D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2CA DUP2 PUSH3 0x2AC JUMP JUMPDEST DUP2 EQ PUSH3 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2E8 DUP2 PUSH3 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x302 DUP2 PUSH3 0x2EE JUMP JUMPDEST DUP2 EQ PUSH3 0x30D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x320 DUP2 PUSH3 0x2F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x33F JUMPI PUSH3 0x33E PUSH3 0x289 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x34E DUP6 DUP3 DUP7 ADD PUSH3 0x2D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x361 DUP6 DUP3 DUP7 ADD PUSH3 0x310 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x376 DUP2 PUSH3 0x2AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x391 PUSH0 DUP4 ADD DUP5 PUSH3 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x3DD PUSH1 0x15 DUP4 PUSH3 0x397 JUMP JUMPDEST SWAP2 POP PUSH3 0x3EA DUP3 PUSH3 0x3A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x40E DUP2 PUSH3 0x3CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6E757320706572696F64206D757374206265203E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x44B PUSH1 0x18 DUP4 PUSH3 0x397 JUMP JUMPDEST SWAP2 POP PUSH3 0x458 DUP3 PUSH3 0x415 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x47C DUP2 PUSH3 0x43D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1009 DUP1 PUSH3 0x491 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xB35BAE68 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xEC4D38B4 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4AF4A127 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP3 SWAP2 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x1F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x3EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x855 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x2B0 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP3 SWAP2 SWAP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x328 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x382 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x3E2 PUSH2 0x8A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x3FC PUSH0 PUSH2 0x934 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x452 PUSH2 0x8AD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xDEC900C033F508B1A342C6903692EB0C7CE2A86B1C98A96CBA42983A032C9AD8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x855 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x51F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F3 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 DUP3 PUSH0 ADD SLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD SUB PUSH2 0x666 JUMPI TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6A3 JUMP JUMPDEST DUP1 DUP4 TIMESTAMP PUSH2 0x673 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x690 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0x69A SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x703 PUSH2 0x8A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x75A JUMPI PUSH0 SWAP2 POP POP PUSH2 0x7CC JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x76B SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x78F SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH0 ADD SLOAD PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D9 PUSH2 0x8AD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x849 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x852 DUP2 PUSH2 0x934 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8B5 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D3 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x932 JUMPI PUSH2 0x8F6 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA29 DUP3 PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA39 DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP2 EQ PUSH2 0xA43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA54 DUP2 PUSH2 0xA30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6F JUMPI PUSH2 0xA6E PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA7C DUP5 DUP3 DUP6 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA97 DUP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAB0 PUSH0 DUP4 ADD DUP6 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0xABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xA85 JUMP JUMPDEST DUP2 EQ PUSH2 0xAD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAE8 DUP2 PUSH2 0xAC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB02 PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB10 DUP5 DUP3 DUP6 ADD PUSH2 0xADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2C PUSH0 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB55 PUSH2 0xB50 PUSH2 0xB4B DUP5 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB66 DUP3 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP3 PUSH2 0xB5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB87 DUP2 PUSH2 0xB6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA0 PUSH0 DUP4 ADD DUP5 PUSH2 0xB7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC12 PUSH1 0x1B DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xC1D DUP3 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC3F DUP2 PUSH2 0xC06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC7D DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xC88 DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC9F PUSH2 0xC46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCB9 PUSH0 DUP4 ADD DUP6 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xCC6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCD JUMP JUMPDEST DUP2 EQ PUSH2 0xCEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCFC DUP2 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD17 JUMPI PUSH2 0xD16 PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD24 DUP5 DUP3 DUP6 ADD PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD61 PUSH1 0x15 DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xD6C DUP3 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD8E DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6E757320706572696F64206D757374206265203E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDC9 PUSH1 0x18 DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xDD4 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF6 DUP2 PUSH2 0xDBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D757374206265203E2030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE31 PUSH1 0x1A DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xE3C DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5E DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE78 PUSH0 DUP4 ADD DUP7 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xE85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xE92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEA4 DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAF DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xC46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED7 DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE2 DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEF0 DUP2 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF07 JUMPI PUSH2 0xF06 PUSH2 0xC46 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF45 DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xF50 DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0xF0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9F PUSH1 0x1F DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xFAA DUP3 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFCC DUP2 PUSH2 0xF93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC TIMESTAMP PUSH10 0xF5464315540C534F1A4E 0xEB PUSH27 0x88AC554AF7E6359EFBDE27642A56B423E664736F6C634300081400 CALLER ",
							"sourceMap": "577:4185:4:-:0;;;1617:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1682:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;1737:1:4::1;1712:27;;:13;:27;;::::0;1704:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1798:1;1783:12;:16;1775:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:13;1839:12;;:36;;;;;;;;;;;;;;;;;;1899:12;1885:11;:26;;;;1617:301:::0;;577:4185;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:118::-;1805:24;1823:5;1805:24;:::i;:::-;1800:3;1793:37;1718:118;;:::o;1842:222::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:71;2054:1;2043:9;2039:17;2030:6;1986:71;:::i;:::-;1842:222;;;;:::o;2070:169::-;2154:11;2188:6;2183:3;2176:19;2228:4;2223:3;2219:14;2204:29;;2070:169;;;;:::o;2245:171::-;2385:23;2381:1;2373:6;2369:14;2362:47;2245:171;:::o;2422:366::-;2564:3;2585:67;2649:2;2644:3;2585:67;:::i;:::-;2578:74;;2661:93;2750:3;2661:93;:::i;:::-;2779:2;2774:3;2770:12;2763:19;;2422:366;;;:::o;2794:419::-;2960:4;2998:2;2987:9;2983:18;2975:26;;3047:9;3041:4;3037:20;3033:1;3022:9;3018:17;3011:47;3075:131;3201:4;3075:131;:::i;:::-;3067:139;;2794:419;;;:::o;3219:174::-;3359:26;3355:1;3347:6;3343:14;3336:50;3219:174;:::o;3399:366::-;3541:3;3562:67;3626:2;3621:3;3562:67;:::i;:::-;3555:74;;3638:93;3727:3;3638:93;:::i;:::-;3756:2;3751:3;3747:12;3740:19;;3399:366;;;:::o;3771:419::-;3937:4;3975:2;3964:9;3960:18;3952:26;;4024:9;4018:4;4014:20;4010:1;3999:9;3995:17;3988:47;4052:131;4178:4;4052:131;:::i;:::-;4044:139;;3771:419;;;:::o;577:4185:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2221,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 2549,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2212,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2133,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2356,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bonusPeriod_337": {
									"entryPoint": 997,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_494": {
									"entryPoint": 1237,
									"id": 494,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@effectiveStake_604": {
									"entryPoint": 1798,
									"id": 604,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1059,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1003,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakes_349": {
									"entryPoint": 469,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_334": {
									"entryPoint": 1022,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2001,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateBonusPeriod_628": {
									"entryPoint": 1098,
									"id": 628,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_553": {
									"entryPoint": 501,
									"id": 553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11762:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1519:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1531:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1542:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1519:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1623:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1636:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1636:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1473:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1485:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1493:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1504:4:5",
														"type": ""
													}
												],
												"src": "1383:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1833:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1823:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1823:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1823:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1787:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1812:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1794:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1794:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1784:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1777:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:43:5"
															},
															"nodeType": "YulIf",
															"src": "1774:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:5",
														"type": ""
													}
												],
												"src": "1721:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1933:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1911:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1976:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1949:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1879:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1887:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1895:5:5",
														"type": ""
													}
												],
												"src": "1849:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2060:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2106:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2108:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2108:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2108:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2081:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2090:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2077:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2073:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2073:32:5"
															},
															"nodeType": "YulIf",
															"src": "2070:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2199:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2214:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2218:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2243:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2278:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2289:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2274:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2274:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2298:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2253:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2253:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2243:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2030:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2041:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2053:6:5",
														"type": ""
													}
												],
												"src": "1994:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2427:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2437:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2449:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2445:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2437:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2541:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2526:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2473:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2399:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2411:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2422:4:5",
														"type": ""
													}
												],
												"src": "2329:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2589:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2599:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2606:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2599:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2575:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2585:3:5",
														"type": ""
													}
												],
												"src": "2557:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2683:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2693:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2751:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2733:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2733:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2724:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2724:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2706:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2706:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2693:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2663:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2673:9:5",
														"type": ""
													}
												],
												"src": "2623:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2841:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2854:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2841:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2811:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2821:9:5",
														"type": ""
													}
												],
												"src": "2771:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2977:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2987:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3031:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3000:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2987:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2957:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2967:9:5",
														"type": ""
													}
												],
												"src": "2903:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3128:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3145:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3150:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3116:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3123:3:5",
														"type": ""
													}
												],
												"src": "3049:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3326:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3336:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3430:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3443:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3454:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3439:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3372:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3372:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3298:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3310:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3321:4:5",
														"type": ""
													}
												],
												"src": "3214:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3552:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3575:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3557:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3523:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3530:3:5",
														"type": ""
													}
												],
												"src": "3470:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3692:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3702:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3714:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3710:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3702:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3782:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3806:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3791:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3738:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3738:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3664:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3676:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3687:4:5",
														"type": ""
													}
												],
												"src": "3594:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3918:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3935:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3940:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3975:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3956:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3890:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3895:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3906:11:5",
														"type": ""
													}
												],
												"src": "3822:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4103:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4121:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4137:29:5",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4095:6:5",
														"type": ""
													}
												],
												"src": "3997:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4343:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																	"nodeType": "YulIdentifier",
																	"src": "4419:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4532:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4314:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4322:3:5",
														"type": ""
													}
												],
												"src": "4180:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4723:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4733:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4745:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4756:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4741:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4780:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4791:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4776:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4776:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4799:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4805:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4795:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4769:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4769:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4825:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4959:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4833:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4833:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4825:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4703:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4718:4:5",
														"type": ""
													}
												],
												"src": "4552:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5005:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5022:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5015:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5112:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5143:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5146:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5136:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5136:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4977:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5208:149:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5218:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5241:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5223:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5218:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5252:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5275:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5257:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5252:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5286:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5298:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5301:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5286:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5330:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5330:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5330:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5319:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5325:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5316:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:11:5"
															},
															"nodeType": "YulIf",
															"src": "5313:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5194:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5197:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5203:4:5",
														"type": ""
													}
												],
												"src": "5163:194:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5489:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5499:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5511:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5522:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5507:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5499:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5579:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5592:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5603:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5588:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5588:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5535:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5535:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5535:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5660:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5673:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5684:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5669:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5669:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5616:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5453:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5465:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5473:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5484:4:5",
														"type": ""
													}
												],
												"src": "5363:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5753:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5778:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5771:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5771:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5764:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5764:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5753:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5725:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5735:7:5",
														"type": ""
													}
												],
												"src": "5701:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5837:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5891:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5900:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5903:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5893:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5893:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5893:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5860:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5882:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5867:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5867:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5857:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5857:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5850:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5850:40:5"
															},
															"nodeType": "YulIf",
															"src": "5847:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5830:5:5",
														"type": ""
													}
												],
												"src": "5797:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5979:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5989:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5998:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5998:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5989:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6044:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6020:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5957:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5965:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5973:5:5",
														"type": ""
													}
												],
												"src": "5919:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6136:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6182:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6184:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6184:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6184:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6157:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6166:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6153:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6153:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6178:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6149:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6149:32:5"
															},
															"nodeType": "YulIf",
															"src": "6146:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6275:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6290:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6294:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6319:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6362:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6373:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6358:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6358:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6382:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6329:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6329:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6319:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6106:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6117:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6129:6:5",
														"type": ""
													}
												],
												"src": "6062:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6519:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6541:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6549:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:14:5"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6553:23:5",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6530:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6511:6:5",
														"type": ""
													}
												],
												"src": "6413:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6746:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6817:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6753:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6918:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nodeType": "YulIdentifier",
																	"src": "6829:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6829:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6931:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6942:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6938:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6938:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6724:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6732:3:5",
														"type": ""
													}
												],
												"src": "6590:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7133:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7143:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7190:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7201:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7186:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7186:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7209:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7215:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7179:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7235:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7369:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7243:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7243:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7235:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7113:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7128:4:5",
														"type": ""
													}
												],
												"src": "6962:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7493:68:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7515:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7523:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:14:5"
																	},
																	{
																		"hexValue": "426f6e757320706572696f64206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7527:26:5",
																		"type": "",
																		"value": "Bonus period must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7504:50:5"
														}
													]
												},
												"name": "store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7485:6:5",
														"type": ""
													}
												],
												"src": "7387:174:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7713:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7723:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7789:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7794:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7730:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7723:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7895:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
																	"nodeType": "YulIdentifier",
																	"src": "7806:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7806:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7806:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7908:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7919:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7924:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7915:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7915:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7908:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7701:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7709:3:5",
														"type": ""
													}
												],
												"src": "7567:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8110:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8120:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8132:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8143:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8128:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8128:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8120:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8167:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8163:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8163:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8186:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8192:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8182:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8156:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8156:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8212:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8346:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8220:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8212:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8090:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8105:4:5",
														"type": ""
													}
												],
												"src": "7939:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8470:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8492:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8500:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8488:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8488:14:5"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8504:28:5",
																		"type": "",
																		"value": "Deposit amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8481:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8481:52:5"
														}
													]
												},
												"name": "store_literal_in_memory_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8462:6:5",
														"type": ""
													}
												],
												"src": "8364:176:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8692:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8702:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8768:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8773:2:5",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8709:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8709:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8702:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8874:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4",
																	"nodeType": "YulIdentifier",
																	"src": "8785:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8785:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8785:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8887:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8898:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8903:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8894:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8894:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8680:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8688:3:5",
														"type": ""
													}
												],
												"src": "8546:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9089:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9099:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9111:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9122:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9107:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9107:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9099:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9146:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9157:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9142:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9142:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9165:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9161:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9161:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9135:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9135:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9191:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9325:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9199:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9191:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9069:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9084:4:5",
														"type": ""
													}
												],
												"src": "8918:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9497:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9507:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9519:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9530:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9515:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9507:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9587:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9611:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9596:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9543:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9543:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9543:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9668:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9681:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9692:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9624:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9624:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9624:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9750:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9763:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9774:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9759:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9759:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9706:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9706:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9706:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9453:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9465:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9473:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9481:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9492:4:5",
														"type": ""
													}
												],
												"src": "9343:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9835:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9845:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9868:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9850:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9850:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9845:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9879:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9902:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9884:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9884:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9879:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9913:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9924:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9927:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9953:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9955:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9955:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9955:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9945:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9948:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9942:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:10:5"
															},
															"nodeType": "YulIf",
															"src": "9939:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9822:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9825:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9831:3:5",
														"type": ""
													}
												],
												"src": "9791:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10036:362:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10046:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10069:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10051:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10051:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10046:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10080:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10103:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10085:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10080:1:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10114:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10137:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10140:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10118:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10151:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10180:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10162:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10162:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10151:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10369:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10371:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10371:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10371:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10302:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10295:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10295:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10325:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10332:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10341:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10328:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10328:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10322:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10322:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10275:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10275:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10255:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10255:113:5"
															},
															"nodeType": "YulIf",
															"src": "10252:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10019:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10022:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10028:7:5",
														"type": ""
													}
												],
												"src": "9988:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10432:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10449:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10452:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10442:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10442:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10546:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10549:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10539:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10539:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10539:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10570:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10573:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10563:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10563:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10563:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10404:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10632:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10642:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10665:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10647:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10642:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10676:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10699:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10681:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10676:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10723:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10725:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10725:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10725:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10720:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:9:5"
															},
															"nodeType": "YulIf",
															"src": "10710:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10755:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10764:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10767:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10760:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10760:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10755:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10621:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10624:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10630:1:5",
														"type": ""
													}
												],
												"src": "10590:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10887:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10909:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10917:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10905:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10905:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10921:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10898:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10898:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10898:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10879:6:5",
														"type": ""
													}
												],
												"src": "10781:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11114:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11124:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11190:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11195:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11131:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11124:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11296:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "11207:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11207:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11207:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11309:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11320:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11316:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11309:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11102:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11110:3:5",
														"type": ""
													}
												],
												"src": "10968:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11511:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11521:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11533:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11544:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11529:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11529:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11521:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11568:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11579:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11564:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11587:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11593:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11583:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11583:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11557:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11557:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11613:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11747:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11621:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11621:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11613:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11491:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11506:4:5",
														"type": ""
													}
												],
												"src": "11340:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bonus period must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xB35BAE68 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xEC4D38B4 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4AF4A127 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x115 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP3 SWAP2 SWAP1 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x1F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x3EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x855 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x2B0 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP3 SWAP2 SWAP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x328 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x382 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x3E2 PUSH2 0x8A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x3FC PUSH0 PUSH2 0x934 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x452 PUSH2 0x8AD JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xDEC900C033F508B1A342C6903692EB0C7CE2A86B1C98A96CBA42983A032C9AD8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x855 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x51F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F3 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 DUP3 PUSH0 ADD SLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD SUB PUSH2 0x666 JUMPI TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x6A3 JUMP JUMPDEST DUP1 DUP4 TIMESTAMP PUSH2 0x673 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x690 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0x69A SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x703 PUSH2 0x8A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x75A JUMPI PUSH0 SWAP2 POP POP PUSH2 0x7CC JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x76B SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x78F SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH0 ADD SLOAD PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xF3B JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D9 PUSH2 0x8AD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x849 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x852 DUP2 PUSH2 0x934 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8B5 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D3 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x932 JUMPI PUSH2 0x8F6 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA29 DUP3 PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA39 DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP2 EQ PUSH2 0xA43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA54 DUP2 PUSH2 0xA30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6F JUMPI PUSH2 0xA6E PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA7C DUP5 DUP3 DUP6 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA97 DUP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAB0 PUSH0 DUP4 ADD DUP6 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0xABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xA85 JUMP JUMPDEST DUP2 EQ PUSH2 0xAD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAE8 DUP2 PUSH2 0xAC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB02 PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB10 DUP5 DUP3 DUP6 ADD PUSH2 0xADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2C PUSH0 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB55 PUSH2 0xB50 PUSH2 0xB4B DUP5 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB66 DUP3 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP3 PUSH2 0xB5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB87 DUP2 PUSH2 0xB6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA0 PUSH0 DUP4 ADD DUP5 PUSH2 0xB7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC12 PUSH1 0x1B DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xC1D DUP3 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC3F DUP2 PUSH2 0xC06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC7D DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xC88 DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC9F PUSH2 0xC46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCB9 PUSH0 DUP4 ADD DUP6 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xCC6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCD JUMP JUMPDEST DUP2 EQ PUSH2 0xCEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCFC DUP2 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD17 JUMPI PUSH2 0xD16 PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD24 DUP5 DUP3 DUP6 ADD PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD61 PUSH1 0x15 DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xD6C DUP3 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD8E DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F6E757320706572696F64206D757374206265203E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDC9 PUSH1 0x18 DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xDD4 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF6 DUP2 PUSH2 0xDBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D757374206265203E2030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE31 PUSH1 0x1A DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xE3C DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5E DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE78 PUSH0 DUP4 ADD DUP7 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xE85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xE92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEA4 DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAF DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xC46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED7 DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE2 DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEF0 DUP2 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF07 JUMPI PUSH2 0xF06 PUSH2 0xC46 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF45 DUP3 PUSH2 0xA85 JUMP JUMPDEST SWAP2 POP PUSH2 0xF50 DUP4 PUSH2 0xA85 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0xF0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9F PUSH1 0x1F DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP2 POP PUSH2 0xFAA DUP3 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFCC DUP2 PUSH2 0xF93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC TIMESTAMP PUSH10 0xF5464315540C534F1A4E 0xEB PUSH27 0x88AC554AF7E6359EFBDE27642A56B423E664736F6C634300081400 CALLER ",
							"sourceMap": "577:4185:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1146:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3191:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;801:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;692:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4531:229:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2138:917;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3883:493;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1146:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3191:433::-;2261:21:1;:19;:21::i;:::-;3257:22:4::1;3282:6;:18;3289:10;3282:18;;;;;;;;;;;;;;;3257:43;;3333:6;3318:4;:11;;;:21;;3310:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3397:6;3382:4;:11;;;:21;;;;;;;:::i;:::-;;;;;;;;3432:1;3417:4;:11;;;:16:::0;3413:75:::1;;3476:1;3449:4;:24;;:28;;;;3413:75;3505:12;;;;;;;;;;;:21;;;3527:10;3539:6;3505:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3497:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3598:10;3588:29;;;3610:6;3588:29;;;;;;:::i;:::-;;;;;;;;3247:377;2303:20:1::0;:18;:20::i;:::-;3191:433:4;:::o;801:26::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;692:26:4:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4531:229:4:-;1531:13:0;:11;:13::i;:::-;4636:1:4::1;4619:14;:18;4611:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4690:14;4676:11;:28;;;;4719:34;4738:14;4719:34;;;;;;:::i;:::-;;;;;;;;4531:229:::0;:::o;2138:917::-;2261:21:1;:19;:21::i;:::-;2220:1:4::1;2211:6;:10;2203:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2270:12;;;;;;;;;;;:25;;;2296:10;2316:4;2323:6;2270:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2262:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2367:22;2392:6;:18;2399:10;2392:18;;;;;;;;;;;;;;;2367:43;;2420:19;2456:6;2442:4;:11;;;:20;;;;:::i;:::-;2420:42;;2492:1;2477:4;:11;;;:16:::0;2473:496:::1;;2635:15;2608:4;:24;;:42;;;;2473:496;;;2947:11;2937:6;2919:15;:24;;;;:::i;:::-;2905:4;:11;;;2878:4;:24;;;:38;;;;:::i;:::-;:65;;;;:::i;:::-;2877:81;;;;:::i;:::-;2850:4;:24;;:108;;;;2473:496;2992:11;2978:4;:11;;:25;;;;3029:10;3019:29;;;3041:6;3019:29;;;;;;:::i;:::-;;;;;;;;2193:862;;2303:20:1::0;:18;:20::i;:::-;2138:917:4;:::o;3883:493::-;3944:7;3963:22;3988:6;:12;3995:4;3988:12;;;;;;;;;;;;;;;3963:37;;4029:1;4014:4;:11;;;:16;4010:55;;4053:1;4046:8;;;;;4010:55;4074:15;4110:4;:24;;;4092:15;:42;;;;:::i;:::-;4074:60;;4261:18;4308:11;;4300:4;4290:7;:14;;;;:::i;:::-;4289:30;;;;:::i;:::-;4282:4;:37;;;;:::i;:::-;4261:58;;4365:4;4351:10;4337:4;:11;;;:24;;;;:::i;:::-;4336:33;;;;:::i;:::-;4329:40;;;;;3883:493;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:332::-;1504:4;1542:2;1531:9;1527:18;1519:26;;1555:71;1623:1;1612:9;1608:17;1599:6;1555:71;:::i;:::-;1636:72;1704:2;1693:9;1689:18;1680:6;1636:72;:::i;:::-;1383:332;;;;;:::o;1721:122::-;1794:24;1812:5;1794:24;:::i;:::-;1787:5;1784:35;1774:63;;1833:1;1830;1823:12;1774:63;1721:122;:::o;1849:139::-;1895:5;1933:6;1920:20;1911:29;;1949:33;1976:5;1949:33;:::i;:::-;1849:139;;;;:::o;1994:329::-;2053:6;2102:2;2090:9;2081:7;2077:23;2073:32;2070:119;;;2108:79;;:::i;:::-;2070:119;2228:1;2253:53;2298:7;2289:6;2278:9;2274:22;2253:53;:::i;:::-;2243:63;;2199:117;1994:329;;;;:::o;2329:222::-;2422:4;2460:2;2449:9;2445:18;2437:26;;2473:71;2541:1;2530:9;2526:17;2517:6;2473:71;:::i;:::-;2329:222;;;;:::o;2557:60::-;2585:3;2606:5;2599:12;;2557:60;;;:::o;2623:142::-;2673:9;2706:53;2724:34;2733:24;2751:5;2733:24;:::i;:::-;2724:34;:::i;:::-;2706:53;:::i;:::-;2693:66;;2623:142;;;:::o;2771:126::-;2821:9;2854:37;2885:5;2854:37;:::i;:::-;2841:50;;2771:126;;;:::o;2903:140::-;2967:9;3000:37;3031:5;3000:37;:::i;:::-;2987:50;;2903:140;;;:::o;3049:159::-;3150:51;3195:5;3150:51;:::i;:::-;3145:3;3138:64;3049:159;;:::o;3214:250::-;3321:4;3359:2;3348:9;3344:18;3336:26;;3372:85;3454:1;3443:9;3439:17;3430:6;3372:85;:::i;:::-;3214:250;;;;:::o;3470:118::-;3557:24;3575:5;3557:24;:::i;:::-;3552:3;3545:37;3470:118;;:::o;3594:222::-;3687:4;3725:2;3714:9;3710:18;3702:26;;3738:71;3806:1;3795:9;3791:17;3782:6;3738:71;:::i;:::-;3594:222;;;;:::o;3822:169::-;3906:11;3940:6;3935:3;3928:19;3980:4;3975:3;3971:14;3956:29;;3822:169;;;;:::o;3997:177::-;4137:29;4133:1;4125:6;4121:14;4114:53;3997:177;:::o;4180:366::-;4322:3;4343:67;4407:2;4402:3;4343:67;:::i;:::-;4336:74;;4419:93;4508:3;4419:93;:::i;:::-;4537:2;4532:3;4528:12;4521:19;;4180:366;;;:::o;4552:419::-;4718:4;4756:2;4745:9;4741:18;4733:26;;4805:9;4799:4;4795:20;4791:1;4780:9;4776:17;4769:47;4833:131;4959:4;4833:131;:::i;:::-;4825:139;;4552:419;;;:::o;4977:180::-;5025:77;5022:1;5015:88;5122:4;5119:1;5112:15;5146:4;5143:1;5136:15;5163:194;5203:4;5223:20;5241:1;5223:20;:::i;:::-;5218:25;;5257:20;5275:1;5257:20;:::i;:::-;5252:25;;5301:1;5298;5294:9;5286:17;;5325:1;5319:4;5316:11;5313:37;;;5330:18;;:::i;:::-;5313:37;5163:194;;;;:::o;5363:332::-;5484:4;5522:2;5511:9;5507:18;5499:26;;5535:71;5603:1;5592:9;5588:17;5579:6;5535:71;:::i;:::-;5616:72;5684:2;5673:9;5669:18;5660:6;5616:72;:::i;:::-;5363:332;;;;;:::o;5701:90::-;5735:7;5778:5;5771:13;5764:21;5753:32;;5701:90;;;:::o;5797:116::-;5867:21;5882:5;5867:21;:::i;:::-;5860:5;5857:32;5847:60;;5903:1;5900;5893:12;5847:60;5797:116;:::o;5919:137::-;5973:5;6004:6;5998:13;5989:22;;6020:30;6044:5;6020:30;:::i;:::-;5919:137;;;;:::o;6062:345::-;6129:6;6178:2;6166:9;6157:7;6153:23;6149:32;6146:119;;;6184:79;;:::i;:::-;6146:119;6304:1;6329:61;6382:7;6373:6;6362:9;6358:22;6329:61;:::i;:::-;6319:71;;6275:125;6062:345;;;;:::o;6413:171::-;6553:23;6549:1;6541:6;6537:14;6530:47;6413:171;:::o;6590:366::-;6732:3;6753:67;6817:2;6812:3;6753:67;:::i;:::-;6746:74;;6829:93;6918:3;6829:93;:::i;:::-;6947:2;6942:3;6938:12;6931:19;;6590:366;;;:::o;6962:419::-;7128:4;7166:2;7155:9;7151:18;7143:26;;7215:9;7209:4;7205:20;7201:1;7190:9;7186:17;7179:47;7243:131;7369:4;7243:131;:::i;:::-;7235:139;;6962:419;;;:::o;7387:174::-;7527:26;7523:1;7515:6;7511:14;7504:50;7387:174;:::o;7567:366::-;7709:3;7730:67;7794:2;7789:3;7730:67;:::i;:::-;7723:74;;7806:93;7895:3;7806:93;:::i;:::-;7924:2;7919:3;7915:12;7908:19;;7567:366;;;:::o;7939:419::-;8105:4;8143:2;8132:9;8128:18;8120:26;;8192:9;8186:4;8182:20;8178:1;8167:9;8163:17;8156:47;8220:131;8346:4;8220:131;:::i;:::-;8212:139;;7939:419;;;:::o;8364:176::-;8504:28;8500:1;8492:6;8488:14;8481:52;8364:176;:::o;8546:366::-;8688:3;8709:67;8773:2;8768:3;8709:67;:::i;:::-;8702:74;;8785:93;8874:3;8785:93;:::i;:::-;8903:2;8898:3;8894:12;8887:19;;8546:366;;;:::o;8918:419::-;9084:4;9122:2;9111:9;9107:18;9099:26;;9171:9;9165:4;9161:20;9157:1;9146:9;9142:17;9135:47;9199:131;9325:4;9199:131;:::i;:::-;9191:139;;8918:419;;;:::o;9343:442::-;9492:4;9530:2;9519:9;9515:18;9507:26;;9543:71;9611:1;9600:9;9596:17;9587:6;9543:71;:::i;:::-;9624:72;9692:2;9681:9;9677:18;9668:6;9624:72;:::i;:::-;9706;9774:2;9763:9;9759:18;9750:6;9706:72;:::i;:::-;9343:442;;;;;;:::o;9791:191::-;9831:3;9850:20;9868:1;9850:20;:::i;:::-;9845:25;;9884:20;9902:1;9884:20;:::i;:::-;9879:25;;9927:1;9924;9920:9;9913:16;;9948:3;9945:1;9942:10;9939:36;;;9955:18;;:::i;:::-;9939:36;9791:191;;;;:::o;9988:410::-;10028:7;10051:20;10069:1;10051:20;:::i;:::-;10046:25;;10085:20;10103:1;10085:20;:::i;:::-;10080:25;;10140:1;10137;10133:9;10162:30;10180:11;10162:30;:::i;:::-;10151:41;;10341:1;10332:7;10328:15;10325:1;10322:22;10302:1;10295:9;10275:83;10252:139;;10371:18;;:::i;:::-;10252:139;10036:362;9988:410;;;;:::o;10404:180::-;10452:77;10449:1;10442:88;10549:4;10546:1;10539:15;10573:4;10570:1;10563:15;10590:185;10630:1;10647:20;10665:1;10647:20;:::i;:::-;10642:25;;10681:20;10699:1;10681:20;:::i;:::-;10676:25;;10720:1;10710:35;;10725:18;;:::i;:::-;10710:35;10767:1;10764;10760:9;10755:14;;10590:185;;;;:::o;10781:181::-;10921:33;10917:1;10909:6;10905:14;10898:57;10781:181;:::o;10968:366::-;11110:3;11131:67;11195:2;11190:3;11131:67;:::i;:::-;11124:74;;11207:93;11296:3;11207:93;:::i;:::-;11325:2;11320:3;11316:12;11309:19;;10968:366;;;:::o;11340:419::-;11506:4;11544:2;11533:9;11529:18;11521:26;;11593:9;11587:4;11583:20;11579:1;11568:9;11564:17;11557:47;11621:131;11747:4;11621:131;:::i;:::-;11613:139;;11340:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "821000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bonusPeriod()": "2470",
								"deposit(uint256)": "infinite",
								"effectiveStake(address)": "infinite",
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"stakes(address)": "infinite",
								"stakingToken()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateBonusPeriod(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1617,
									"end": 1918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1682,
									"end": 1692,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1738,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1712,
									"end": 1739,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1712,
									"end": 1739,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1725,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1739,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1712,
									"end": 1739,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1739,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1704,
									"end": 1765,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1704,
									"end": 1765,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1798,
									"end": 1799,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1795,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1783,
									"end": 1799,
									"modifierDepth": 1,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1775,
									"end": 1828,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1775,
									"end": 1828,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1861,
									"end": 1874,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1851,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1839,
									"end": 1851,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1839,
									"end": 1875,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1899,
									"end": 1911,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1896,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1885,
									"end": 1911,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1911,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1911,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1911,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1918,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1823,
									"end": 1828,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1805,
									"end": 1829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1803,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1793,
									"end": 1830,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1935,
									"end": 1939,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1971,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2052,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2039,
									"end": 2056,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2030,
									"end": 2036,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1986,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2154,
									"end": 2165,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2186,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2176,
									"end": 2195,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2232,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2226,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2219,
									"end": 2233,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2204,
									"end": 2233,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2204,
									"end": 2233,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2416,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2245,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2385,
									"end": 2408,
									"name": "PUSH",
									"source": 5,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 2381,
									"end": 2382,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2373,
									"end": 2379,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2369,
									"end": 2383,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2409,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2416,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2564,
									"end": 2567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2649,
									"end": 2651,
									"name": "PUSH",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2644,
									"end": 2647,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2585,
									"end": 2652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2578,
									"end": 2652,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2578,
									"end": 2652,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2750,
									"end": 2753,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2661,
									"end": 2754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 2781,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2774,
									"end": 2777,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2770,
									"end": 2782,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2782,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2763,
									"end": 2782,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2422,
									"end": 2788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 2964,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2998,
									"end": 3000,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2987,
									"end": 2996,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 3001,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2975,
									"end": 3001,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3047,
									"end": 3056,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3041,
									"end": 3045,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 3057,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3022,
									"end": 3031,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3018,
									"end": 3035,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3011,
									"end": 3058,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3201,
									"end": 3205,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 3075,
									"end": 3206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3067,
									"end": 3206,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3067,
									"end": 3206,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2794,
									"end": 3213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3219,
									"end": 3393,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 3219,
									"end": 3393,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3385,
									"name": "PUSH",
									"source": 5,
									"value": "426F6E757320706572696F64206D757374206265203E20300000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3353,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3343,
									"end": 3357,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3386,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3219,
									"end": 3393,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3219,
									"end": 3393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3765,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 3399,
									"end": 3765,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3544,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3629,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3626,
									"end": 3628,
									"name": "PUSH",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 3621,
									"end": 3624,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3562,
									"end": 3629,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 3562,
									"end": 3629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3562,
									"end": 3629,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3562,
									"end": 3629,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3555,
									"end": 3629,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3555,
									"end": 3629,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3638,
									"end": 3731,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3727,
									"end": 3730,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3638,
									"end": 3731,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 3638,
									"end": 3731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3638,
									"end": 3731,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3638,
									"end": 3731,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3756,
									"end": 3758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3751,
									"end": 3754,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3747,
									"end": 3759,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3740,
									"end": 3759,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3740,
									"end": 3759,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3765,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3765,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3765,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3765,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3771,
									"end": 4190,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3771,
									"end": 4190,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3937,
									"end": 3941,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3975,
									"end": 3977,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3964,
									"end": 3973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3960,
									"end": 3978,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3952,
									"end": 3978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3952,
									"end": 3978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4024,
									"end": 4033,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4018,
									"end": 4022,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4014,
									"end": 4034,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4010,
									"end": 4011,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3999,
									"end": 4008,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3995,
									"end": 4012,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3988,
									"end": 4035,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4183,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 4178,
									"end": 4182,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4183,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 4052,
									"end": 4183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4183,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 4052,
									"end": 4183,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4183,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4183,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3771,
									"end": 4190,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3771,
									"end": 4190,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3771,
									"end": 4190,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3771,
									"end": 4190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 4762,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc4269f5464315540c534f1a4eeb7a88ac554af7e6359efbde27642a56b423e664736f6c63430008140033",
									".code": [
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "B35BAE68"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "B6B55F25"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "EC4D38B4"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "16934FC4"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "2E1A7D4D"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "4AF4A127"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "72F702F3"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 4762,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1146,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1146,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1146,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3191,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3191,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 801,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 801,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 718,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 692,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 692,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4531,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2138,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2138,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3883,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3883,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3883,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3299,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3339,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3339,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3310,
											"end": 3371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3310,
											"end": 3371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3382,
											"end": 3403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3433,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3413,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3476,
											"end": 3477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3449,
											"end": 3473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3477,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3413,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3526,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3527,
											"end": 3537,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3545,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3505,
											"end": 3546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3505,
											"end": 3546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3505,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3497,
											"end": 3572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3497,
											"end": 3572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3608,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3610,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3588,
											"end": 3617,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3617,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 801,
											"end": 827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 718,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 692,
											"end": 718,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4637,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4611,
											"end": 4666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4611,
											"end": 4666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4676,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "DEC900C033F508B1A342C6903692EB0C7CE2A86B1C98A96CBA42983A032C9AD8"
										},
										{
											"begin": 4738,
											"end": 4752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4719,
											"end": 4753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4753,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2221,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2203,
											"end": 2252,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2203,
											"end": 2252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2296,
											"end": 2306,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2320,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2270,
											"end": 2330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2270,
											"end": 2330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2270,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2262,
											"end": 2356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2262,
											"end": 2356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2409,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2410,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2462,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2446,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2462,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2442,
											"end": 2462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2462,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2481,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 2650,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2612,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 2632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2934,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2919,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2919,
											"end": 2943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2919,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2909,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2916,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2878,
											"end": 2902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2902,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2878,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2878,
											"end": 2916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2878,
											"end": 2916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2878,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2878,
											"end": 2943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2878,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2877,
											"end": 2958,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2877,
											"end": 2958,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2877,
											"end": 2958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2850,
											"end": 2874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2958,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2958,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2473,
											"end": 2969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 2982,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 2989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3039,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 3041,
											"end": 3047,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3019,
											"end": 3048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3048,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 3055,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 3055,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 3055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 3055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 3951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3985,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 3999,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 4000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4025,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4025,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4030,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4010,
											"end": 4065,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4065,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4010,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4110,
											"end": 4134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4134,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4092,
											"end": 4134,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4092,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4134,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4092,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4319,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4308,
											"end": 4319,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4304,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4290,
											"end": 4297,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4290,
											"end": 4304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4290,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4304,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4290,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4289,
											"end": 4319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4289,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4319,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4289,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4286,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4282,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4282,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4348,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4337,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4336,
											"end": 4369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4336,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4369,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4336,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4369,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1555,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1636,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1721,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1794,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1819,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1774,
											"end": 1837,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1835,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1837,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1774,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1988,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1940,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1949,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1982,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1949,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1988,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1988,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1994,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2088,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2105,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2189,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2070,
											"end": 2189,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2108,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2108,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2187,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2108,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2070,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2253,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2253,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2323,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2473,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2733,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2724,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2706,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2854,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3043,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2903,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3031,
											"end": 3036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3000,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3000,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2987,
											"end": 3037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2987,
											"end": 3037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3043,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3208,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3049,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3195,
											"end": 3200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3150,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3201,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3150,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3138,
											"end": 3202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3464,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3214,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3321,
											"end": 3325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3348,
											"end": 3357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3452,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3372,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3372,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3464,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3588,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3470,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3575,
											"end": 3580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3557,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3581,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3557,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3816,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3594,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3738,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3809,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3738,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3816,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3935,
											"end": 3938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3971,
											"end": 3985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3997,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4166,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4343,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4419,
											"end": 4512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4971,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4552,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4789,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4833,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4964,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4833,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5157,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4977,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5102,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5112,
											"end": 5127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5357,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 5163,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5223,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5243,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5223,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5243,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5257,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5277,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5257,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5286,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5286,
											"end": 5303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5327,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5313,
											"end": 5350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5330,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5350,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5313,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5357,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5524,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5507,
											"end": 5525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5601,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 5605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5585,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5535,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5606,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5535,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5684,
											"end": 5686,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5673,
											"end": 5682,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5666,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5616,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5688,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5616,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5791,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5701,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5753,
											"end": 5785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5913,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5797,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5882,
											"end": 5887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5867,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5867,
											"end": 5888,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5867,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5860,
											"end": 5865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 5889,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5847,
											"end": 5907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5847,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6056,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5919,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 5978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 6011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6044,
											"end": 6049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6020,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6050,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6020,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6056,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6062,
											"end": 6407,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 6062,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6164,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6153,
											"end": 6176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6181,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6146,
											"end": 6265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6184,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6184,
											"end": 6263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6263,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6184,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6265,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6146,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6329,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6382,
											"end": 6389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6329,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6329,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6329,
											"end": 6390,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6329,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6319,
											"end": 6390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6319,
											"end": 6390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6275,
											"end": 6400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6062,
											"end": 6407,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6062,
											"end": 6407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6062,
											"end": 6407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6062,
											"end": 6407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6062,
											"end": 6407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6584,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6413,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6537,
											"end": 6551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6817,
											"end": 6819,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6753,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6753,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6746,
											"end": 6820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6746,
											"end": 6820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 6918,
											"end": 6921,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6829,
											"end": 6922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 6829,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6942,
											"end": 6945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7381,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6962,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7143,
											"end": 7169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7143,
											"end": 7169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7179,
											"end": 7226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7369,
											"end": 7373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7243,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7374,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7243,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6962,
											"end": 7381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7561,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7387,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "426F6E757320706572696F64206D757374206265203E20300000000000000000"
										},
										{
											"begin": 7523,
											"end": 7524,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7511,
											"end": 7525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7554,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7387,
											"end": 7561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7933,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 7567,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7709,
											"end": 7712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 7789,
											"end": 7792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7730,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7895,
											"end": 7898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7806,
											"end": 7899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 7899,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7806,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7919,
											"end": 7922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 7927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7933,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8132,
											"end": 8141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8120,
											"end": 8146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8120,
											"end": 8146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8202,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8156,
											"end": 8203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8220,
											"end": 8351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8540,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8364,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8504,
											"end": 8532,
											"name": "PUSH",
											"source": 5,
											"value": "4465706F73697420616D6F756E74206D757374206265203E2030000000000000"
										},
										{
											"begin": 8500,
											"end": 8501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8546,
											"end": 8912,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8546,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8688,
											"end": 8691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8773,
											"end": 8775,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 8768,
											"end": 8771,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8709,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8709,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8709,
											"end": 8776,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8709,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8874,
											"end": 8877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8785,
											"end": 8878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8878,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8785,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 8905,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8894,
											"end": 8906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8546,
											"end": 8912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8546,
											"end": 8912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8546,
											"end": 8912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8546,
											"end": 8912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8918,
											"end": 9337,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 8918,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9124,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9111,
											"end": 9120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9107,
											"end": 9125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9165,
											"end": 9169,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9181,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9155,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9135,
											"end": 9182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9199,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9325,
											"end": 9329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9199,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9199,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9199,
											"end": 9330,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9199,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9191,
											"end": 9330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9191,
											"end": 9330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8918,
											"end": 9337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8918,
											"end": 9337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8918,
											"end": 9337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8918,
											"end": 9337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9530,
											"end": 9532,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9519,
											"end": 9528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9515,
											"end": 9533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9593,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 9543,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9614,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9543,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9624,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9692,
											"end": 9694,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9677,
											"end": 9695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9668,
											"end": 9674,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9624,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 9624,
											"end": 9696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9624,
											"end": 9696,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9624,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 9774,
											"end": 9776,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9763,
											"end": 9772,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9756,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 9706,
											"end": 9778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9778,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 9706,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9343,
											"end": 9785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9982,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 9791,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9831,
											"end": 9834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9850,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9868,
											"end": 9869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9850,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9850,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9850,
											"end": 9870,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9850,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9845,
											"end": 9870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9845,
											"end": 9870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9902,
											"end": 9903,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9884,
											"end": 9904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9904,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9884,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9879,
											"end": 9904,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9879,
											"end": 9904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9924,
											"end": 9925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9913,
											"end": 9929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9913,
											"end": 9929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 9951,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9945,
											"end": 9946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 9952,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 9975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9939,
											"end": 9975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 9955,
											"end": 9973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 9975,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9939,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9982,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9982,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 10398,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 9988,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10035,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10069,
											"end": 10070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10051,
											"end": 10071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10071,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10051,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10046,
											"end": 10071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10103,
											"end": 10104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10085,
											"end": 10105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10085,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10105,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10142,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10180,
											"end": 10191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10162,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10151,
											"end": 10192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10151,
											"end": 10192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10328,
											"end": 10343,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10325,
											"end": 10326,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10322,
											"end": 10344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10302,
											"end": 10303,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10295,
											"end": 10304,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10358,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10252,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10252,
											"end": 10391,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10371,
											"end": 10389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10252,
											"end": 10391,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10252,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 10398,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 10398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 10398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 10398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 10398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10584,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10404,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10452,
											"end": 10529,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10449,
											"end": 10450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10442,
											"end": 10530,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10554,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10573,
											"end": 10577,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10570,
											"end": 10571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10578,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10775,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 10590,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 10665,
											"end": 10666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10647,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10699,
											"end": 10700,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10681,
											"end": 10701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10676,
											"end": 10701,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10676,
											"end": 10701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10710,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 10710,
											"end": 10745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10725,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 10725,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10725,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10725,
											"end": 10743,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 10725,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10710,
											"end": 10745,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 10710,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10767,
											"end": 10768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10769,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10755,
											"end": 10769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10755,
											"end": 10769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10775,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10775,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10781,
											"end": 10962,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10781,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10954,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10917,
											"end": 10918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10898,
											"end": 10955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10781,
											"end": 10962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10781,
											"end": 10962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10968,
											"end": 11334,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10968,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11110,
											"end": 11113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11131,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11195,
											"end": 11197,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11190,
											"end": 11193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11131,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11131,
											"end": 11198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11131,
											"end": 11198,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11131,
											"end": 11198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11207,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11207,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 11207,
											"end": 11300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11207,
											"end": 11300,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11207,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11325,
											"end": 11327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11320,
											"end": 11323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11316,
											"end": 11328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11309,
											"end": 11328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11309,
											"end": 11328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10968,
											"end": 11334,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10968,
											"end": 11334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10968,
											"end": 11334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10968,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11759,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11340,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11544,
											"end": 11546,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11533,
											"end": 11542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11521,
											"end": 11547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11521,
											"end": 11547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11593,
											"end": 11602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11587,
											"end": 11591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11583,
											"end": 11603,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11579,
											"end": 11580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 11577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11557,
											"end": 11604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11621,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11621,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 11621,
											"end": 11752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11621,
											"end": 11752,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 11621,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11613,
											"end": 11752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11613,
											"end": 11752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11759,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11340,
											"end": 11759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"E/effective proof of stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bonusPeriod()": "4af4a127",
							"deposit(uint256)": "b6b55f25",
							"effectiveStake(address)": "ec4d38b4",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"transferOwnership(address)": "f2fde38b",
							"updateBonusPeriod(uint256)": "b35bae68",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bonusPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBonusPeriod\",\"type\":\"uint256\"}],\"name\":\"BonusPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bonusPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"effectiveStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightedDepositTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBonusPeriod\",\"type\":\"uint256\"}],\"name\":\"updateBonusPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_bonusPeriod\":\"The bonus period in seconds (e.g., 30 days).\",\"_stakingToken\":\"The ERC20 token address used for staking.\"}},\"deposit(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to deposit.\"}},\"effectiveStake(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The effective stake value.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBonusPeriod(uint256)\":{\"params\":{\"newBonusPeriod\":\"The new bonus period in seconds.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw.\"}}},\"title\":\"EffectiveProofOfStake\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bonusPeriod()\":{\"notice\":\"Bonus period in seconds (e.g., 30 days = 30 * 24 * 60 * 60).\"},\"constructor\":{\"notice\":\"Constructor sets the staking token and bonus period.\"},\"deposit(uint256)\":{\"notice\":\"Allows a user to deposit tokens for staking. The deposited tokens are recorded, and the weighted deposit time is updated.\"},\"effectiveStake(address)\":{\"notice\":\"Calculates the effective stake of a user. The effective stake increases over time based on how long the tokens have been staked.\"},\"stakes(address)\":{\"notice\":\"Mapping from user address to their stake information.\"},\"stakingToken()\":{\"notice\":\"The ERC20 token used for staking.\"},\"updateBonusPeriod(uint256)\":{\"notice\":\"Updates the bonus period. Only the owner can call this.\"},\"withdraw(uint256)\":{\"notice\":\"Allows a user to withdraw (unstake) tokens.\"}},\"notice\":\"This contract implements an effective proof-of-stake system where each user's effective stake increases over time. The effective stake is computed as: effectiveStake = stakedAmount * (1 + (elapsedTime / bonusPeriod)) The owner sets the staking token and the bonus period (e.g., 30 days).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/effective proof of stake.sol\":\"EffectiveProofOfStake\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"E/effective proof of stake.sol\":{\"keccak256\":\"0x48e92d1dc81ca952745472db73197cce8240eaca9d99e6469e4f3378ecbd5d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9869082c81d870d41fec8835c9ebe82fd43d26c522d760de47fcb4d035e442b\",\"dweb:/ipfs/QmVaS6wrRxhiDYXjTbgfitEenJjX68M5Qae3na5PHQTU2K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 337,
								"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
								"label": "bonusPeriod",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 349,
								"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
								"label": "stakes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(StakeInfo)343_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(StakeInfo)343_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EffectiveProofOfStake.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)343_storage"
							},
							"t_struct(StakeInfo)343_storage": {
								"encoding": "inplace",
								"label": "struct EffectiveProofOfStake.StakeInfo",
								"members": [
									{
										"astId": 340,
										"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 342,
										"contract": "E/effective proof of stake.sol:EffectiveProofOfStake",
										"label": "weightedDepositTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bonusPeriod()": {
								"notice": "Bonus period in seconds (e.g., 30 days = 30 * 24 * 60 * 60)."
							},
							"constructor": {
								"notice": "Constructor sets the staking token and bonus period."
							},
							"deposit(uint256)": {
								"notice": "Allows a user to deposit tokens for staking. The deposited tokens are recorded, and the weighted deposit time is updated."
							},
							"effectiveStake(address)": {
								"notice": "Calculates the effective stake of a user. The effective stake increases over time based on how long the tokens have been staked."
							},
							"stakes(address)": {
								"notice": "Mapping from user address to their stake information."
							},
							"stakingToken()": {
								"notice": "The ERC20 token used for staking."
							},
							"updateBonusPeriod(uint256)": {
								"notice": "Updates the bonus period. Only the owner can call this."
							},
							"withdraw(uint256)": {
								"notice": "Allows a user to withdraw (unstake) tokens."
							}
						},
						"notice": "This contract implements an effective proof-of-stake system where each user's effective stake increases over time. The effective stake is computed as: effectiveStake = stakedAmount * (1 + (elapsedTime / bonusPeriod)) The owner sets the staking token and the bonus period (e.g., 30 days).",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"E/effective proof of stake.sol": {
				"ast": {
					"absolutePath": "E/effective proof of stake.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"EffectiveProofOfStake": [
							629
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 291,
							"src": "58:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 148,
							"src": "115:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 213,
							"src": "168:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 327,
										"name": "Ownable",
										"nameLocations": [
											"611:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "611:7:4"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "611:7:4"
								},
								{
									"baseName": {
										"id": 329,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"620:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "620:15:4"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "620:15:4"
								}
							],
							"canonicalName": "EffectiveProofOfStake",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 326,
								"nodeType": "StructuredDocumentation",
								"src": "232:345:4",
								"text": "@title EffectiveProofOfStake\n @notice This contract implements an effective proof-of-stake system where each user's effective stake\n increases over time. The effective stake is computed as:\n effectiveStake = stakedAmount * (1 + (elapsedTime / bonusPeriod))\n The owner sets the staking token and the bonus period (e.g., 30 days)."
							},
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629,
								212,
								147,
								320
							],
							"name": "EffectiveProofOfStake",
							"nameLocation": "586:21:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "642:45:4",
										"text": "@notice The ERC20 token used for staking."
									},
									"functionSelector": "72f702f3",
									"id": 334,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "706:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 629,
									"src": "692:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 333,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 332,
											"name": "IERC20",
											"nameLocations": [
												"692:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "692:6:4"
										},
										"referencedDeclaration": 290,
										"src": "692:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "724:72:4",
										"text": "@notice Bonus period in seconds (e.g., 30 days = 30 * 24 * 60 * 60)."
									},
									"functionSelector": "4af4a127",
									"id": 337,
									"mutability": "mutable",
									"name": "bonusPeriod",
									"nameLocation": "816:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 629,
									"src": "801:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "801:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "EffectiveProofOfStake.StakeInfo",
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "834:45:4",
										"text": "@notice Information about a user's stake."
									},
									"id": 343,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "919:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 343,
											"src": "911:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "911:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "weightedDepositTime",
											"nameLocation": "991:19:4",
											"nodeType": "VariableDeclaration",
											"scope": 343,
											"src": "983:27:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "983:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "891:9:4",
									"nodeType": "StructDefinition",
									"scope": 629,
									"src": "884:186:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1076:65:4",
										"text": "@notice Mapping from user address to their stake information."
									},
									"functionSelector": "16934fc4",
									"id": 349,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1183:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 629,
									"src": "1146:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$343_storage_$",
										"typeString": "mapping(address => struct EffectiveProofOfStake.StakeInfo)"
									},
									"typeName": {
										"id": 348,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 345,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1154:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1146:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$343_storage_$",
											"typeString": "mapping(address => struct EffectiveProofOfStake.StakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 347,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 346,
												"name": "StakeInfo",
												"nameLocations": [
													"1165:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "1165:9:4"
											},
											"referencedDeclaration": 343,
											"src": "1165:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
												"typeString": "struct EffectiveProofOfStake.StakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 355,
									"name": "Deposited",
									"nameLocation": "1224:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1250:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1234:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1264:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1256:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:38:4"
									},
									"src": "1218:54:4"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 361,
									"name": "Withdrawn",
									"nameLocation": "1283:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1293:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1323:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1315:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:38:4"
									},
									"src": "1277:54:4"
								},
								{
									"anonymous": false,
									"eventSelector": "dec900c033f508b1a342c6903692eb0c7ce2a86b1c98a96cba42983a032c9ad8",
									"id": 365,
									"name": "BonusPeriodUpdated",
									"nameLocation": "1342:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBonusPeriod",
												"nameLocation": "1369:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1361:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:24:4"
									},
									"src": "1336:49:4"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "1694:224:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1712:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1737:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1729:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 379,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1729:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1729:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1712:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1741:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "1704:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "_bonusPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "1783:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1798:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1783:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e757320706572696f64206d757374206265203e2030",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
																"typeString": "literal_string \"Bonus period must be > 0\""
															},
															"value": "Bonus period must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
																"typeString": "literal_string \"Bonus period must be > 0\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1775:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "1775:53:4"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 394,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1839:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 396,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1861:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 395,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1854:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1854:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1839:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1839:36:4"
											},
											{
												"expression": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 400,
														"name": "bonusPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1885:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 401,
														"name": "_bonusPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1899:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1885:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "1885:26:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1391:221:4",
										"text": " @notice Constructor sets the staking token and bonus period.\n @param _stakingToken The ERC20 token address used for staking.\n @param _bonusPeriod The bonus period in seconds (e.g., 30 days)."
									},
									"id": 405,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 373,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1682:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1686:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1682:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 375,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 372,
												"name": "Ownable",
												"nameLocations": [
													"1674:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1674:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1674:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1637:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1629:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "_bonusPeriod",
												"nameLocation": "1660:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1652:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:45:4"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:4"
									},
									"scope": 629,
									"src": "1617:301:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "2193:862:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2211:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2220:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2211:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f73697420616d6f756e74206d757374206265203e2030",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2223:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4",
																"typeString": "literal_string \"Deposit amount must be > 0\""
															},
															"value": "Deposit amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dbce38b2bde557a49f6a88fe099a9dbb1c77742accad61103cbd654137593f4",
																"typeString": "literal_string \"Deposit amount must be > 0\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2203:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2203:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "2203:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 423,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2296:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2300:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2296:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2316:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EffectiveProofOfStake_$629",
																				"typeString": "contract EffectiveProofOfStake"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EffectiveProofOfStake_$629",
																				"typeString": "contract EffectiveProofOfStake"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2308:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2308:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2308:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "2323:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2270:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2283:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "2270:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2270:60:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2332:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "2262:94:4"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "2385:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "2367:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
															"typeString": "struct EffectiveProofOfStake.StakeInfo"
														},
														"typeName": {
															"id": 435,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 434,
																"name": "StakeInfo",
																"nameLocations": [
																	"2367:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 343,
																"src": "2367:9:4"
															},
															"referencedDeclaration": 343,
															"src": "2367:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"baseExpression": {
														"id": 437,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2392:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$343_storage_$",
															"typeString": "mapping(address => struct EffectiveProofOfStake.StakeInfo storage ref)"
														}
													},
													"id": 440,
													"indexExpression": {
														"expression": {
															"id": 438,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2399:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2403:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2399:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2392:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$343_storage",
														"typeString": "struct EffectiveProofOfStake.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2367:43:4"
											},
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "2428:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "2420:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2420:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 444,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2442:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2447:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "2442:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 446,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "2456:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2442:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2420:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 449,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2477:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2482:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "2477:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2477:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "2667:302:4",
													"statements": [
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 461,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2850:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																			"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2855:19:4",
																	"memberName": "weightedDepositTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 342,
																	"src": "2850:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 464,
																							"name": "info",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 436,
																							"src": "2878:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																								"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																							}
																						},
																						"id": 465,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2883:19:4",
																						"memberName": "weightedDepositTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 342,
																						"src": "2878:24:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 466,
																							"name": "info",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 436,
																							"src": "2905:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																								"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																							}
																						},
																						"id": 467,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2910:6:4",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 340,
																						"src": "2905:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2878:38:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 472,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 469,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "2919:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 470,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2925:9:4",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "2919:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 471,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 408,
																						"src": "2937:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2919:24:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2878:65:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 474,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2877:67:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 475,
																		"name": "totalAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "2947:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2877:81:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2850:108:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "2850:108:4"
														}
													]
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "2473:496:4",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "2495:166:4",
													"statements": [
														{
															"expression": {
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 453,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2608:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																			"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2613:19:4",
																	"memberName": "weightedDepositTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 342,
																	"src": "2608:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 456,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2635:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2641:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2635:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2608:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "2608:42:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 481,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2978:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2983:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "2978:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 484,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2992:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2978:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "2978:25:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 488,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3029:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3033:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3029:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "3041:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3019:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3019:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "EmitStatement",
												"src": "3014:34:4"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1924:209:4",
										"text": " @notice Allows a user to deposit tokens for staking.\n The deposited tokens are recorded, and the weighted deposit time is updated.\n @param amount The amount of tokens to deposit."
									},
									"functionSelector": "b6b55f25",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 411,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 410,
												"name": "nonReentrant",
												"nameLocations": [
													"2180:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2180:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2180:12:4"
										}
									],
									"name": "deposit",
									"nameLocation": "2147:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2163:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2155:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:16:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:0:4"
									},
									"scope": 629,
									"src": "2138:917:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "3247:377:4",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "3275:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "3257:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
															"typeString": "struct EffectiveProofOfStake.StakeInfo"
														},
														"typeName": {
															"id": 503,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 502,
																"name": "StakeInfo",
																"nameLocations": [
																	"3257:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 343,
																"src": "3257:9:4"
															},
															"referencedDeclaration": 343,
															"src": "3257:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"baseExpression": {
														"id": 505,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3282:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$343_storage_$",
															"typeString": "mapping(address => struct EffectiveProofOfStake.StakeInfo storage ref)"
														}
													},
													"id": 508,
													"indexExpression": {
														"expression": {
															"id": 506,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3289:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3293:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3289:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3282:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$343_storage",
														"typeString": "struct EffectiveProofOfStake.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3257:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 511,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "3318:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																		"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3323:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "3318:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 513,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3333:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3318:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3341:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3310:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3310:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3310:61:4"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 518,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3382:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3387:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "3382:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 521,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "3397:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3382:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "3382:21:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 524,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3417:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3422:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "3417:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3432:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3417:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 535,
												"nodeType": "IfStatement",
												"src": "3413:75:4",
												"trueBody": {
													"id": 534,
													"nodeType": "Block",
													"src": "3435:53:4",
													"statements": [
														{
															"expression": {
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 528,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "3449:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																			"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																		}
																	},
																	"id": 530,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3454:19:4",
																	"memberName": "weightedDepositTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 342,
																	"src": "3449:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3476:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3449:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "3449:28:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 539,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3527:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3531:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3527:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 541,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "3539:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 537,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "3505:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3518:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "3505:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3505:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3548:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3497:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3497:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "3497:75:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 547,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3598:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3602:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3598:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "3610:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "3588:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3588:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "3583:34:4"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3061:125:4",
										"text": " @notice Allows a user to withdraw (unstake) tokens.\n @param amount The amount of tokens to withdraw."
									},
									"functionSelector": "2e1a7d4d",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "nonReentrant",
												"nameLocations": [
													"3234:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3234:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3234:12:4"
										}
									],
									"name": "withdraw",
									"nameLocation": "3200:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3217:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3209:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:16:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3247:0:4"
									},
									"scope": 629,
									"src": "3191:433:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "3953:423:4",
										"statements": [
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "3981:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "3963:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
															"typeString": "struct EffectiveProofOfStake.StakeInfo"
														},
														"typeName": {
															"id": 562,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 561,
																"name": "StakeInfo",
																"nameLocations": [
																	"3963:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 343,
																"src": "3963:9:4"
															},
															"referencedDeclaration": 343,
															"src": "3963:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"baseExpression": {
														"id": 564,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3988:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$343_storage_$",
															"typeString": "mapping(address => struct EffectiveProofOfStake.StakeInfo storage ref)"
														}
													},
													"id": 566,
													"indexExpression": {
														"id": 565,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3995:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3988:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$343_storage",
														"typeString": "struct EffectiveProofOfStake.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3963:37:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 568,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4014:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4019:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "4014:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4029:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4014:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "4010:55:4",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "4032:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4053:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 560,
															"id": 573,
															"nodeType": "Return",
															"src": "4046:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "elapsed",
														"nameLocation": "4082:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "4074:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4074:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 578,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4092:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4098:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4092:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 580,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4110:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4115:19:4",
														"memberName": "weightedDepositTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "4110:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4092:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4074:60:4"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "4269:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "4261:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4261:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31653138",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4282:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 587,
																		"name": "elapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "4290:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4300:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "4290:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 590,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4289:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 591,
															"name": "bonusPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4308:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4289:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4282:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4261:58:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 595,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "4337:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$343_storage_ptr",
																			"typeString": "struct EffectiveProofOfStake.StakeInfo storage pointer"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4342:6:4",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 340,
																	"src": "4337:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 597,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4351:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4337:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 599,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4336:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4365:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "4336:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 560,
												"id": 602,
												"nodeType": "Return",
												"src": "4329:40:4"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3630:248:4",
										"text": " @notice Calculates the effective stake of a user.\n The effective stake increases over time based on how long the tokens have been staked.\n @param user The address of the user.\n @return The effective stake value."
									},
									"functionSelector": "ec4d38b4",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "effectiveStake",
									"nameLocation": "3892:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3915:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "3907:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3906:14:4"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "3944:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3943:9:4"
									},
									"scope": 629,
									"src": "3883:493:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "4601:159:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 613,
																"name": "newBonusPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "4619:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4636:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4619:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e757320706572696f64206d757374206265203e2030",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4639:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
																"typeString": "literal_string \"Bonus period must be > 0\""
															},
															"value": "Bonus period must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7243f70724a193f92bdfbbe6a6993a580b10e8f59d4ca4493f7b7380fb9d539f",
																"typeString": "literal_string \"Bonus period must be > 0\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4611:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4611:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "4611:55:4"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 619,
														"name": "bonusPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "4676:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 620,
														"name": "newBonusPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "4690:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4676:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "4676:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 624,
															"name": "newBonusPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "4738:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "BonusPeriodUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4719:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "4714:39:4"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "4382:144:4",
										"text": " @notice Updates the bonus period. Only the owner can call this.\n @param newBonusPeriod The new bonus period in seconds."
									},
									"functionSelector": "b35bae68",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 609,
												"name": "onlyOwner",
												"nameLocations": [
													"4591:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4591:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4591:9:4"
										}
									],
									"name": "updateBonusPeriod",
									"nameLocation": "4540:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "newBonusPeriod",
												"nameLocation": "4566:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4558:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4557:24:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:0:4"
									},
									"scope": 629,
									"src": "4531:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 630,
							"src": "577:4185:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								355,
								361,
								365
							]
						}
					],
					"src": "32:4731:4"
				},
				"id": 4
			}
		}
	}
}