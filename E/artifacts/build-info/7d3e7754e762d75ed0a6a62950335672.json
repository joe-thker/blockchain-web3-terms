{
	"id": "7d3e7754e762d75ed0a6a62950335672",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/email spoofing.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title ExponentialMovingAverage\n/// @notice This contract calculates an exponential moving average (EMA) using fixedâ€‘point arithmetic.\n/// The EMA is updated using the formula:\n///   EMA = (alpha * newValue) + ((1e18 - alpha) * previousEMA) / 1e18,\n/// where alpha = 2e18 / (period + 1).\n/// The owner can update the EMA with new data and adjust the period (and thus alpha).\ncontract ExponentialMovingAverage is Ownable {\n    /// @notice The current EMA value, scaled by 1e18.\n    uint256 public ema;\n    /// @notice The period used for the EMA calculation.\n    uint256 public period;\n    /// @notice The smoothing factor alpha, scaled by 1e18.\n    uint256 public alpha;\n    /// @notice A flag indicating whether the EMA has been initialized.\n    bool public initialized;\n\n    /// @notice Emitted when the EMA is updated.\n    /// @param newEMA The new EMA value (scaled by 1e18).\n    /// @param newValue The new data point provided (scaled by 1e18).\n    event EMAUpdated(uint256 newEMA, uint256 newValue);\n\n    /// @notice Emitted when the period is updated.\n    /// @param newPeriod The new period value.\n    /// @param newAlpha The new alpha value (scaled by 1e18).\n    event PeriodUpdated(uint256 newPeriod, uint256 newAlpha);\n\n    /**\n     * @notice Constructor sets the initial period and calculates the initial alpha.\n     * @param _period The initial period for the EMA calculation.\n     */\n    constructor(uint256 _period) Ownable(msg.sender) {\n        require(_period > 0, \"Period must be > 0\");\n        period = _period;\n        // Calculate alpha: 2e18 / (period + 1)\n        alpha = (2 * 1e18) / (period + 1);\n    }\n\n    /**\n     * @notice Updates the EMA with a new data point.\n     * If the EMA has not been initialized, it is set to the new value.\n     * Otherwise, it updates according to the formula:\n     *   EMA = (alpha * newValue + (1e18 - alpha) * previousEMA) / 1e18.\n     * @param newValue The new data point to incorporate (scaled by 1e18).\n     */\n    function updateEMA(uint256 newValue) external onlyOwner {\n        require(newValue > 0, \"New value must be > 0\");\n        if (!initialized) {\n            ema = newValue;\n            initialized = true;\n        } else {\n            ema = (alpha * newValue + (1e18 - alpha) * ema) / 1e18;\n        }\n        emit EMAUpdated(ema, newValue);\n    }\n\n    /**\n     * @notice Returns the current EMA value.\n     * @return The current EMA value (scaled by 1e18).\n     */\n    function getEMA() external view returns (uint256) {\n        return ema;\n    }\n\n    /**\n     * @notice Updates the period used for the EMA calculation and recalculates alpha.\n     * @param newPeriod The new period value (must be > 0).\n     */\n    function updatePeriod(uint256 newPeriod) external onlyOwner {\n        require(newPeriod > 0, \"Period must be > 0\");\n        period = newPeriod;\n        alpha = (2 * 1e18) / (period + 1);\n        emit PeriodUpdated(newPeriod, alpha);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/email spoofing.sol": {
				"ExponentialMovingAverage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_period",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newEMA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "EMAUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAlpha",
									"type": "uint256"
								}
							],
							"name": "PeriodUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "alpha",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ema",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEMA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "updateEMA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPeriod",
									"type": "uint256"
								}
							],
							"name": "updatePeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"EMAUpdated(uint256,uint256)": {
								"params": {
									"newEMA": "The new EMA value (scaled by 1e18).",
									"newValue": "The new data point provided (scaled by 1e18)."
								}
							},
							"PeriodUpdated(uint256,uint256)": {
								"params": {
									"newAlpha": "The new alpha value (scaled by 1e18).",
									"newPeriod": "The new period value."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_period": "The initial period for the EMA calculation."
								}
							},
							"getEMA()": {
								"returns": {
									"_0": "The current EMA value (scaled by 1e18)."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateEMA(uint256)": {
								"params": {
									"newValue": "The new data point to incorporate (scaled by 1e18)."
								}
							},
							"updatePeriod(uint256)": {
								"params": {
									"newPeriod": "The new period value (must be > 0)."
								}
							}
						},
						"title": "ExponentialMovingAverage",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/email spoofing.sol\":493:3047  contract ExponentialMovingAverage is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"E/email spoofing.sol\":1520:1745  constructor(uint256 _period) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"E/email spoofing.sol\":1557:1567  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"E/email spoofing.sol\":1597:1598  0 */\n  0x00\n    /* \"E/email spoofing.sol\":1587:1594  _period */\n  dup2\n    /* \"E/email spoofing.sol\":1587:1598  _period > 0 */\n  gt\n    /* \"E/email spoofing.sol\":1579:1621  require(_period > 0, \"Period must be > 0\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"E/email spoofing.sol\":1640:1647  _period */\n  dup1\n    /* \"E/email spoofing.sol\":1631:1637  period */\n  0x02\n    /* \"E/email spoofing.sol\":1631:1647  period = _period */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/email spoofing.sol\":1736:1737  1 */\n  0x01\n    /* \"E/email spoofing.sol\":1727:1733  period */\n  sload(0x02)\n    /* \"E/email spoofing.sol\":1727:1737  period + 1 */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"E/email spoofing.sol\":1714:1722  2 * 1e18 */\n  0x1bc16d674ec80000\n    /* \"E/email spoofing.sol\":1713:1738  (2 * 1e18) / (period + 1) */\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"E/email spoofing.sol\":1705:1710  alpha */\n  0x03\n    /* \"E/email spoofing.sol\":1705:1738  alpha = (2 * 1e18) / (period + 1) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/email spoofing.sol\":1520:1745  constructor(uint256 _period) Ownable(msg.sender) {... */\n  pop\n    /* \"E/email spoofing.sol\":493:3047  contract ExponentialMovingAverage is Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_26:\n    /* \"#utility.yul\":490:514   */\n  tag_42\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_43:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_27:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_45\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_48\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":781:900   */\ntag_47:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_49\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_27\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1177   */\ntag_28:\n    /* \"#utility.yul\":1088:1095   */\n  0x00\n    /* \"#utility.yul\":1128:1170   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1121:1126   */\n  dup3\n    /* \"#utility.yul\":1117:1171   */\n  and\n    /* \"#utility.yul\":1106:1171   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1183:1279   */\ntag_29:\n    /* \"#utility.yul\":1220:1227   */\n  0x00\n    /* \"#utility.yul\":1249:1273   */\n  tag_52\n    /* \"#utility.yul\":1267:1272   */\n  dup3\n    /* \"#utility.yul\":1249:1273   */\n  tag_28\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1238:1273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1183:1279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1285:1403   */\ntag_30:\n    /* \"#utility.yul\":1372:1396   */\n  tag_54\n    /* \"#utility.yul\":1390:1395   */\n  dup2\n    /* \"#utility.yul\":1372:1396   */\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1367:1370   */\n  dup3\n    /* \"#utility.yul\":1360:1397   */\n  mstore\n    /* \"#utility.yul\":1285:1403   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1631   */\ntag_9:\n    /* \"#utility.yul\":1502:1506   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x20\n    /* \"#utility.yul\":1529:1538   */\n  dup3\n    /* \"#utility.yul\":1525:1543   */\n  add\n    /* \"#utility.yul\":1517:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1553:1624   */\n  tag_56\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1610:1619   */\n  dup4\n    /* \"#utility.yul\":1606:1623   */\n  add\n    /* \"#utility.yul\":1597:1603   */\n  dup5\n    /* \"#utility.yul\":1553:1624   */\n  tag_30\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1409:1631   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1637:1806   */\ntag_31:\n    /* \"#utility.yul\":1721:1732   */\n  0x00\n    /* \"#utility.yul\":1755:1761   */\n  dup3\n    /* \"#utility.yul\":1750:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1762   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x20\n    /* \"#utility.yul\":1790:1793   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  add\n    /* \"#utility.yul\":1771:1800   */\n  swap1\n  pop\n    /* \"#utility.yul\":1637:1806   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1812:1980   */\ntag_32:\n    /* \"#utility.yul\":1952:1972   */\n  0x506572696f64206d757374206265203e20300000000000000000000000000000\n    /* \"#utility.yul\":1948:1949   */\n  0x00\n    /* \"#utility.yul\":1940:1946   */\n  dup3\n    /* \"#utility.yul\":1936:1950   */\n  add\n    /* \"#utility.yul\":1929:1973   */\n  mstore\n    /* \"#utility.yul\":1812:1980   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1986:2352   */\ntag_33:\n    /* \"#utility.yul\":2128:2131   */\n  0x00\n    /* \"#utility.yul\":2149:2216   */\n  tag_60\n    /* \"#utility.yul\":2213:2215   */\n  0x12\n    /* \"#utility.yul\":2208:2211   */\n  dup4\n    /* \"#utility.yul\":2149:2216   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2142:2216   */\n  swap2\n  pop\n    /* \"#utility.yul\":2225:2318   */\n  tag_61\n    /* \"#utility.yul\":2314:2317   */\n  dup3\n    /* \"#utility.yul\":2225:2318   */\n  tag_32\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2343:2345   */\n  0x20\n    /* \"#utility.yul\":2338:2341   */\n  dup3\n    /* \"#utility.yul\":2334:2346   */\n  add\n    /* \"#utility.yul\":2327:2346   */\n  swap1\n  pop\n    /* \"#utility.yul\":1986:2352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2358:2777   */\ntag_15:\n    /* \"#utility.yul\":2524:2528   */\n  0x00\n    /* \"#utility.yul\":2562:2564   */\n  0x20\n    /* \"#utility.yul\":2551:2560   */\n  dup3\n    /* \"#utility.yul\":2547:2565   */\n  add\n    /* \"#utility.yul\":2539:2565   */\n  swap1\n  pop\n    /* \"#utility.yul\":2611:2620   */\n  dup2\n    /* \"#utility.yul\":2605:2609   */\n  dup2\n    /* \"#utility.yul\":2601:2621   */\n  sub\n    /* \"#utility.yul\":2597:2598   */\n  0x00\n    /* \"#utility.yul\":2586:2595   */\n  dup4\n    /* \"#utility.yul\":2582:2599   */\n  add\n    /* \"#utility.yul\":2575:2622   */\n  mstore\n    /* \"#utility.yul\":2639:2770   */\n  tag_63\n    /* \"#utility.yul\":2765:2769   */\n  dup2\n    /* \"#utility.yul\":2639:2770   */\n  tag_33\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2631:2770   */\n  swap1\n  pop\n    /* \"#utility.yul\":2358:2777   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2783:2963   */\ntag_34:\n    /* \"#utility.yul\":2831:2908   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2828:2829   */\n  0x00\n    /* \"#utility.yul\":2821:2909   */\n  mstore\n    /* \"#utility.yul\":2928:2932   */\n  0x11\n    /* \"#utility.yul\":2925:2926   */\n  0x04\n    /* \"#utility.yul\":2918:2933   */\n  mstore\n    /* \"#utility.yul\":2952:2956   */\n  0x24\n    /* \"#utility.yul\":2949:2950   */\n  0x00\n    /* \"#utility.yul\":2942:2957   */\n  revert\n    /* \"#utility.yul\":2969:3160   */\ntag_17:\n    /* \"#utility.yul\":3009:3012   */\n  0x00\n    /* \"#utility.yul\":3028:3048   */\n  tag_66\n    /* \"#utility.yul\":3046:3047   */\n  dup3\n    /* \"#utility.yul\":3028:3048   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3023:3048   */\n  swap2\n  pop\n    /* \"#utility.yul\":3062:3082   */\n  tag_67\n    /* \"#utility.yul\":3080:3081   */\n  dup4\n    /* \"#utility.yul\":3062:3082   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3057:3082   */\n  swap3\n  pop\n    /* \"#utility.yul\":3105:3106   */\n  dup3\n    /* \"#utility.yul\":3102:3103   */\n  dup3\n    /* \"#utility.yul\":3098:3107   */\n  add\n    /* \"#utility.yul\":3091:3107   */\n  swap1\n  pop\n    /* \"#utility.yul\":3126:3129   */\n  dup1\n    /* \"#utility.yul\":3123:3124   */\n  dup3\n    /* \"#utility.yul\":3120:3130   */\n  gt\n    /* \"#utility.yul\":3117:3153   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3133:3151   */\n  tag_69\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3117:3153   */\ntag_68:\n    /* \"#utility.yul\":2969:3160   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3166:3346   */\ntag_35:\n    /* \"#utility.yul\":3214:3291   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3211:3212   */\n  0x00\n    /* \"#utility.yul\":3204:3292   */\n  mstore\n    /* \"#utility.yul\":3311:3315   */\n  0x12\n    /* \"#utility.yul\":3308:3309   */\n  0x04\n    /* \"#utility.yul\":3301:3316   */\n  mstore\n    /* \"#utility.yul\":3335:3339   */\n  0x24\n    /* \"#utility.yul\":3332:3333   */\n  0x00\n    /* \"#utility.yul\":3325:3340   */\n  revert\n    /* \"#utility.yul\":3352:3537   */\ntag_19:\n    /* \"#utility.yul\":3392:3393   */\n  0x00\n    /* \"#utility.yul\":3409:3429   */\n  tag_72\n    /* \"#utility.yul\":3427:3428   */\n  dup3\n    /* \"#utility.yul\":3409:3429   */\n  tag_25\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3404:3429   */\n  swap2\n  pop\n    /* \"#utility.yul\":3443:3463   */\n  tag_73\n    /* \"#utility.yul\":3461:3462   */\n  dup4\n    /* \"#utility.yul\":3443:3463   */\n  tag_25\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3438:3463   */\n  swap3\n  pop\n    /* \"#utility.yul\":3482:3483   */\n  dup3\n    /* \"#utility.yul\":3472:3507   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3487:3505   */\n  tag_75\n  tag_35\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3472:3507   */\ntag_74:\n    /* \"#utility.yul\":3529:3530   */\n  dup3\n    /* \"#utility.yul\":3526:3527   */\n  dup3\n    /* \"#utility.yul\":3522:3531   */\n  div\n    /* \"#utility.yul\":3517:3531   */\n  swap1\n  pop\n    /* \"#utility.yul\":3352:3537   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"E/email spoofing.sol\":493:3047  contract ExponentialMovingAverage is Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/email spoofing.sol\":493:3047  contract ExponentialMovingAverage is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd7247ec8\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xd7247ec8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdb1d0fd5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe270d1df\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xef78d4fd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x158ef93e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x36127d7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc05d873c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"E/email spoofing.sol\":865:888  bool public initialized */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/email spoofing.sol\":2096:2438  function updateEMA(uint256 newValue) external onlyOwner {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/email spoofing.sol\":2561:2638  function getEMA() external view returns (uint256) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/email spoofing.sol\":599:617  uint256 public ema */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/email spoofing.sol\":767:787  uint256 public alpha */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/email spoofing.sol\":2807:3045  function updatePeriod(uint256 newPeriod) external onlyOwner {... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"E/email spoofing.sol\":680:701  uint256 public period */\n    tag_11:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"E/email spoofing.sol\":865:888  bool public initialized */\n    tag_15:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"E/email spoofing.sol\":2096:2438  function updateEMA(uint256 newValue) external onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_49:\n        /* \"E/email spoofing.sol\":2181:2182  0 */\n      0x00\n        /* \"E/email spoofing.sol\":2170:2178  newValue */\n      dup2\n        /* \"E/email spoofing.sol\":2170:2182  newValue > 0 */\n      gt\n        /* \"E/email spoofing.sol\":2162:2208  require(newValue > 0, \"New value must be > 0\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"E/email spoofing.sol\":2223:2234  initialized */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"E/email spoofing.sol\":2218:2392  if (!initialized) {... */\n      tag_55\n      jumpi\n        /* \"E/email spoofing.sol\":2256:2264  newValue */\n      dup1\n        /* \"E/email spoofing.sol\":2250:2253  ema */\n      0x01\n        /* \"E/email spoofing.sol\":2250:2264  ema = newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/email spoofing.sol\":2292:2296  true */\n      0x01\n        /* \"E/email spoofing.sol\":2278:2289  initialized */\n      0x04\n      0x00\n        /* \"E/email spoofing.sol\":2278:2296  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"E/email spoofing.sol\":2218:2392  if (!initialized) {... */\n      jump(tag_56)\n    tag_55:\n        /* \"E/email spoofing.sol\":2377:2381  1e18 */\n      0x0de0b6b3a7640000\n        /* \"E/email spoofing.sol\":2370:2373  ema */\n      sload(0x01)\n        /* \"E/email spoofing.sol\":2361:2366  alpha */\n      sload(0x03)\n        /* \"E/email spoofing.sol\":2354:2358  1e18 */\n      0x0de0b6b3a7640000\n        /* \"E/email spoofing.sol\":2354:2366  1e18 - alpha */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"E/email spoofing.sol\":2353:2373  (1e18 - alpha) * ema */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"E/email spoofing.sol\":2342:2350  newValue */\n      dup3\n        /* \"E/email spoofing.sol\":2334:2339  alpha */\n      sload(0x03)\n        /* \"E/email spoofing.sol\":2334:2350  alpha * newValue */\n      tag_61\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n        /* \"E/email spoofing.sol\":2334:2373  alpha * newValue + (1e18 - alpha) * ema */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"E/email spoofing.sol\":2333:2381  (alpha * newValue + (1e18 - alpha) * ema) / 1e18 */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"E/email spoofing.sol\":2327:2330  ema */\n      0x01\n        /* \"E/email spoofing.sol\":2327:2381  ema = (alpha * newValue + (1e18 - alpha) * ema) / 1e18 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/email spoofing.sol\":2218:2392  if (!initialized) {... */\n    tag_56:\n        /* \"E/email spoofing.sol\":2406:2431  EMAUpdated(ema, newValue) */\n      0x79dc5b08a47915f93013626e984f7a2c63c5d5e9f0d2a6529deb3d6ddf8ce193\n        /* \"E/email spoofing.sol\":2417:2420  ema */\n      sload(0x01)\n        /* \"E/email spoofing.sol\":2422:2430  newValue */\n      dup3\n        /* \"E/email spoofing.sol\":2406:2431  EMAUpdated(ema, newValue) */\n      mload(0x40)\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/email spoofing.sol\":2096:2438  function updateEMA(uint256 newValue) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"E/email spoofing.sol\":2561:2638  function getEMA() external view returns (uint256) {... */\n    tag_29:\n        /* \"E/email spoofing.sol\":2602:2609  uint256 */\n      0x00\n        /* \"E/email spoofing.sol\":2628:2631  ema */\n      sload(0x01)\n        /* \"E/email spoofing.sol\":2621:2631  return ema */\n      swap1\n      pop\n        /* \"E/email spoofing.sol\":2561:2638  function getEMA() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"E/email spoofing.sol\":599:617  uint256 public ema */\n    tag_33:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"E/email spoofing.sol\":767:787  uint256 public alpha */\n    tag_36:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"E/email spoofing.sol\":2807:3045  function updatePeriod(uint256 newPeriod) external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"E/email spoofing.sol\":2897:2898  0 */\n      0x00\n        /* \"E/email spoofing.sol\":2885:2894  newPeriod */\n      dup2\n        /* \"E/email spoofing.sol\":2885:2898  newPeriod > 0 */\n      gt\n        /* \"E/email spoofing.sol\":2877:2921  require(newPeriod > 0, \"Period must be > 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"E/email spoofing.sol\":2940:2949  newPeriod */\n      dup1\n        /* \"E/email spoofing.sol\":2931:2937  period */\n      0x02\n        /* \"E/email spoofing.sol\":2931:2949  period = newPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/email spoofing.sol\":2990:2991  1 */\n      0x01\n        /* \"E/email spoofing.sol\":2981:2987  period */\n      sload(0x02)\n        /* \"E/email spoofing.sol\":2981:2991  period + 1 */\n      tag_81\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_81:\n        /* \"E/email spoofing.sol\":2968:2976  2 * 1e18 */\n      0x1bc16d674ec80000\n        /* \"E/email spoofing.sol\":2967:2992  (2 * 1e18) / (period + 1) */\n      tag_82\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_82:\n        /* \"E/email spoofing.sol\":2959:2964  alpha */\n      0x03\n        /* \"E/email spoofing.sol\":2959:2992  alpha = (2 * 1e18) / (period + 1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/email spoofing.sol\":3007:3038  PeriodUpdated(newPeriod, alpha) */\n      0x5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a\n        /* \"E/email spoofing.sol\":3021:3030  newPeriod */\n      dup2\n        /* \"E/email spoofing.sol\":3032:3037  alpha */\n      sload(0x03)\n        /* \"E/email spoofing.sol\":3007:3038  PeriodUpdated(newPeriod, alpha) */\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"E/email spoofing.sol\":2807:3045  function updatePeriod(uint256 newPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"E/email spoofing.sol\":680:701  uint256 public period */\n    tag_42:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_99:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_100:\n        /* \"#utility.yul\":184:205   */\n      tag_123\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_99\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_17:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_125\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_100\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:632   */\n    tag_102:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":621:622   */\n      0x00\n        /* \"#utility.yul\":614:626   */\n      revert\n        /* \"#utility.yul\":761:838   */\n    tag_104:\n        /* \"#utility.yul\":798:805   */\n      0x00\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":816:832   */\n      swap1\n      pop\n        /* \"#utility.yul\":761:838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":844:966   */\n    tag_105:\n        /* \"#utility.yul\":917:941   */\n      tag_131\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":917:941   */\n      tag_104\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":910:915   */\n      dup2\n        /* \"#utility.yul\":907:942   */\n      eq\n        /* \"#utility.yul\":897:960   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":956:957   */\n      0x00\n        /* \"#utility.yul\":953:954   */\n      0x00\n        /* \"#utility.yul\":946:958   */\n      revert\n        /* \"#utility.yul\":897:960   */\n    tag_132:\n        /* \"#utility.yul\":844:966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":972:1111   */\n    tag_106:\n        /* \"#utility.yul\":1018:1023   */\n      0x00\n        /* \"#utility.yul\":1056:1062   */\n      dup2\n        /* \"#utility.yul\":1043:1063   */\n      calldataload\n        /* \"#utility.yul\":1034:1063   */\n      swap1\n      pop\n        /* \"#utility.yul\":1072:1105   */\n      tag_134\n        /* \"#utility.yul\":1099:1104   */\n      dup2\n        /* \"#utility.yul\":1072:1105   */\n      tag_105\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":972:1111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1446   */\n    tag_20:\n        /* \"#utility.yul\":1176:1182   */\n      0x00\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1213:1222   */\n      dup3\n        /* \"#utility.yul\":1204:1211   */\n      dup5\n        /* \"#utility.yul\":1200:1223   */\n      sub\n        /* \"#utility.yul\":1196:1228   */\n      slt\n        /* \"#utility.yul\":1193:1312   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1231:1310   */\n      tag_137\n      tag_102\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1193:1312   */\n    tag_136:\n        /* \"#utility.yul\":1351:1352   */\n      0x00\n        /* \"#utility.yul\":1376:1429   */\n      tag_138\n        /* \"#utility.yul\":1421:1428   */\n      dup5\n        /* \"#utility.yul\":1412:1418   */\n      dup3\n        /* \"#utility.yul\":1401:1410   */\n      dup6\n        /* \"#utility.yul\":1397:1419   */\n      add\n        /* \"#utility.yul\":1376:1429   */\n      tag_106\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1366:1429   */\n      swap2\n      pop\n        /* \"#utility.yul\":1322:1439   */\n      pop\n        /* \"#utility.yul\":1117:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1578   */\n    tag_107:\n        /* \"#utility.yul\":1489:1496   */\n      0x00\n        /* \"#utility.yul\":1529:1571   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1522:1527   */\n      dup3\n        /* \"#utility.yul\":1518:1572   */\n      and\n        /* \"#utility.yul\":1507:1572   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1584:1680   */\n    tag_108:\n        /* \"#utility.yul\":1621:1628   */\n      0x00\n        /* \"#utility.yul\":1650:1674   */\n      tag_141\n        /* \"#utility.yul\":1668:1673   */\n      dup3\n        /* \"#utility.yul\":1650:1674   */\n      tag_107\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1639:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1584:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1804   */\n    tag_109:\n        /* \"#utility.yul\":1773:1797   */\n      tag_143\n        /* \"#utility.yul\":1791:1796   */\n      dup2\n        /* \"#utility.yul\":1773:1797   */\n      tag_108\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1798   */\n      mstore\n        /* \"#utility.yul\":1686:1804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:2032   */\n    tag_27:\n        /* \"#utility.yul\":1903:1907   */\n      0x00\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1930:1939   */\n      dup3\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"#utility.yul\":1918:1944   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:2025   */\n      tag_145\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1954:2025   */\n      tag_109\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1810:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_110:\n        /* \"#utility.yul\":2125:2149   */\n      tag_147\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_104\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_31:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_149\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_110\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_111:\n        /* \"#utility.yul\":2463:2487   */\n      tag_151\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_108\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_152:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_112:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_154\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_111\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_46:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_157\n      tag_102\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2739:2858   */\n    tag_156:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_158\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_112\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3167   */\n    tag_113:\n        /* \"#utility.yul\":3082:3093   */\n      0x00\n        /* \"#utility.yul\":3116:3122   */\n      dup3\n        /* \"#utility.yul\":3111:3114   */\n      dup3\n        /* \"#utility.yul\":3104:3123   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x20\n        /* \"#utility.yul\":3151:3154   */\n      dup3\n        /* \"#utility.yul\":3147:3161   */\n      add\n        /* \"#utility.yul\":3132:3161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3344   */\n    tag_114:\n        /* \"#utility.yul\":3313:3336   */\n      0x4e65772076616c7565206d757374206265203e20300000000000000000000000\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3297:3311   */\n      add\n        /* \"#utility.yul\":3290:3337   */\n      mstore\n        /* \"#utility.yul\":3173:3344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3716   */\n    tag_115:\n        /* \"#utility.yul\":3492:3495   */\n      0x00\n        /* \"#utility.yul\":3513:3580   */\n      tag_162\n        /* \"#utility.yul\":3577:3579   */\n      0x15\n        /* \"#utility.yul\":3572:3575   */\n      dup4\n        /* \"#utility.yul\":3513:3580   */\n      tag_113\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3506:3580   */\n      swap2\n      pop\n        /* \"#utility.yul\":3589:3682   */\n      tag_163\n        /* \"#utility.yul\":3678:3681   */\n      dup3\n        /* \"#utility.yul\":3589:3682   */\n      tag_114\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3702:3705   */\n      dup3\n        /* \"#utility.yul\":3698:3710   */\n      add\n        /* \"#utility.yul\":3691:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3350:3716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3722:4141   */\n    tag_54:\n        /* \"#utility.yul\":3888:3892   */\n      0x00\n        /* \"#utility.yul\":3926:3928   */\n      0x20\n        /* \"#utility.yul\":3915:3924   */\n      dup3\n        /* \"#utility.yul\":3911:3929   */\n      add\n        /* \"#utility.yul\":3903:3929   */\n      swap1\n      pop\n        /* \"#utility.yul\":3975:3984   */\n      dup2\n        /* \"#utility.yul\":3969:3973   */\n      dup2\n        /* \"#utility.yul\":3965:3985   */\n      sub\n        /* \"#utility.yul\":3961:3962   */\n      0x00\n        /* \"#utility.yul\":3950:3959   */\n      dup4\n        /* \"#utility.yul\":3946:3963   */\n      add\n        /* \"#utility.yul\":3939:3986   */\n      mstore\n        /* \"#utility.yul\":4003:4134   */\n      tag_165\n        /* \"#utility.yul\":4129:4133   */\n      dup2\n        /* \"#utility.yul\":4003:4134   */\n      tag_115\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3995:4134   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:4141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4147:4327   */\n    tag_116:\n        /* \"#utility.yul\":4195:4272   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4185:4273   */\n      mstore\n        /* \"#utility.yul\":4292:4296   */\n      0x11\n        /* \"#utility.yul\":4289:4290   */\n      0x04\n        /* \"#utility.yul\":4282:4297   */\n      mstore\n        /* \"#utility.yul\":4316:4320   */\n      0x24\n        /* \"#utility.yul\":4313:4314   */\n      0x00\n        /* \"#utility.yul\":4306:4321   */\n      revert\n        /* \"#utility.yul\":4333:4527   */\n    tag_58:\n        /* \"#utility.yul\":4373:4377   */\n      0x00\n        /* \"#utility.yul\":4393:4413   */\n      tag_168\n        /* \"#utility.yul\":4411:4412   */\n      dup3\n        /* \"#utility.yul\":4393:4413   */\n      tag_104\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4388:4413   */\n      swap2\n      pop\n        /* \"#utility.yul\":4427:4447   */\n      tag_169\n        /* \"#utility.yul\":4445:4446   */\n      dup4\n        /* \"#utility.yul\":4427:4447   */\n      tag_104\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4422:4447   */\n      swap3\n      pop\n        /* \"#utility.yul\":4471:4472   */\n      dup3\n        /* \"#utility.yul\":4468:4469   */\n      dup3\n        /* \"#utility.yul\":4464:4473   */\n      sub\n        /* \"#utility.yul\":4456:4473   */\n      swap1\n      pop\n        /* \"#utility.yul\":4495:4496   */\n      dup2\n        /* \"#utility.yul\":4489:4493   */\n      dup2\n        /* \"#utility.yul\":4486:4497   */\n      gt\n        /* \"#utility.yul\":4483:4520   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":4500:4518   */\n      tag_171\n      tag_116\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4483:4520   */\n    tag_170:\n        /* \"#utility.yul\":4333:4527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4533:4943   */\n    tag_60:\n        /* \"#utility.yul\":4573:4580   */\n      0x00\n        /* \"#utility.yul\":4596:4616   */\n      tag_173\n        /* \"#utility.yul\":4614:4615   */\n      dup3\n        /* \"#utility.yul\":4596:4616   */\n      tag_104\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4591:4616   */\n      swap2\n      pop\n        /* \"#utility.yul\":4630:4650   */\n      tag_174\n        /* \"#utility.yul\":4648:4649   */\n      dup4\n        /* \"#utility.yul\":4630:4650   */\n      tag_104\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4625:4650   */\n      swap3\n      pop\n        /* \"#utility.yul\":4685:4686   */\n      dup3\n        /* \"#utility.yul\":4682:4683   */\n      dup3\n        /* \"#utility.yul\":4678:4687   */\n      mul\n        /* \"#utility.yul\":4707:4737   */\n      tag_175\n        /* \"#utility.yul\":4725:4736   */\n      dup2\n        /* \"#utility.yul\":4707:4737   */\n      tag_104\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4696:4737   */\n      swap2\n      pop\n        /* \"#utility.yul\":4886:4887   */\n      dup3\n        /* \"#utility.yul\":4877:4884   */\n      dup3\n        /* \"#utility.yul\":4873:4888   */\n      div\n        /* \"#utility.yul\":4870:4871   */\n      dup5\n        /* \"#utility.yul\":4867:4889   */\n      eq\n        /* \"#utility.yul\":4847:4848   */\n      dup4\n        /* \"#utility.yul\":4840:4849   */\n      iszero\n        /* \"#utility.yul\":4820:4903   */\n      or\n        /* \"#utility.yul\":4797:4936   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":4916:4934   */\n      tag_177\n      tag_116\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4797:4936   */\n    tag_176:\n        /* \"#utility.yul\":4581:4943   */\n      pop\n        /* \"#utility.yul\":4533:4943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4949:5140   */\n    tag_63:\n        /* \"#utility.yul\":4989:4992   */\n      0x00\n        /* \"#utility.yul\":5008:5028   */\n      tag_179\n        /* \"#utility.yul\":5026:5027   */\n      dup3\n        /* \"#utility.yul\":5008:5028   */\n      tag_104\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5003:5028   */\n      swap2\n      pop\n        /* \"#utility.yul\":5042:5062   */\n      tag_180\n        /* \"#utility.yul\":5060:5061   */\n      dup4\n        /* \"#utility.yul\":5042:5062   */\n      tag_104\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5037:5062   */\n      swap3\n      pop\n        /* \"#utility.yul\":5085:5086   */\n      dup3\n        /* \"#utility.yul\":5082:5083   */\n      dup3\n        /* \"#utility.yul\":5078:5087   */\n      add\n        /* \"#utility.yul\":5071:5087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5106:5109   */\n      dup1\n        /* \"#utility.yul\":5103:5104   */\n      dup3\n        /* \"#utility.yul\":5100:5110   */\n      gt\n        /* \"#utility.yul\":5097:5133   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":5113:5131   */\n      tag_182\n      tag_116\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5097:5133   */\n    tag_181:\n        /* \"#utility.yul\":4949:5140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5326   */\n    tag_117:\n        /* \"#utility.yul\":5194:5271   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5191:5192   */\n      0x00\n        /* \"#utility.yul\":5184:5272   */\n      mstore\n        /* \"#utility.yul\":5291:5295   */\n      0x12\n        /* \"#utility.yul\":5288:5289   */\n      0x04\n        /* \"#utility.yul\":5281:5296   */\n      mstore\n        /* \"#utility.yul\":5315:5319   */\n      0x24\n        /* \"#utility.yul\":5312:5313   */\n      0x00\n        /* \"#utility.yul\":5305:5320   */\n      revert\n        /* \"#utility.yul\":5332:5517   */\n    tag_65:\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5389:5409   */\n      tag_185\n        /* \"#utility.yul\":5407:5408   */\n      dup3\n        /* \"#utility.yul\":5389:5409   */\n      tag_104\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5384:5409   */\n      swap2\n      pop\n        /* \"#utility.yul\":5423:5443   */\n      tag_186\n        /* \"#utility.yul\":5441:5442   */\n      dup4\n        /* \"#utility.yul\":5423:5443   */\n      tag_104\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5418:5443   */\n      swap3\n      pop\n        /* \"#utility.yul\":5462:5463   */\n      dup3\n        /* \"#utility.yul\":5452:5487   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":5467:5485   */\n      tag_188\n      tag_117\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5452:5487   */\n    tag_187:\n        /* \"#utility.yul\":5509:5510   */\n      dup3\n        /* \"#utility.yul\":5506:5507   */\n      dup3\n        /* \"#utility.yul\":5502:5511   */\n      div\n        /* \"#utility.yul\":5497:5511   */\n      swap1\n      pop\n        /* \"#utility.yul\":5332:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5855   */\n    tag_67:\n        /* \"#utility.yul\":5644:5648   */\n      0x00\n        /* \"#utility.yul\":5682:5684   */\n      0x40\n        /* \"#utility.yul\":5671:5680   */\n      dup3\n        /* \"#utility.yul\":5667:5685   */\n      add\n        /* \"#utility.yul\":5659:5685   */\n      swap1\n      pop\n        /* \"#utility.yul\":5695:5766   */\n      tag_190\n        /* \"#utility.yul\":5763:5764   */\n      0x00\n        /* \"#utility.yul\":5752:5761   */\n      dup4\n        /* \"#utility.yul\":5748:5765   */\n      add\n        /* \"#utility.yul\":5739:5745   */\n      dup6\n        /* \"#utility.yul\":5695:5766   */\n      tag_110\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5776:5848   */\n      tag_191\n        /* \"#utility.yul\":5844:5846   */\n      0x20\n        /* \"#utility.yul\":5833:5842   */\n      dup4\n        /* \"#utility.yul\":5829:5847   */\n      add\n        /* \"#utility.yul\":5820:5826   */\n      dup5\n        /* \"#utility.yul\":5776:5848   */\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5523:5855   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5861:6029   */\n    tag_118:\n        /* \"#utility.yul\":6001:6021   */\n      0x506572696f64206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":5997:5998   */\n      0x00\n        /* \"#utility.yul\":5989:5995   */\n      dup3\n        /* \"#utility.yul\":5985:5999   */\n      add\n        /* \"#utility.yul\":5978:6022   */\n      mstore\n        /* \"#utility.yul\":5861:6029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6035:6401   */\n    tag_119:\n        /* \"#utility.yul\":6177:6180   */\n      0x00\n        /* \"#utility.yul\":6198:6265   */\n      tag_194\n        /* \"#utility.yul\":6262:6264   */\n      0x12\n        /* \"#utility.yul\":6257:6260   */\n      dup4\n        /* \"#utility.yul\":6198:6265   */\n      tag_113\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6191:6265   */\n      swap2\n      pop\n        /* \"#utility.yul\":6274:6367   */\n      tag_195\n        /* \"#utility.yul\":6363:6366   */\n      dup3\n        /* \"#utility.yul\":6274:6367   */\n      tag_118\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6392:6394   */\n      0x20\n        /* \"#utility.yul\":6387:6390   */\n      dup3\n        /* \"#utility.yul\":6383:6395   */\n      add\n        /* \"#utility.yul\":6376:6395   */\n      swap1\n      pop\n        /* \"#utility.yul\":6035:6401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6407:6826   */\n    tag_80:\n        /* \"#utility.yul\":6573:6577   */\n      0x00\n        /* \"#utility.yul\":6611:6613   */\n      0x20\n        /* \"#utility.yul\":6600:6609   */\n      dup3\n        /* \"#utility.yul\":6596:6614   */\n      add\n        /* \"#utility.yul\":6588:6614   */\n      swap1\n      pop\n        /* \"#utility.yul\":6660:6669   */\n      dup2\n        /* \"#utility.yul\":6654:6658   */\n      dup2\n        /* \"#utility.yul\":6650:6670   */\n      sub\n        /* \"#utility.yul\":6646:6647   */\n      0x00\n        /* \"#utility.yul\":6635:6644   */\n      dup4\n        /* \"#utility.yul\":6631:6648   */\n      add\n        /* \"#utility.yul\":6624:6671   */\n      mstore\n        /* \"#utility.yul\":6688:6819   */\n      tag_197\n        /* \"#utility.yul\":6814:6818   */\n      dup2\n        /* \"#utility.yul\":6688:6819   */\n      tag_119\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6680:6819   */\n      swap1\n      pop\n        /* \"#utility.yul\":6407:6826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b54890ab83e79f0fb722e302879dda5d76702ecd38484cfc2daabb14bb148fe164736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_243": {
									"entryPoint": null,
									"id": 243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 297,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3540:3",
										"nodeType": "YulBlock",
										"src": "0:3540:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:32:3",
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nativeSrc": "389:16:3",
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:3",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nativeSrc": "460:79:3",
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:3",
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:3",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nativeSrc": "519:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nativeSrc": "519:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nativeSrc": "490:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nativeSrc": "480:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nativeSrc": "473:43:3",
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nativeSrc": "470:63:3",
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:3",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nativeSrc": "608:80:3",
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nativeSrc": "618:22:3",
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nativeSrc": "627:13:3",
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nativeSrc": "649:33:3",
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nativeSrc": "649:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:3",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:3",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:3",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nativeSrc": "771:274:3",
													"nodeType": "YulBlock",
													"src": "771:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:3",
																"nodeType": "YulBlock",
																"src": "817:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:3"
																			},
																			"nativeSrc": "819:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:3"
																		},
																		"nativeSrc": "819:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:3"
																		},
																		"nativeSrc": "788:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:3",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:3"
																},
																"nativeSrc": "784:32:3",
																"nodeType": "YulFunctionCall",
																"src": "784:32:3"
															},
															"nativeSrc": "781:119:3",
															"nodeType": "YulIf",
															"src": "781:119:3"
														},
														{
															"nativeSrc": "910:128:3",
															"nodeType": "YulBlock",
															"src": "910:128:3",
															"statements": [
																{
																	"nativeSrc": "925:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:3",
																		"nodeType": "YulLiteral",
																		"src": "939:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:3",
																			"nodeType": "YulTypedName",
																			"src": "929:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:3",
																	"nodeType": "YulAssignment",
																	"src": "954:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:3"
																				},
																				"nativeSrc": "996:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:3"
																		},
																		"nativeSrc": "964:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:3",
														"nodeType": "YulTypedName",
														"src": "741:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:3",
														"nodeType": "YulTypedName",
														"src": "752:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:3",
														"nodeType": "YulTypedName",
														"src": "764:6:3",
														"type": ""
													}
												],
												"src": "694:351:3"
											},
											{
												"body": {
													"nativeSrc": "1096:81:3",
													"nodeType": "YulBlock",
													"src": "1096:81:3",
													"statements": [
														{
															"nativeSrc": "1106:65:3",
															"nodeType": "YulAssignment",
															"src": "1106:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1121:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1121:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1128:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1128:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1117:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:3"
																},
																"nativeSrc": "1117:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1117:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1106:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1106:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1051:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:3",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1088:7:3",
														"nodeType": "YulTypedName",
														"src": "1088:7:3",
														"type": ""
													}
												],
												"src": "1051:126:3"
											},
											{
												"body": {
													"nativeSrc": "1228:51:3",
													"nodeType": "YulBlock",
													"src": "1228:51:3",
													"statements": [
														{
															"nativeSrc": "1238:35:3",
															"nodeType": "YulAssignment",
															"src": "1238:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1267:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1267:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1249:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1249:17:3"
																},
																"nativeSrc": "1249:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1249:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1238:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1238:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1183:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1210:5:3",
														"nodeType": "YulTypedName",
														"src": "1210:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1220:7:3",
														"nodeType": "YulTypedName",
														"src": "1220:7:3",
														"type": ""
													}
												],
												"src": "1183:96:3"
											},
											{
												"body": {
													"nativeSrc": "1350:53:3",
													"nodeType": "YulBlock",
													"src": "1350:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1390:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1390:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1372:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1372:17:3"
																		},
																		"nativeSrc": "1372:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:3"
																},
																"nativeSrc": "1360:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1360:37:3"
															},
															"nativeSrc": "1360:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1360:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1285:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:3",
														"nodeType": "YulTypedName",
														"src": "1338:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:3",
														"nodeType": "YulTypedName",
														"src": "1345:3:3",
														"type": ""
													}
												],
												"src": "1285:118:3"
											},
											{
												"body": {
													"nativeSrc": "1507:124:3",
													"nodeType": "YulBlock",
													"src": "1507:124:3",
													"statements": [
														{
															"nativeSrc": "1517:26:3",
															"nodeType": "YulAssignment",
															"src": "1517:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1529:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1529:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1540:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1525:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:3"
																},
																"nativeSrc": "1525:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1525:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1517:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1517:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1597:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1610:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1621:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1606:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:3"
																		},
																		"nativeSrc": "1606:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1553:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:3"
																},
																"nativeSrc": "1553:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1553:71:3"
															},
															"nativeSrc": "1553:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1553:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1409:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1479:9:3",
														"nodeType": "YulTypedName",
														"src": "1479:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1491:6:3",
														"nodeType": "YulTypedName",
														"src": "1491:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1502:4:3",
														"nodeType": "YulTypedName",
														"src": "1502:4:3",
														"type": ""
													}
												],
												"src": "1409:222:3"
											},
											{
												"body": {
													"nativeSrc": "1733:73:3",
													"nodeType": "YulBlock",
													"src": "1733:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1750:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1755:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1755:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1743:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:3"
																},
																"nativeSrc": "1743:19:3",
																"nodeType": "YulFunctionCall",
																"src": "1743:19:3"
															},
															"nativeSrc": "1743:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "1743:19:3"
														},
														{
															"nativeSrc": "1771:29:3",
															"nodeType": "YulAssignment",
															"src": "1771:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1790:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1790:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1795:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1795:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1786:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:3"
																},
																"nativeSrc": "1786:14:3",
																"nodeType": "YulFunctionCall",
																"src": "1786:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1771:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "1771:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1637:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1705:3:3",
														"nodeType": "YulTypedName",
														"src": "1705:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1710:6:3",
														"nodeType": "YulTypedName",
														"src": "1710:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1721:11:3",
														"nodeType": "YulTypedName",
														"src": "1721:11:3",
														"type": ""
													}
												],
												"src": "1637:169:3"
											},
											{
												"body": {
													"nativeSrc": "1918:62:3",
													"nodeType": "YulBlock",
													"src": "1918:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1940:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1948:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1936:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:3"
																		},
																		"nativeSrc": "1936:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:14:3"
																	},
																	{
																		"hexValue": "506572696f64206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "1952:20:3",
																		"nodeType": "YulLiteral",
																		"src": "1952:20:3",
																		"type": "",
																		"value": "Period must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1929:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:3"
																},
																"nativeSrc": "1929:44:3",
																"nodeType": "YulFunctionCall",
																"src": "1929:44:3"
															},
															"nativeSrc": "1929:44:3",
															"nodeType": "YulExpressionStatement",
															"src": "1929:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
												"nativeSrc": "1812:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1910:6:3",
														"nodeType": "YulTypedName",
														"src": "1910:6:3",
														"type": ""
													}
												],
												"src": "1812:168:3"
											},
											{
												"body": {
													"nativeSrc": "2132:220:3",
													"nodeType": "YulBlock",
													"src": "2132:220:3",
													"statements": [
														{
															"nativeSrc": "2142:74:3",
															"nodeType": "YulAssignment",
															"src": "2142:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2208:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2208:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2213:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:3",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2149:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2149:58:3"
																},
																"nativeSrc": "2149:67:3",
																"nodeType": "YulFunctionCall",
																"src": "2149:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2142:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2142:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2314:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2314:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
																	"nativeSrc": "2225:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "2225:88:3"
																},
																"nativeSrc": "2225:93:3",
																"nodeType": "YulFunctionCall",
																"src": "2225:93:3"
															},
															"nativeSrc": "2225:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "2225:93:3"
														},
														{
															"nativeSrc": "2327:19:3",
															"nodeType": "YulAssignment",
															"src": "2327:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2338:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2338:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2343:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2343:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2334:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:3"
																},
																"nativeSrc": "2334:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2334:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2327:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1986:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2120:3:3",
														"nodeType": "YulTypedName",
														"src": "2120:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2128:3:3",
														"nodeType": "YulTypedName",
														"src": "2128:3:3",
														"type": ""
													}
												],
												"src": "1986:366:3"
											},
											{
												"body": {
													"nativeSrc": "2529:248:3",
													"nodeType": "YulBlock",
													"src": "2529:248:3",
													"statements": [
														{
															"nativeSrc": "2539:26:3",
															"nodeType": "YulAssignment",
															"src": "2539:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2551:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2551:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2562:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2562:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2547:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2547:3:3"
																},
																"nativeSrc": "2547:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2547:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2539:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2539:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2597:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2597:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2582:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:3"
																		},
																		"nativeSrc": "2582:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2605:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2605:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2611:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2601:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:3"
																		},
																		"nativeSrc": "2601:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2575:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:3"
																},
																"nativeSrc": "2575:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2575:47:3"
															},
															"nativeSrc": "2575:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2575:47:3"
														},
														{
															"nativeSrc": "2631:139:3",
															"nodeType": "YulAssignment",
															"src": "2631:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2765:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2765:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2639:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "2639:124:3"
																},
																"nativeSrc": "2639:131:3",
																"nodeType": "YulFunctionCall",
																"src": "2639:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2631:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2631:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2358:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2509:9:3",
														"nodeType": "YulTypedName",
														"src": "2509:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2524:4:3",
														"nodeType": "YulTypedName",
														"src": "2524:4:3",
														"type": ""
													}
												],
												"src": "2358:419:3"
											},
											{
												"body": {
													"nativeSrc": "2811:152:3",
													"nodeType": "YulBlock",
													"src": "2811:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2828:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2831:77:3",
																		"nodeType": "YulLiteral",
																		"src": "2831:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2821:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:3"
																},
																"nativeSrc": "2821:88:3",
																"nodeType": "YulFunctionCall",
																"src": "2821:88:3"
															},
															"nativeSrc": "2821:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "2821:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2925:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2925:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2928:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2918:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2918:6:3"
																},
																"nativeSrc": "2918:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2918:15:3"
															},
															"nativeSrc": "2918:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2918:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2949:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2949:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2952:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2952:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2942:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:3"
																},
																"nativeSrc": "2942:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2942:15:3"
															},
															"nativeSrc": "2942:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2942:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2783:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2783:180:3"
											},
											{
												"body": {
													"nativeSrc": "3013:147:3",
													"nodeType": "YulBlock",
													"src": "3013:147:3",
													"statements": [
														{
															"nativeSrc": "3023:25:3",
															"nodeType": "YulAssignment",
															"src": "3023:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3046:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3046:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3028:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3028:17:3"
																},
																"nativeSrc": "3028:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3028:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3023:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3023:1:3"
																}
															]
														},
														{
															"nativeSrc": "3057:25:3",
															"nodeType": "YulAssignment",
															"src": "3057:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3080:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3080:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3062:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3062:17:3"
																},
																"nativeSrc": "3062:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3062:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3057:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3057:1:3"
																}
															]
														},
														{
															"nativeSrc": "3091:16:3",
															"nodeType": "YulAssignment",
															"src": "3091:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3102:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3102:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3105:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3105:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3098:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3098:3:3"
																},
																"nativeSrc": "3098:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3098:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3091:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3131:22:3",
																"nodeType": "YulBlock",
																"src": "3131:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3133:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3133:16:3"
																			},
																			"nativeSrc": "3133:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:18:3"
																		},
																		"nativeSrc": "3133:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3123:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3123:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3126:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3126:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3120:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3120:2:3"
																},
																"nativeSrc": "3120:10:3",
																"nodeType": "YulFunctionCall",
																"src": "3120:10:3"
															},
															"nativeSrc": "3117:36:3",
															"nodeType": "YulIf",
															"src": "3117:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2969:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3000:1:3",
														"nodeType": "YulTypedName",
														"src": "3000:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3003:1:3",
														"nodeType": "YulTypedName",
														"src": "3003:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3009:3:3",
														"nodeType": "YulTypedName",
														"src": "3009:3:3",
														"type": ""
													}
												],
												"src": "2969:191:3"
											},
											{
												"body": {
													"nativeSrc": "3194:152:3",
													"nodeType": "YulBlock",
													"src": "3194:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3211:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3214:77:3",
																		"nodeType": "YulLiteral",
																		"src": "3214:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3204:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:3"
																},
																"nativeSrc": "3204:88:3",
																"nodeType": "YulFunctionCall",
																"src": "3204:88:3"
															},
															"nativeSrc": "3204:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "3204:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3308:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3308:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3311:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3311:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3301:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:3"
																},
																"nativeSrc": "3301:15:3",
																"nodeType": "YulFunctionCall",
																"src": "3301:15:3"
															},
															"nativeSrc": "3301:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "3301:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3332:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3332:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3335:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3335:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3325:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3325:6:3"
																},
																"nativeSrc": "3325:15:3",
																"nodeType": "YulFunctionCall",
																"src": "3325:15:3"
															},
															"nativeSrc": "3325:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "3325:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "3166:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "3166:180:3"
											},
											{
												"body": {
													"nativeSrc": "3394:143:3",
													"nodeType": "YulBlock",
													"src": "3394:143:3",
													"statements": [
														{
															"nativeSrc": "3404:25:3",
															"nodeType": "YulAssignment",
															"src": "3404:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3427:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3427:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3409:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3409:17:3"
																},
																"nativeSrc": "3409:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3409:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3404:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3404:1:3"
																}
															]
														},
														{
															"nativeSrc": "3438:25:3",
															"nodeType": "YulAssignment",
															"src": "3438:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3461:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3461:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3443:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3443:17:3"
																},
																"nativeSrc": "3443:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3443:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3438:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3438:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3485:22:3",
																"nodeType": "YulBlock",
																"src": "3485:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3487:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3487:16:3"
																			},
																			"nativeSrc": "3487:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3487:18:3"
																		},
																		"nativeSrc": "3487:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3487:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3482:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3482:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3475:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3475:6:3"
																},
																"nativeSrc": "3475:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3475:9:3"
															},
															"nativeSrc": "3472:35:3",
															"nodeType": "YulIf",
															"src": "3472:35:3"
														},
														{
															"nativeSrc": "3517:14:3",
															"nodeType": "YulAssignment",
															"src": "3517:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3526:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3526:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3529:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3529:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3522:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3522:3:3"
																},
																"nativeSrc": "3522:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3522:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3517:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3517:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3352:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3383:1:3",
														"nodeType": "YulTypedName",
														"src": "3383:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3386:1:3",
														"nodeType": "YulTypedName",
														"src": "3386:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3392:1:3",
														"nodeType": "YulTypedName",
														"src": "3392:1:3",
														"type": ""
													}
												],
												"src": "3352:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Period must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610d77380380610d7783398181016040528101906100319190610221565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061028b565b60405180910390fd5b6100b18161012960201b60201c565b505f81116100f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100eb906102fe565b60405180910390fd5b80600281905550600160025461010a9190610349565b671bc16d674ec8000061011d91906103a9565b600381905550506103d9565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f819050919050565b610200816101ee565b811461020a575f5ffd5b50565b5f8151905061021b816101f7565b92915050565b5f60208284031215610236576102356101ea565b5b5f6102438482850161020d565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102758261024c565b9050919050565b6102858161026b565b82525050565b5f60208201905061029e5f83018461027c565b92915050565b5f82825260208201905092915050565b7f506572696f64206d757374206265203e203000000000000000000000000000005f82015250565b5f6102e86012836102a4565b91506102f3826102b4565b602082019050919050565b5f6020820190508181035f830152610315816102dc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610353826101ee565b915061035e836101ee565b92508282019050808211156103765761037561031c565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6103b3826101ee565b91506103be836101ee565b9250826103ce576103cd61037c565b5b828204905092915050565b610991806103e65f395ff3fe608060405234801561000f575f5ffd5b506004361061009c575f3560e01c8063d7247ec811610064578063d7247ec814610120578063db1d0fd51461013e578063e270d1df1461015c578063ef78d4fd14610178578063f2fde38b146101965761009c565b8063158ef93e146100a057806336127d7e146100be578063715018a6146100da5780638da5cb5b146100e4578063c05d873c14610102575b5f5ffd5b6100a86101b2565b6040516100b591906105d3565b60405180910390f35b6100d860048036038101906100d39190610623565b6101c4565b005b6100e26102da565b005b6100ec6102ed565b6040516100f9919061068d565b60405180910390f35b61010a610314565b60405161011791906106b5565b60405180910390f35b61012861031d565b60405161013591906106b5565b60405180910390f35b610146610323565b60405161015391906106b5565b60405180910390f35b61017660048036038101906101719190610623565b610329565b005b6101806103e0565b60405161018d91906106b5565b60405180910390f35b6101b060048036038101906101ab91906106f8565b6103e6565b005b60045f9054906101000a900460ff1681565b6101cc61046a565b5f811161020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102059061077d565b60405180910390fd5b60045f9054906101000a900460ff166102475780600181905550600160045f6101000a81548160ff02191690831515021790555061029c565b670de0b6b3a7640000600154600354670de0b6b3a764000061026991906107c8565b61027391906107fb565b8260035461028191906107fb565b61028b919061083c565b610295919061089c565b6001819055505b7f79dc5b08a47915f93013626e984f7a2c63c5d5e9f0d2a6529deb3d6ddf8ce193600154826040516102cf9291906108cc565b60405180910390a150565b6102e261046a565b6102eb5f6104f1565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600154905090565b60015481565b60035481565b61033161046a565b5f8111610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a9061093d565b60405180910390fd5b806002819055506001600254610389919061083c565b671bc16d674ec8000061039c919061089c565b6003819055507f5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a816003546040516103d59291906108cc565b60405180910390a150565b60025481565b6103ee61046a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361045e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610455919061068d565b60405180910390fd5b610467816104f1565b50565b6104726105b2565b73ffffffffffffffffffffffffffffffffffffffff166104906102ed565b73ffffffffffffffffffffffffffffffffffffffff16146104ef576104b36105b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104e6919061068d565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8115159050919050565b6105cd816105b9565b82525050565b5f6020820190506105e65f8301846105c4565b92915050565b5f5ffd5b5f819050919050565b610602816105f0565b811461060c575f5ffd5b50565b5f8135905061061d816105f9565b92915050565b5f60208284031215610638576106376105ec565b5b5f6106458482850161060f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106778261064e565b9050919050565b6106878161066d565b82525050565b5f6020820190506106a05f83018461067e565b92915050565b6106af816105f0565b82525050565b5f6020820190506106c85f8301846106a6565b92915050565b6106d78161066d565b81146106e1575f5ffd5b50565b5f813590506106f2816106ce565b92915050565b5f6020828403121561070d5761070c6105ec565b5b5f61071a848285016106e4565b91505092915050565b5f82825260208201905092915050565b7f4e65772076616c7565206d757374206265203e203000000000000000000000005f82015250565b5f610767601583610723565b915061077282610733565b602082019050919050565b5f6020820190508181035f8301526107948161075b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107d2826105f0565b91506107dd836105f0565b92508282039050818111156107f5576107f461079b565b5b92915050565b5f610805826105f0565b9150610810836105f0565b925082820261081e816105f0565b915082820484148315176108355761083461079b565b5b5092915050565b5f610846826105f0565b9150610851836105f0565b92508282019050808211156108695761086861079b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6108a6826105f0565b91506108b1836105f0565b9250826108c1576108c061086f565b5b828204905092915050565b5f6040820190506108df5f8301856106a6565b6108ec60208301846106a6565b9392505050565b7f506572696f64206d757374206265203e203000000000000000000000000000005f82015250565b5f610927601283610723565b9150610932826108f3565b602082019050919050565b5f6020820190508181035f8301526109548161091b565b905091905056fea2646970667358221220b54890ab83e79f0fb722e302879dda5d76702ecd38484cfc2daabb14bb148fe164736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD77 CODESIZE SUB DUP1 PUSH2 0xD77 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x221 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x129 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB SWAP1 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x3D9 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200 DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP2 EQ PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21B DUP2 PUSH2 0x1F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236 JUMPI PUSH2 0x235 PUSH2 0x1EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x243 DUP5 DUP3 DUP6 ADD PUSH2 0x20D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x26B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E PUSH0 DUP4 ADD DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506572696F64206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8 PUSH1 0x12 DUP4 PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3 DUP3 PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315 DUP2 PUSH2 0x2DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x353 DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x35E DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x375 PUSH2 0x31C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3B3 DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3BE DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3CE JUMPI PUSH2 0x3CD PUSH2 0x37C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x991 DUP1 PUSH2 0x3E6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7247EC8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD7247EC8 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xDB1D0FD5 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xE270D1DF EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x196 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x158EF93E EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x36127D7E EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xC05D873C EQ PUSH2 0x102 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x46A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x247 JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x29C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x79DC5B08A47915F93013626E984F7A2C63C5D5E9F0D2A6529DEB3D6DDF8CE193 PUSH1 0x1 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP3 SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x2EB PUSH0 PUSH2 0x4F1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x46A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x5B873FC01D45058FE77F3883A91020F46D5A7385BAAC6CEAB19748D1D0AE464A DUP2 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP3 SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x46A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x467 DUP2 PUSH2 0x4F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x472 PUSH2 0x5B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x490 PUSH2 0x2ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EF JUMPI PUSH2 0x4B3 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CD DUP2 PUSH2 0x5B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x602 DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x60C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61D DUP2 PUSH2 0x5F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x638 JUMPI PUSH2 0x637 PUSH2 0x5EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x645 DUP5 DUP3 DUP6 ADD PUSH2 0x60F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x677 DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x67E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6AF DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D7 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP2 EQ PUSH2 0x6E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F2 DUP2 PUSH2 0x6CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH2 0x70C PUSH2 0x5EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x71A DUP5 DUP3 DUP6 ADD PUSH2 0x6E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E65772076616C7565206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x767 PUSH1 0x15 DUP4 PUSH2 0x723 JUMP JUMPDEST SWAP2 POP PUSH2 0x772 DUP3 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x794 DUP2 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7D2 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x7F5 JUMPI PUSH2 0x7F4 PUSH2 0x79B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x805 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x810 DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x81E DUP2 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x79B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x846 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x851 DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x869 JUMPI PUSH2 0x868 PUSH2 0x79B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8A6 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B1 DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x86F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8DF PUSH0 DUP4 ADD DUP6 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x8EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x506572696F64206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x927 PUSH1 0x12 DUP4 PUSH2 0x723 JUMP JUMPDEST SWAP2 POP PUSH2 0x932 DUP3 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x954 DUP2 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 BASEFEE SWAP1 0xAB DUP4 SWAPN 0x9F 0xF 0xB7 0x22 CALLF 0x287 SWAP14 0xDA TSTORE PUSH23 0x702ECD38484CFC2DAABB14BB148FE164736F6C63430008 SAR STOP CALLER ",
							"sourceMap": "493:2554:2:-:0;;;1520:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1557:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1597:1:2::1;1587:7;:11;1579:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1640:7;1631:6;:16;;;;1736:1;1727:6;;:10;;;;:::i;:::-;1714:8;1713:25;;;;:::i;:::-;1705:5;:33;;;;1520:225:::0;493:2554;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:126::-;1088:7;1128:42;1121:5;1117:54;1106:65;;1051:126;;;:::o;1183:96::-;1220:7;1249:24;1267:5;1249:24;:::i;:::-;1238:35;;1183:96;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;1637:169::-;1721:11;1755:6;1750:3;1743:19;1795:4;1790:3;1786:14;1771:29;;1637:169;;;;:::o;1812:168::-;1952:20;1948:1;1940:6;1936:14;1929:44;1812:168;:::o;1986:366::-;2128:3;2149:67;2213:2;2208:3;2149:67;:::i;:::-;2142:74;;2225:93;2314:3;2225:93;:::i;:::-;2343:2;2338:3;2334:12;2327:19;;1986:366;;;:::o;2358:419::-;2524:4;2562:2;2551:9;2547:18;2539:26;;2611:9;2605:4;2601:20;2597:1;2586:9;2582:17;2575:47;2639:131;2765:4;2639:131;:::i;:::-;2631:139;;2358:419;;;:::o;2783:180::-;2831:77;2828:1;2821:88;2928:4;2925:1;2918:15;2952:4;2949:1;2942:15;2969:191;3009:3;3028:20;3046:1;3028:20;:::i;:::-;3023:25;;3062:20;3080:1;3062:20;:::i;:::-;3057:25;;3105:1;3102;3098:9;3091:16;;3126:3;3123:1;3120:10;3117:36;;;3133:18;;:::i;:::-;3117:36;2969:191;;;;:::o;3166:180::-;3214:77;3211:1;3204:88;3311:4;3308:1;3301:15;3335:4;3332:1;3325:15;3352:185;3392:1;3409:20;3427:1;3409:20;:::i;:::-;3404:25;;3443:20;3461:1;3443:20;:::i;:::-;3438:25;;3482:1;3472:35;;3487:18;;:::i;:::-;3472:35;3529:1;3526;3522:9;3517:14;;3352:185;;;;:::o;493:2554:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1130,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1458,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1265,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alpha_192": {
									"entryPoint": 803,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ema_186": {
									"entryPoint": 797,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getEMA_302": {
									"entryPoint": 788,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialized_195": {
									"entryPoint": 434,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 749,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@period_189": {
									"entryPoint": 992,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 730,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 998,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateEMA_293": {
									"entryPoint": 452,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePeriod_339": {
									"entryPoint": 809,
									"id": 339,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6829:3",
										"nodeType": "YulBlock",
										"src": "0:6829:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:3",
													"nodeType": "YulBlock",
													"src": "49:48:3",
													"statements": [
														{
															"nativeSrc": "59:32:3",
															"nodeType": "YulAssignment",
															"src": "59:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:3"
																		},
																		"nativeSrc": "77:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:3"
																},
																"nativeSrc": "70:21:3",
																"nodeType": "YulFunctionCall",
																"src": "70:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:3",
														"nodeType": "YulTypedName",
														"src": "31:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:3",
														"nodeType": "YulTypedName",
														"src": "41:7:3",
														"type": ""
													}
												],
												"src": "7:90:3"
											},
											{
												"body": {
													"nativeSrc": "162:50:3",
													"nodeType": "YulBlock",
													"src": "162:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:3"
																		},
																		"nativeSrc": "184:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:3"
																},
																"nativeSrc": "172:34:3",
																"nodeType": "YulFunctionCall",
																"src": "172:34:3"
															},
															"nativeSrc": "172:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:3",
														"nodeType": "YulTypedName",
														"src": "150:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:3",
														"nodeType": "YulTypedName",
														"src": "157:3:3",
														"type": ""
													}
												],
												"src": "103:109:3"
											},
											{
												"body": {
													"nativeSrc": "310:118:3",
													"nodeType": "YulBlock",
													"src": "310:118:3",
													"statements": [
														{
															"nativeSrc": "320:26:3",
															"nodeType": "YulAssignment",
															"src": "320:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:3",
																		"nodeType": "YulLiteral",
																		"src": "343:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:3"
																},
																"nativeSrc": "328:18:3",
																"nodeType": "YulFunctionCall",
																"src": "328:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:3",
																				"nodeType": "YulLiteral",
																				"src": "418:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:3"
																		},
																		"nativeSrc": "403:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:3"
																},
																"nativeSrc": "356:65:3",
																"nodeType": "YulFunctionCall",
																"src": "356:65:3"
															},
															"nativeSrc": "356:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:3",
														"nodeType": "YulTypedName",
														"src": "282:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:3",
														"nodeType": "YulTypedName",
														"src": "294:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:3",
														"nodeType": "YulTypedName",
														"src": "305:4:3",
														"type": ""
													}
												],
												"src": "218:210:3"
											},
											{
												"body": {
													"nativeSrc": "474:35:3",
													"nodeType": "YulBlock",
													"src": "474:35:3",
													"statements": [
														{
															"nativeSrc": "484:19:3",
															"nodeType": "YulAssignment",
															"src": "484:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "500:2:3",
																		"nodeType": "YulLiteral",
																		"src": "500:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "494:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "494:5:3"
																},
																"nativeSrc": "494:9:3",
																"nodeType": "YulFunctionCall",
																"src": "494:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "484:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "434:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "467:6:3",
														"nodeType": "YulTypedName",
														"src": "467:6:3",
														"type": ""
													}
												],
												"src": "434:75:3"
											},
											{
												"body": {
													"nativeSrc": "604:28:3",
													"nodeType": "YulBlock",
													"src": "604:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "621:1:3",
																		"nodeType": "YulLiteral",
																		"src": "621:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "624:1:3",
																		"nodeType": "YulLiteral",
																		"src": "624:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "614:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:3"
																},
																"nativeSrc": "614:12:3",
																"nodeType": "YulFunctionCall",
																"src": "614:12:3"
															},
															"nativeSrc": "614:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "614:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "515:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "515:117:3"
											},
											{
												"body": {
													"nativeSrc": "727:28:3",
													"nodeType": "YulBlock",
													"src": "727:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "744:1:3",
																		"nodeType": "YulLiteral",
																		"src": "744:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "747:1:3",
																		"nodeType": "YulLiteral",
																		"src": "747:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "737:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:3"
																},
																"nativeSrc": "737:12:3",
																"nodeType": "YulFunctionCall",
																"src": "737:12:3"
															},
															"nativeSrc": "737:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "737:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "638:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "638:117:3"
											},
											{
												"body": {
													"nativeSrc": "806:32:3",
													"nodeType": "YulBlock",
													"src": "806:32:3",
													"statements": [
														{
															"nativeSrc": "816:16:3",
															"nodeType": "YulAssignment",
															"src": "816:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "827:5:3",
																"nodeType": "YulIdentifier",
																"src": "827:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "816:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "816:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "761:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "788:5:3",
														"nodeType": "YulTypedName",
														"src": "788:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "798:7:3",
														"nodeType": "YulTypedName",
														"src": "798:7:3",
														"type": ""
													}
												],
												"src": "761:77:3"
											},
											{
												"body": {
													"nativeSrc": "887:79:3",
													"nodeType": "YulBlock",
													"src": "887:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "944:16:3",
																"nodeType": "YulBlock",
																"src": "944:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "953:1:3",
																					"nodeType": "YulLiteral",
																					"src": "953:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "956:1:3",
																					"nodeType": "YulLiteral",
																					"src": "956:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "946:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:3"
																			},
																			"nativeSrc": "946:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "946:12:3"
																		},
																		"nativeSrc": "946:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "946:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "910:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "910:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "935:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "935:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "917:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "917:17:3"
																				},
																				"nativeSrc": "917:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "917:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "907:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "907:2:3"
																		},
																		"nativeSrc": "907:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "907:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "900:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:3"
																},
																"nativeSrc": "900:43:3",
																"nodeType": "YulFunctionCall",
																"src": "900:43:3"
															},
															"nativeSrc": "897:63:3",
															"nodeType": "YulIf",
															"src": "897:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "844:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "880:5:3",
														"nodeType": "YulTypedName",
														"src": "880:5:3",
														"type": ""
													}
												],
												"src": "844:122:3"
											},
											{
												"body": {
													"nativeSrc": "1024:87:3",
													"nodeType": "YulBlock",
													"src": "1024:87:3",
													"statements": [
														{
															"nativeSrc": "1034:29:3",
															"nodeType": "YulAssignment",
															"src": "1034:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1056:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1056:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1043:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1043:12:3"
																},
																"nativeSrc": "1043:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1043:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1034:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1034:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1099:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1099:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1072:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1072:26:3"
																},
																"nativeSrc": "1072:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1072:33:3"
															},
															"nativeSrc": "1072:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1072:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "972:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1002:6:3",
														"nodeType": "YulTypedName",
														"src": "1002:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1010:3:3",
														"nodeType": "YulTypedName",
														"src": "1010:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1018:5:3",
														"nodeType": "YulTypedName",
														"src": "1018:5:3",
														"type": ""
													}
												],
												"src": "972:139:3"
											},
											{
												"body": {
													"nativeSrc": "1183:263:3",
													"nodeType": "YulBlock",
													"src": "1183:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1229:83:3",
																"nodeType": "YulBlock",
																"src": "1229:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1231:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1231:77:3"
																			},
																			"nativeSrc": "1231:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1231:79:3"
																		},
																		"nativeSrc": "1231:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1231:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1204:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1204:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1213:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1213:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1200:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:3"
																		},
																		"nativeSrc": "1200:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1225:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1225:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1196:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1196:3:3"
																},
																"nativeSrc": "1196:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1196:32:3"
															},
															"nativeSrc": "1193:119:3",
															"nodeType": "YulIf",
															"src": "1193:119:3"
														},
														{
															"nativeSrc": "1322:117:3",
															"nodeType": "YulBlock",
															"src": "1322:117:3",
															"statements": [
																{
																	"nativeSrc": "1337:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1337:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1351:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1351:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1341:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1341:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1366:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1366:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1401:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1401:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1412:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1397:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1397:3:3"
																				},
																				"nativeSrc": "1397:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1397:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1421:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1421:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1376:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1376:20:3"
																		},
																		"nativeSrc": "1376:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1376:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1366:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1366:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1117:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1153:9:3",
														"nodeType": "YulTypedName",
														"src": "1153:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1164:7:3",
														"nodeType": "YulTypedName",
														"src": "1164:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1176:6:3",
														"nodeType": "YulTypedName",
														"src": "1176:6:3",
														"type": ""
													}
												],
												"src": "1117:329:3"
											},
											{
												"body": {
													"nativeSrc": "1497:81:3",
													"nodeType": "YulBlock",
													"src": "1497:81:3",
													"statements": [
														{
															"nativeSrc": "1507:65:3",
															"nodeType": "YulAssignment",
															"src": "1507:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1522:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1522:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1529:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1529:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1518:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:3"
																},
																"nativeSrc": "1518:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1518:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1507:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1507:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1452:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1479:5:3",
														"nodeType": "YulTypedName",
														"src": "1479:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1489:7:3",
														"nodeType": "YulTypedName",
														"src": "1489:7:3",
														"type": ""
													}
												],
												"src": "1452:126:3"
											},
											{
												"body": {
													"nativeSrc": "1629:51:3",
													"nodeType": "YulBlock",
													"src": "1629:51:3",
													"statements": [
														{
															"nativeSrc": "1639:35:3",
															"nodeType": "YulAssignment",
															"src": "1639:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1668:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1668:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1650:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1650:17:3"
																},
																"nativeSrc": "1650:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1650:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1639:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1639:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1584:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1611:5:3",
														"nodeType": "YulTypedName",
														"src": "1611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1621:7:3",
														"nodeType": "YulTypedName",
														"src": "1621:7:3",
														"type": ""
													}
												],
												"src": "1584:96:3"
											},
											{
												"body": {
													"nativeSrc": "1751:53:3",
													"nodeType": "YulBlock",
													"src": "1751:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1791:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1791:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1773:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1773:17:3"
																		},
																		"nativeSrc": "1773:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1773:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1761:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:3"
																},
																"nativeSrc": "1761:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1761:37:3"
															},
															"nativeSrc": "1761:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1761:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1686:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:3",
														"nodeType": "YulTypedName",
														"src": "1739:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1746:3:3",
														"nodeType": "YulTypedName",
														"src": "1746:3:3",
														"type": ""
													}
												],
												"src": "1686:118:3"
											},
											{
												"body": {
													"nativeSrc": "1908:124:3",
													"nodeType": "YulBlock",
													"src": "1908:124:3",
													"statements": [
														{
															"nativeSrc": "1918:26:3",
															"nodeType": "YulAssignment",
															"src": "1918:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1930:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:3"
																},
																"nativeSrc": "1926:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1926:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1918:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:3"
																		},
																		"nativeSrc": "2007:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1954:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1954:43:3"
																},
																"nativeSrc": "1954:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1954:71:3"
															},
															"nativeSrc": "1954:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1954:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1810:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:3",
														"nodeType": "YulTypedName",
														"src": "1880:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1892:6:3",
														"nodeType": "YulTypedName",
														"src": "1892:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1903:4:3",
														"nodeType": "YulTypedName",
														"src": "1903:4:3",
														"type": ""
													}
												],
												"src": "1810:222:3"
											},
											{
												"body": {
													"nativeSrc": "2103:53:3",
													"nodeType": "YulBlock",
													"src": "2103:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2143:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2125:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:3"
																		},
																		"nativeSrc": "2125:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:3"
																},
																"nativeSrc": "2113:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2113:37:3"
															},
															"nativeSrc": "2113:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2038:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:3",
														"nodeType": "YulTypedName",
														"src": "2091:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2098:3:3",
														"nodeType": "YulTypedName",
														"src": "2098:3:3",
														"type": ""
													}
												],
												"src": "2038:118:3"
											},
											{
												"body": {
													"nativeSrc": "2260:124:3",
													"nodeType": "YulBlock",
													"src": "2260:124:3",
													"statements": [
														{
															"nativeSrc": "2270:26:3",
															"nodeType": "YulAssignment",
															"src": "2270:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:3"
																},
																"nativeSrc": "2278:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2278:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2350:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2374:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2359:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:3"
																		},
																		"nativeSrc": "2359:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2306:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:3"
																},
																"nativeSrc": "2306:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2306:71:3"
															},
															"nativeSrc": "2306:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2162:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:3",
														"nodeType": "YulTypedName",
														"src": "2232:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2244:6:3",
														"nodeType": "YulTypedName",
														"src": "2244:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2255:4:3",
														"nodeType": "YulTypedName",
														"src": "2255:4:3",
														"type": ""
													}
												],
												"src": "2162:222:3"
											},
											{
												"body": {
													"nativeSrc": "2433:79:3",
													"nodeType": "YulBlock",
													"src": "2433:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2490:16:3",
																"nodeType": "YulBlock",
																"src": "2490:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2502:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2492:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:3"
																			},
																			"nativeSrc": "2492:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:3"
																		},
																		"nativeSrc": "2492:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2456:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2481:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2463:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:3"
																				},
																				"nativeSrc": "2463:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2453:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:3"
																		},
																		"nativeSrc": "2453:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2446:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:3"
																},
																"nativeSrc": "2446:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2446:43:3"
															},
															"nativeSrc": "2443:63:3",
															"nodeType": "YulIf",
															"src": "2443:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2390:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2426:5:3",
														"nodeType": "YulTypedName",
														"src": "2426:5:3",
														"type": ""
													}
												],
												"src": "2390:122:3"
											},
											{
												"body": {
													"nativeSrc": "2570:87:3",
													"nodeType": "YulBlock",
													"src": "2570:87:3",
													"statements": [
														{
															"nativeSrc": "2580:29:3",
															"nodeType": "YulAssignment",
															"src": "2580:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2602:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2589:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:3"
																},
																"nativeSrc": "2589:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2589:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2580:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2645:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2618:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:3"
																},
																"nativeSrc": "2618:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2618:33:3"
															},
															"nativeSrc": "2618:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2518:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2548:6:3",
														"nodeType": "YulTypedName",
														"src": "2548:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2556:3:3",
														"nodeType": "YulTypedName",
														"src": "2556:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2564:5:3",
														"nodeType": "YulTypedName",
														"src": "2564:5:3",
														"type": ""
													}
												],
												"src": "2518:139:3"
											},
											{
												"body": {
													"nativeSrc": "2729:263:3",
													"nodeType": "YulBlock",
													"src": "2729:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2775:83:3",
																"nodeType": "YulBlock",
																"src": "2775:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2777:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:3"
																			},
																			"nativeSrc": "2777:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:3"
																		},
																		"nativeSrc": "2777:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2746:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:3"
																		},
																		"nativeSrc": "2746:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2742:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:3"
																},
																"nativeSrc": "2742:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:3"
															},
															"nativeSrc": "2739:119:3",
															"nodeType": "YulIf",
															"src": "2739:119:3"
														},
														{
															"nativeSrc": "2868:117:3",
															"nodeType": "YulBlock",
															"src": "2868:117:3",
															"statements": [
																{
																	"nativeSrc": "2883:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2897:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2887:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2912:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2912:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2947:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2958:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2943:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:3"
																				},
																				"nativeSrc": "2943:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2967:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2922:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:3"
																		},
																		"nativeSrc": "2922:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2912:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2663:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2699:9:3",
														"nodeType": "YulTypedName",
														"src": "2699:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2710:7:3",
														"nodeType": "YulTypedName",
														"src": "2710:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2722:6:3",
														"nodeType": "YulTypedName",
														"src": "2722:6:3",
														"type": ""
													}
												],
												"src": "2663:329:3"
											},
											{
												"body": {
													"nativeSrc": "3094:73:3",
													"nodeType": "YulBlock",
													"src": "3094:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3111:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3116:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3104:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:3"
																},
																"nativeSrc": "3104:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3104:19:3"
															},
															"nativeSrc": "3104:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3104:19:3"
														},
														{
															"nativeSrc": "3132:29:3",
															"nodeType": "YulAssignment",
															"src": "3132:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3151:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3156:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3147:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:3"
																},
																"nativeSrc": "3147:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3147:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3132:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3132:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2998:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3066:3:3",
														"nodeType": "YulTypedName",
														"src": "3066:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3071:6:3",
														"nodeType": "YulTypedName",
														"src": "3071:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3082:11:3",
														"nodeType": "YulTypedName",
														"src": "3082:11:3",
														"type": ""
													}
												],
												"src": "2998:169:3"
											},
											{
												"body": {
													"nativeSrc": "3279:65:3",
													"nodeType": "YulBlock",
													"src": "3279:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3301:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3309:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3309:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3297:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:3"
																		},
																		"nativeSrc": "3297:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:14:3"
																	},
																	{
																		"hexValue": "4e65772076616c7565206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "3313:23:3",
																		"nodeType": "YulLiteral",
																		"src": "3313:23:3",
																		"type": "",
																		"value": "New value must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:3"
																},
																"nativeSrc": "3290:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3290:47:3"
															},
															"nativeSrc": "3290:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3290:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984",
												"nativeSrc": "3173:171:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3271:6:3",
														"nodeType": "YulTypedName",
														"src": "3271:6:3",
														"type": ""
													}
												],
												"src": "3173:171:3"
											},
											{
												"body": {
													"nativeSrc": "3496:220:3",
													"nodeType": "YulBlock",
													"src": "3496:220:3",
													"statements": [
														{
															"nativeSrc": "3506:74:3",
															"nodeType": "YulAssignment",
															"src": "3506:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3572:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3572:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3513:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3513:58:3"
																},
																"nativeSrc": "3513:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3513:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3506:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3678:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984",
																	"nativeSrc": "3589:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3589:88:3"
																},
																"nativeSrc": "3589:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3589:93:3"
															},
															"nativeSrc": "3589:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3589:93:3"
														},
														{
															"nativeSrc": "3691:19:3",
															"nodeType": "YulAssignment",
															"src": "3691:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3702:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3702:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3698:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:3"
																},
																"nativeSrc": "3698:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3698:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3691:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3691:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3350:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3484:3:3",
														"nodeType": "YulTypedName",
														"src": "3484:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3492:3:3",
														"nodeType": "YulTypedName",
														"src": "3492:3:3",
														"type": ""
													}
												],
												"src": "3350:366:3"
											},
											{
												"body": {
													"nativeSrc": "3893:248:3",
													"nodeType": "YulBlock",
													"src": "3893:248:3",
													"statements": [
														{
															"nativeSrc": "3903:26:3",
															"nodeType": "YulAssignment",
															"src": "3903:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3915:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3915:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3926:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3926:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3911:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:3"
																},
																"nativeSrc": "3911:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3911:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3903:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3903:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3950:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3950:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3961:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3961:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3946:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3946:3:3"
																		},
																		"nativeSrc": "3946:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3946:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3969:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3969:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3975:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3975:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3965:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:3"
																		},
																		"nativeSrc": "3965:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3965:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3939:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3939:6:3"
																},
																"nativeSrc": "3939:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3939:47:3"
															},
															"nativeSrc": "3939:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3939:47:3"
														},
														{
															"nativeSrc": "3995:139:3",
															"nodeType": "YulAssignment",
															"src": "3995:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4129:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4129:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4003:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4003:124:3"
																},
																"nativeSrc": "4003:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4003:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3995:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3995:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3722:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3873:9:3",
														"nodeType": "YulTypedName",
														"src": "3873:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3888:4:3",
														"nodeType": "YulTypedName",
														"src": "3888:4:3",
														"type": ""
													}
												],
												"src": "3722:419:3"
											},
											{
												"body": {
													"nativeSrc": "4175:152:3",
													"nodeType": "YulBlock",
													"src": "4175:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4192:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4195:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:3"
																},
																"nativeSrc": "4185:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4185:88:3"
															},
															"nativeSrc": "4185:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4185:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4289:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4289:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4292:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4292:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4282:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:3"
																},
																"nativeSrc": "4282:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4282:15:3"
															},
															"nativeSrc": "4282:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4282:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4313:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4313:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4316:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4316:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4306:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:3"
																},
																"nativeSrc": "4306:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4306:15:3"
															},
															"nativeSrc": "4306:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4306:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4147:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4147:180:3"
											},
											{
												"body": {
													"nativeSrc": "4378:149:3",
													"nodeType": "YulBlock",
													"src": "4378:149:3",
													"statements": [
														{
															"nativeSrc": "4388:25:3",
															"nodeType": "YulAssignment",
															"src": "4388:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4411:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4411:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4393:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4393:17:3"
																},
																"nativeSrc": "4393:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4393:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4388:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4388:1:3"
																}
															]
														},
														{
															"nativeSrc": "4422:25:3",
															"nodeType": "YulAssignment",
															"src": "4422:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4445:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4445:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4427:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4427:17:3"
																},
																"nativeSrc": "4427:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4427:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4422:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4422:1:3"
																}
															]
														},
														{
															"nativeSrc": "4456:17:3",
															"nodeType": "YulAssignment",
															"src": "4456:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4468:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4468:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4471:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4471:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4464:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:3"
																},
																"nativeSrc": "4464:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4464:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4456:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4456:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4498:22:3",
																"nodeType": "YulBlock",
																"src": "4498:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4500:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4500:16:3"
																			},
																			"nativeSrc": "4500:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4500:18:3"
																		},
																		"nativeSrc": "4500:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4500:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4489:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4489:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4495:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4495:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4486:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4486:2:3"
																},
																"nativeSrc": "4486:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4486:11:3"
															},
															"nativeSrc": "4483:37:3",
															"nodeType": "YulIf",
															"src": "4483:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4333:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4364:1:3",
														"nodeType": "YulTypedName",
														"src": "4364:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4367:1:3",
														"nodeType": "YulTypedName",
														"src": "4367:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4373:4:3",
														"nodeType": "YulTypedName",
														"src": "4373:4:3",
														"type": ""
													}
												],
												"src": "4333:194:3"
											},
											{
												"body": {
													"nativeSrc": "4581:362:3",
													"nodeType": "YulBlock",
													"src": "4581:362:3",
													"statements": [
														{
															"nativeSrc": "4591:25:3",
															"nodeType": "YulAssignment",
															"src": "4591:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4614:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4614:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4596:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4596:17:3"
																},
																"nativeSrc": "4596:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4596:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4591:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4591:1:3"
																}
															]
														},
														{
															"nativeSrc": "4625:25:3",
															"nodeType": "YulAssignment",
															"src": "4625:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4648:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4648:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4630:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4630:17:3"
																},
																"nativeSrc": "4630:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4630:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4625:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4625:1:3"
																}
															]
														},
														{
															"nativeSrc": "4659:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4659:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4682:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4682:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4685:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4685:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4678:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4678:3:3"
																},
																"nativeSrc": "4678:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4678:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4663:11:3",
																	"nodeType": "YulTypedName",
																	"src": "4663:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4696:41:3",
															"nodeType": "YulAssignment",
															"src": "4696:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4725:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "4725:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4707:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4707:17:3"
																},
																"nativeSrc": "4707:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4707:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4696:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4696:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4914:22:3",
																"nodeType": "YulBlock",
																"src": "4914:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4916:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4916:16:3"
																			},
																			"nativeSrc": "4916:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4916:18:3"
																		},
																		"nativeSrc": "4916:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4847:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4847:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4840:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4840:6:3"
																				},
																				"nativeSrc": "4840:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4840:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4870:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4870:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4877:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "4877:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4886:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "4886:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4873:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "4873:3:3"
																						},
																						"nativeSrc": "4873:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "4873:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4867:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "4867:2:3"
																				},
																				"nativeSrc": "4867:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4867:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4820:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4820:2:3"
																		},
																		"nativeSrc": "4820:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4820:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4800:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:3"
																},
																"nativeSrc": "4800:113:3",
																"nodeType": "YulFunctionCall",
																"src": "4800:113:3"
															},
															"nativeSrc": "4797:139:3",
															"nodeType": "YulIf",
															"src": "4797:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4533:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4564:1:3",
														"nodeType": "YulTypedName",
														"src": "4564:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4567:1:3",
														"nodeType": "YulTypedName",
														"src": "4567:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4573:7:3",
														"nodeType": "YulTypedName",
														"src": "4573:7:3",
														"type": ""
													}
												],
												"src": "4533:410:3"
											},
											{
												"body": {
													"nativeSrc": "4993:147:3",
													"nodeType": "YulBlock",
													"src": "4993:147:3",
													"statements": [
														{
															"nativeSrc": "5003:25:3",
															"nodeType": "YulAssignment",
															"src": "5003:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5026:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5008:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5008:17:3"
																},
																"nativeSrc": "5008:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5008:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5003:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5003:1:3"
																}
															]
														},
														{
															"nativeSrc": "5037:25:3",
															"nodeType": "YulAssignment",
															"src": "5037:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5060:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5060:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5042:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5042:17:3"
																},
																"nativeSrc": "5042:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5042:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5037:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5037:1:3"
																}
															]
														},
														{
															"nativeSrc": "5071:16:3",
															"nodeType": "YulAssignment",
															"src": "5071:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5082:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5082:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5085:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5085:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5078:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5078:3:3"
																},
																"nativeSrc": "5078:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5078:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5071:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5111:22:3",
																"nodeType": "YulBlock",
																"src": "5111:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5113:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5113:16:3"
																			},
																			"nativeSrc": "5113:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5113:18:3"
																		},
																		"nativeSrc": "5113:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5113:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5103:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5103:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5106:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5106:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5100:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5100:2:3"
																},
																"nativeSrc": "5100:10:3",
																"nodeType": "YulFunctionCall",
																"src": "5100:10:3"
															},
															"nativeSrc": "5097:36:3",
															"nodeType": "YulIf",
															"src": "5097:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4949:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4980:1:3",
														"nodeType": "YulTypedName",
														"src": "4980:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4983:1:3",
														"nodeType": "YulTypedName",
														"src": "4983:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4989:3:3",
														"nodeType": "YulTypedName",
														"src": "4989:3:3",
														"type": ""
													}
												],
												"src": "4949:191:3"
											},
											{
												"body": {
													"nativeSrc": "5174:152:3",
													"nodeType": "YulBlock",
													"src": "5174:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5194:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5194:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5184:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5184:6:3"
																},
																"nativeSrc": "5184:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5184:88:3"
															},
															"nativeSrc": "5184:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5184:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5288:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5288:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5291:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5291:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5281:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:3"
																},
																"nativeSrc": "5281:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5281:15:3"
															},
															"nativeSrc": "5281:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5281:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5312:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5312:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5315:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5315:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5305:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5305:6:3"
																},
																"nativeSrc": "5305:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5305:15:3"
															},
															"nativeSrc": "5305:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5305:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5146:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5146:180:3"
											},
											{
												"body": {
													"nativeSrc": "5374:143:3",
													"nodeType": "YulBlock",
													"src": "5374:143:3",
													"statements": [
														{
															"nativeSrc": "5384:25:3",
															"nodeType": "YulAssignment",
															"src": "5384:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5407:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5407:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5389:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5389:17:3"
																},
																"nativeSrc": "5389:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5389:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5384:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5384:1:3"
																}
															]
														},
														{
															"nativeSrc": "5418:25:3",
															"nodeType": "YulAssignment",
															"src": "5418:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5441:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5441:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5423:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5423:17:3"
																},
																"nativeSrc": "5423:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5423:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5418:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5418:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5465:22:3",
																"nodeType": "YulBlock",
																"src": "5465:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5467:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5467:16:3"
																			},
																			"nativeSrc": "5467:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5467:18:3"
																		},
																		"nativeSrc": "5467:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5467:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5462:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5455:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:3"
																},
																"nativeSrc": "5455:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5455:9:3"
															},
															"nativeSrc": "5452:35:3",
															"nodeType": "YulIf",
															"src": "5452:35:3"
														},
														{
															"nativeSrc": "5497:14:3",
															"nodeType": "YulAssignment",
															"src": "5497:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5506:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5506:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5509:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5509:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5502:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:3"
																},
																"nativeSrc": "5502:9:3",
																"nodeType": "YulFunctionCall",
																"src": "5502:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5497:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5497:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5332:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5363:1:3",
														"nodeType": "YulTypedName",
														"src": "5363:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5366:1:3",
														"nodeType": "YulTypedName",
														"src": "5366:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5372:1:3",
														"nodeType": "YulTypedName",
														"src": "5372:1:3",
														"type": ""
													}
												],
												"src": "5332:185:3"
											},
											{
												"body": {
													"nativeSrc": "5649:206:3",
													"nodeType": "YulBlock",
													"src": "5649:206:3",
													"statements": [
														{
															"nativeSrc": "5659:26:3",
															"nodeType": "YulAssignment",
															"src": "5659:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5671:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5671:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5682:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5682:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5667:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:3"
																},
																"nativeSrc": "5667:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5667:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5659:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5659:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5739:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5739:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5752:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5752:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5763:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5763:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5748:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5748:3:3"
																		},
																		"nativeSrc": "5748:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5695:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5695:43:3"
																},
																"nativeSrc": "5695:71:3",
																"nodeType": "YulFunctionCall",
																"src": "5695:71:3"
															},
															"nativeSrc": "5695:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "5695:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5820:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5820:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5833:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5844:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5829:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:3"
																		},
																		"nativeSrc": "5829:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5776:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5776:43:3"
																},
																"nativeSrc": "5776:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5776:72:3"
															},
															"nativeSrc": "5776:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5776:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5523:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5613:9:3",
														"nodeType": "YulTypedName",
														"src": "5613:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5625:6:3",
														"nodeType": "YulTypedName",
														"src": "5625:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5633:6:3",
														"nodeType": "YulTypedName",
														"src": "5633:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5644:4:3",
														"nodeType": "YulTypedName",
														"src": "5644:4:3",
														"type": ""
													}
												],
												"src": "5523:332:3"
											},
											{
												"body": {
													"nativeSrc": "5967:62:3",
													"nodeType": "YulBlock",
													"src": "5967:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5989:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5989:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5997:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5997:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5985:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5985:3:3"
																		},
																		"nativeSrc": "5985:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5985:14:3"
																	},
																	{
																		"hexValue": "506572696f64206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "6001:20:3",
																		"nodeType": "YulLiteral",
																		"src": "6001:20:3",
																		"type": "",
																		"value": "Period must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5978:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:3"
																},
																"nativeSrc": "5978:44:3",
																"nodeType": "YulFunctionCall",
																"src": "5978:44:3"
															},
															"nativeSrc": "5978:44:3",
															"nodeType": "YulExpressionStatement",
															"src": "5978:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
												"nativeSrc": "5861:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5959:6:3",
														"nodeType": "YulTypedName",
														"src": "5959:6:3",
														"type": ""
													}
												],
												"src": "5861:168:3"
											},
											{
												"body": {
													"nativeSrc": "6181:220:3",
													"nodeType": "YulBlock",
													"src": "6181:220:3",
													"statements": [
														{
															"nativeSrc": "6191:74:3",
															"nodeType": "YulAssignment",
															"src": "6191:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6257:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6257:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6262:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6262:2:3",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6198:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6198:58:3"
																},
																"nativeSrc": "6198:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6198:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6191:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6363:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6363:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
																	"nativeSrc": "6274:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6274:88:3"
																},
																"nativeSrc": "6274:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6274:93:3"
															},
															"nativeSrc": "6274:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6274:93:3"
														},
														{
															"nativeSrc": "6376:19:3",
															"nodeType": "YulAssignment",
															"src": "6376:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6387:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6387:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6392:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6383:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:3"
																},
																"nativeSrc": "6383:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6383:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6376:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6035:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6169:3:3",
														"nodeType": "YulTypedName",
														"src": "6169:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6177:3:3",
														"nodeType": "YulTypedName",
														"src": "6177:3:3",
														"type": ""
													}
												],
												"src": "6035:366:3"
											},
											{
												"body": {
													"nativeSrc": "6578:248:3",
													"nodeType": "YulBlock",
													"src": "6578:248:3",
													"statements": [
														{
															"nativeSrc": "6588:26:3",
															"nodeType": "YulAssignment",
															"src": "6588:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6600:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6600:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6611:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6596:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:3"
																},
																"nativeSrc": "6596:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6596:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6588:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6588:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6635:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6635:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6646:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6646:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6631:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6631:3:3"
																		},
																		"nativeSrc": "6631:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6631:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6654:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6654:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6660:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6650:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:3"
																		},
																		"nativeSrc": "6650:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6624:6:3"
																},
																"nativeSrc": "6624:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6624:47:3"
															},
															"nativeSrc": "6624:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6624:47:3"
														},
														{
															"nativeSrc": "6680:139:3",
															"nodeType": "YulAssignment",
															"src": "6680:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6814:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6814:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6688:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6688:124:3"
																},
																"nativeSrc": "6688:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6688:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6680:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6680:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6407:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6558:9:3",
														"nodeType": "YulTypedName",
														"src": "6558:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6573:4:3",
														"nodeType": "YulTypedName",
														"src": "6573:4:3",
														"type": ""
													}
												],
												"src": "6407:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984(memPtr) {\n\n        mstore(add(memPtr, 0), \"New value must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Period must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061009c575f3560e01c8063d7247ec811610064578063d7247ec814610120578063db1d0fd51461013e578063e270d1df1461015c578063ef78d4fd14610178578063f2fde38b146101965761009c565b8063158ef93e146100a057806336127d7e146100be578063715018a6146100da5780638da5cb5b146100e4578063c05d873c14610102575b5f5ffd5b6100a86101b2565b6040516100b591906105d3565b60405180910390f35b6100d860048036038101906100d39190610623565b6101c4565b005b6100e26102da565b005b6100ec6102ed565b6040516100f9919061068d565b60405180910390f35b61010a610314565b60405161011791906106b5565b60405180910390f35b61012861031d565b60405161013591906106b5565b60405180910390f35b610146610323565b60405161015391906106b5565b60405180910390f35b61017660048036038101906101719190610623565b610329565b005b6101806103e0565b60405161018d91906106b5565b60405180910390f35b6101b060048036038101906101ab91906106f8565b6103e6565b005b60045f9054906101000a900460ff1681565b6101cc61046a565b5f811161020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102059061077d565b60405180910390fd5b60045f9054906101000a900460ff166102475780600181905550600160045f6101000a81548160ff02191690831515021790555061029c565b670de0b6b3a7640000600154600354670de0b6b3a764000061026991906107c8565b61027391906107fb565b8260035461028191906107fb565b61028b919061083c565b610295919061089c565b6001819055505b7f79dc5b08a47915f93013626e984f7a2c63c5d5e9f0d2a6529deb3d6ddf8ce193600154826040516102cf9291906108cc565b60405180910390a150565b6102e261046a565b6102eb5f6104f1565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600154905090565b60015481565b60035481565b61033161046a565b5f8111610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a9061093d565b60405180910390fd5b806002819055506001600254610389919061083c565b671bc16d674ec8000061039c919061089c565b6003819055507f5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a816003546040516103d59291906108cc565b60405180910390a150565b60025481565b6103ee61046a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361045e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610455919061068d565b60405180910390fd5b610467816104f1565b50565b6104726105b2565b73ffffffffffffffffffffffffffffffffffffffff166104906102ed565b73ffffffffffffffffffffffffffffffffffffffff16146104ef576104b36105b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104e6919061068d565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8115159050919050565b6105cd816105b9565b82525050565b5f6020820190506105e65f8301846105c4565b92915050565b5f5ffd5b5f819050919050565b610602816105f0565b811461060c575f5ffd5b50565b5f8135905061061d816105f9565b92915050565b5f60208284031215610638576106376105ec565b5b5f6106458482850161060f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106778261064e565b9050919050565b6106878161066d565b82525050565b5f6020820190506106a05f83018461067e565b92915050565b6106af816105f0565b82525050565b5f6020820190506106c85f8301846106a6565b92915050565b6106d78161066d565b81146106e1575f5ffd5b50565b5f813590506106f2816106ce565b92915050565b5f6020828403121561070d5761070c6105ec565b5b5f61071a848285016106e4565b91505092915050565b5f82825260208201905092915050565b7f4e65772076616c7565206d757374206265203e203000000000000000000000005f82015250565b5f610767601583610723565b915061077282610733565b602082019050919050565b5f6020820190508181035f8301526107948161075b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107d2826105f0565b91506107dd836105f0565b92508282039050818111156107f5576107f461079b565b5b92915050565b5f610805826105f0565b9150610810836105f0565b925082820261081e816105f0565b915082820484148315176108355761083461079b565b5b5092915050565b5f610846826105f0565b9150610851836105f0565b92508282019050808211156108695761086861079b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6108a6826105f0565b91506108b1836105f0565b9250826108c1576108c061086f565b5b828204905092915050565b5f6040820190506108df5f8301856106a6565b6108ec60208301846106a6565b9392505050565b7f506572696f64206d757374206265203e203000000000000000000000000000005f82015250565b5f610927601283610723565b9150610932826108f3565b602082019050919050565b5f6020820190508181035f8301526109548161091b565b905091905056fea2646970667358221220b54890ab83e79f0fb722e302879dda5d76702ecd38484cfc2daabb14bb148fe164736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7247EC8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD7247EC8 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xDB1D0FD5 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xE270D1DF EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x196 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x158EF93E EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x36127D7E EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xC05D873C EQ PUSH2 0x102 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x46A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x247 JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x29C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x79DC5B08A47915F93013626E984F7A2C63C5D5E9F0D2A6529DEB3D6DDF8CE193 PUSH1 0x1 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP3 SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x2EB PUSH0 PUSH2 0x4F1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x46A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x5B873FC01D45058FE77F3883A91020F46D5A7385BAAC6CEAB19748D1D0AE464A DUP2 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP3 SWAP2 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x46A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x467 DUP2 PUSH2 0x4F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x472 PUSH2 0x5B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x490 PUSH2 0x2ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EF JUMPI PUSH2 0x4B3 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CD DUP2 PUSH2 0x5B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x602 DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x60C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61D DUP2 PUSH2 0x5F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x638 JUMPI PUSH2 0x637 PUSH2 0x5EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x645 DUP5 DUP3 DUP6 ADD PUSH2 0x60F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x677 DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x67E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6AF DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D7 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP2 EQ PUSH2 0x6E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F2 DUP2 PUSH2 0x6CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH2 0x70C PUSH2 0x5EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x71A DUP5 DUP3 DUP6 ADD PUSH2 0x6E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E65772076616C7565206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x767 PUSH1 0x15 DUP4 PUSH2 0x723 JUMP JUMPDEST SWAP2 POP PUSH2 0x772 DUP3 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x794 DUP2 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7D2 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x7F5 JUMPI PUSH2 0x7F4 PUSH2 0x79B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x805 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x810 DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x81E DUP2 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x79B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x846 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x851 DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x869 JUMPI PUSH2 0x868 PUSH2 0x79B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8A6 DUP3 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B1 DUP4 PUSH2 0x5F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x86F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8DF PUSH0 DUP4 ADD DUP6 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x8EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x506572696F64206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x927 PUSH1 0x12 DUP4 PUSH2 0x723 JUMP JUMPDEST SWAP2 POP PUSH2 0x932 DUP3 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x954 DUP2 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 BASEFEE SWAP1 0xAB DUP4 SWAPN 0x9F 0xF 0xB7 0x22 CALLF 0x287 SWAP14 0xDA TSTORE PUSH23 0x702ECD38484CFC2DAABB14BB148FE164736F6C63430008 SAR STOP CALLER ",
							"sourceMap": "493:2554:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2096:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2561:77:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;599:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;767:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2807:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;680:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;865:23:2;;;;;;;;;;;;;:::o;2096:342::-;1531:13:0;:11;:13::i;:::-;2181:1:2::1;2170:8;:12;2162:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2223:11;;;;;;;;;;;2218:174;;2256:8;2250:3;:14;;;;2292:4;2278:11;;:18;;;;;;;;;;;;;;;;;;2218:174;;;2377:4;2370:3;;2361:5;;2354:4;:12;;;;:::i;:::-;2353:20;;;;:::i;:::-;2342:8;2334:5;;:16;;;;:::i;:::-;:39;;;;:::i;:::-;2333:48;;;;:::i;:::-;2327:3;:54;;;;2218:174;2406:25;2417:3;;2422:8;2406:25;;;;;;;:::i;:::-;;;;;;;;2096:342:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2561:77:2:-;2602:7;2628:3;;2621:10;;2561:77;:::o;599:18::-;;;;:::o;767:20::-;;;;:::o;2807:238::-;1531:13:0;:11;:13::i;:::-;2897:1:2::1;2885:9;:13;2877:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2940:9;2931:6;:18;;;;2990:1;2981:6;;:10;;;;:::i;:::-;2968:8;2967:25;;;;:::i;:::-;2959:5;:33;;;;3007:31;3021:9;3032:5;;3007:31;;;;;;;:::i;:::-;;;;;;;;2807:238:::0;:::o;680:21::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:90:3:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:77;798:7;827:5;816:16;;761:77;;;:::o;844:122::-;917:24;935:5;917:24;:::i;:::-;910:5;907:35;897:63;;956:1;953;946:12;897:63;844:122;:::o;972:139::-;1018:5;1056:6;1043:20;1034:29;;1072:33;1099:5;1072:33;:::i;:::-;972:139;;;;:::o;1117:329::-;1176:6;1225:2;1213:9;1204:7;1200:23;1196:32;1193:119;;;1231:79;;:::i;:::-;1193:119;1351:1;1376:53;1421:7;1412:6;1401:9;1397:22;1376:53;:::i;:::-;1366:63;;1322:117;1117:329;;;;:::o;1452:126::-;1489:7;1529:42;1522:5;1518:54;1507:65;;1452:126;;;:::o;1584:96::-;1621:7;1650:24;1668:5;1650:24;:::i;:::-;1639:35;;1584:96;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:222::-;1903:4;1941:2;1930:9;1926:18;1918:26;;1954:71;2022:1;2011:9;2007:17;1998:6;1954:71;:::i;:::-;1810:222;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:169::-;3082:11;3116:6;3111:3;3104:19;3156:4;3151:3;3147:14;3132:29;;2998:169;;;;:::o;3173:171::-;3313:23;3309:1;3301:6;3297:14;3290:47;3173:171;:::o;3350:366::-;3492:3;3513:67;3577:2;3572:3;3513:67;:::i;:::-;3506:74;;3589:93;3678:3;3589:93;:::i;:::-;3707:2;3702:3;3698:12;3691:19;;3350:366;;;:::o;3722:419::-;3888:4;3926:2;3915:9;3911:18;3903:26;;3975:9;3969:4;3965:20;3961:1;3950:9;3946:17;3939:47;4003:131;4129:4;4003:131;:::i;:::-;3995:139;;3722:419;;;:::o;4147:180::-;4195:77;4192:1;4185:88;4292:4;4289:1;4282:15;4316:4;4313:1;4306:15;4333:194;4373:4;4393:20;4411:1;4393:20;:::i;:::-;4388:25;;4427:20;4445:1;4427:20;:::i;:::-;4422:25;;4471:1;4468;4464:9;4456:17;;4495:1;4489:4;4486:11;4483:37;;;4500:18;;:::i;:::-;4483:37;4333:194;;;;:::o;4533:410::-;4573:7;4596:20;4614:1;4596:20;:::i;:::-;4591:25;;4630:20;4648:1;4630:20;:::i;:::-;4625:25;;4685:1;4682;4678:9;4707:30;4725:11;4707:30;:::i;:::-;4696:41;;4886:1;4877:7;4873:15;4870:1;4867:22;4847:1;4840:9;4820:83;4797:139;;4916:18;;:::i;:::-;4797:139;4581:362;4533:410;;;;:::o;4949:191::-;4989:3;5008:20;5026:1;5008:20;:::i;:::-;5003:25;;5042:20;5060:1;5042:20;:::i;:::-;5037:25;;5085:1;5082;5078:9;5071:16;;5106:3;5103:1;5100:10;5097:36;;;5113:18;;:::i;:::-;5097:36;4949:191;;;;:::o;5146:180::-;5194:77;5191:1;5184:88;5291:4;5288:1;5281:15;5315:4;5312:1;5305:15;5332:185;5372:1;5389:20;5407:1;5389:20;:::i;:::-;5384:25;;5423:20;5441:1;5423:20;:::i;:::-;5418:25;;5462:1;5452:35;;5467:18;;:::i;:::-;5452:35;5509:1;5506;5502:9;5497:14;;5332:185;;;;:::o;5523:332::-;5644:4;5682:2;5671:9;5667:18;5659:26;;5695:71;5763:1;5752:9;5748:17;5739:6;5695:71;:::i;:::-;5776:72;5844:2;5833:9;5829:18;5820:6;5776:72;:::i;:::-;5523:332;;;;;:::o;5861:168::-;6001:20;5997:1;5989:6;5985:14;5978:44;5861:168;:::o;6035:366::-;6177:3;6198:67;6262:2;6257:3;6198:67;:::i;:::-;6191:74;;6274:93;6363:3;6274:93;:::i;:::-;6392:2;6387:3;6383:12;6376:19;;6035:366;;;:::o;6407:419::-;6573:4;6611:2;6600:9;6596:18;6588:26;;6660:9;6654:4;6650:20;6646:1;6635:9;6631:17;6624:47;6688:131;6814:4;6688:131;:::i;:::-;6680:139;;6407:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "489800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"alpha()": "2447",
								"ema()": "2425",
								"getEMA()": "2521",
								"initialized()": "2467",
								"owner()": "2581",
								"period()": "2491",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateEMA(uint256)": "infinite",
								"updatePeriod(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1520,
									"end": 1745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1567,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1597,
									"end": 1598,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1594,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1587,
									"end": 1598,
									"modifierDepth": 1,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1579,
									"end": 1621,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1579,
									"end": 1621,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1640,
									"end": 1647,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1637,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1631,
									"end": 1647,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1647,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1647,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1647,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1736,
									"end": 1737,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1727,
									"end": 1733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1727,
									"end": 1733,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1727,
									"end": 1737,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1727,
									"end": 1737,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1727,
									"end": 1737,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1727,
									"end": 1737,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1727,
									"end": 1737,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1727,
									"end": 1737,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1727,
									"end": 1737,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1714,
									"end": 1722,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 1713,
									"end": 1738,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1713,
									"end": 1738,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1713,
									"end": 1738,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1713,
									"end": 1738,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1713,
									"end": 1738,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1713,
									"end": 1738,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1713,
									"end": 1738,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1705,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1705,
									"end": 1738,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1705,
									"end": 1738,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1705,
									"end": 1738,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1705,
									"end": 1738,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1520,
									"end": 1745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1088,
									"end": 1095,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1117,
									"end": 1171,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1220,
									"end": 1227,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1267,
									"end": 1272,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1249,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1390,
									"end": 1395,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1372,
									"end": 1396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 1370,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1360,
									"end": 1397,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1285,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1619,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1606,
									"end": 1623,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1409,
									"end": 1631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1721,
									"end": 1732,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1743,
									"end": 1762,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1793,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1800,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1800,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1812,
									"end": 1980,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1812,
									"end": 1980,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1952,
									"end": 1972,
									"name": "PUSH",
									"source": 3,
									"value": "506572696F64206D757374206265203E20300000000000000000000000000000"
								},
								{
									"begin": 1948,
									"end": 1949,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1936,
									"end": 1950,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1929,
									"end": 1973,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1812,
									"end": 1980,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1812,
									"end": 1980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2352,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1986,
									"end": 2352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2128,
									"end": 2131,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2213,
									"end": 2215,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2208,
									"end": 2211,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2149,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 2149,
									"end": 2216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2149,
									"end": 2216,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2149,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2142,
									"end": 2216,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2142,
									"end": 2216,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2225,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2314,
									"end": 2317,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2225,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 2225,
									"end": 2318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2225,
									"end": 2318,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2225,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2343,
									"end": 2345,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2338,
									"end": 2341,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2334,
									"end": 2346,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2327,
									"end": 2346,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2327,
									"end": 2346,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2352,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1986,
									"end": 2352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2358,
									"end": 2777,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2358,
									"end": 2777,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2524,
									"end": 2528,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2562,
									"end": 2564,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2551,
									"end": 2560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2547,
									"end": 2565,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2539,
									"end": 2565,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2539,
									"end": 2565,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2620,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2605,
									"end": 2609,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2601,
									"end": 2621,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2597,
									"end": 2598,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2586,
									"end": 2595,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2582,
									"end": 2599,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2575,
									"end": 2622,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2639,
									"end": 2770,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2765,
									"end": 2769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2639,
									"end": 2770,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 2639,
									"end": 2770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2639,
									"end": 2770,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2639,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2631,
									"end": 2770,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2631,
									"end": 2770,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2358,
									"end": 2777,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2358,
									"end": 2777,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2358,
									"end": 2777,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2358,
									"end": 2777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2783,
									"end": 2963,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 2783,
									"end": 2963,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2831,
									"end": 2908,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2828,
									"end": 2829,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2821,
									"end": 2909,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2928,
									"end": 2932,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2925,
									"end": 2926,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2918,
									"end": 2933,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2952,
									"end": 2956,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2949,
									"end": 2950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2957,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2969,
									"end": 3160,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2969,
									"end": 3160,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3009,
									"end": 3012,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3028,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 3046,
									"end": 3047,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3028,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3048,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 3028,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3023,
									"end": 3048,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3023,
									"end": 3048,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3062,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 3080,
									"end": 3081,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3062,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3062,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3062,
									"end": 3082,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 3062,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3057,
									"end": 3082,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3057,
									"end": 3082,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3105,
									"end": 3106,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3102,
									"end": 3103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3098,
									"end": 3107,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3126,
									"end": 3129,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3120,
									"end": 3130,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3117,
									"end": 3153,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3117,
									"end": 3153,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3117,
									"end": 3153,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3151,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3151,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 3133,
									"end": 3151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3151,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3151,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3117,
									"end": 3153,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3117,
									"end": 3153,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2969,
									"end": 3160,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2969,
									"end": 3160,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2969,
									"end": 3160,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2969,
									"end": 3160,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2969,
									"end": 3160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3166,
									"end": 3346,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 3166,
									"end": 3346,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3214,
									"end": 3291,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3204,
									"end": 3292,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3311,
									"end": 3315,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3308,
									"end": 3309,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3301,
									"end": 3316,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3335,
									"end": 3339,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3332,
									"end": 3333,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3325,
									"end": 3340,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3352,
									"end": 3537,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 3352,
									"end": 3537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3392,
									"end": 3393,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3409,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 3427,
									"end": 3428,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3409,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3409,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3409,
									"end": 3429,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 3409,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3404,
									"end": 3429,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3404,
									"end": 3429,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3443,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3461,
									"end": 3462,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3443,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3443,
									"end": 3463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3443,
									"end": 3463,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3443,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3438,
									"end": 3463,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3438,
									"end": 3463,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3472,
									"end": 3507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 3472,
									"end": 3507,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3487,
									"end": 3505,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 3487,
									"end": 3505,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 3487,
									"end": 3505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3487,
									"end": 3505,
									"name": "tag",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 3487,
									"end": 3505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3472,
									"end": 3507,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 3472,
									"end": 3507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3530,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3526,
									"end": 3527,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3522,
									"end": 3531,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3517,
									"end": 3531,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3517,
									"end": 3531,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3352,
									"end": 3537,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3352,
									"end": 3537,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3352,
									"end": 3537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3352,
									"end": 3537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3352,
									"end": 3537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 493,
									"end": 3047,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b54890ab83e79f0fb722e302879dda5d76702ecd38484cfc2daabb14bb148fe164736f6c634300081d0033",
									".code": [
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "D7247EC8"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "D7247EC8"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "DB1D0FD5"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "E270D1DF"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "EF78D4FD"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "158EF93E"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "36127D7E"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "C05D873C"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 3047,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 865,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 865,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2096,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2096,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 599,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 599,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 767,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 767,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 680,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 680,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 865,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 865,
											"end": 888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2182,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2162,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2162,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2223,
											"end": 2234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2250,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2250,
											"end": 2264,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2278,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2278,
											"end": 2289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2370,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2361,
											"end": 2366,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2354,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2354,
											"end": 2366,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2354,
											"end": 2366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2354,
											"end": 2366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2353,
											"end": 2373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2353,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2334,
											"end": 2339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2334,
											"end": 2350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2334,
											"end": 2373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2334,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2333,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2333,
											"end": 2381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2333,
											"end": 2381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2381,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2218,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "79DC5B08A47915F93013626E984F7A2C63C5D5E9F0D2A6529DEB3D6DDF8CE193"
										},
										{
											"begin": 2417,
											"end": 2420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2417,
											"end": 2420,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2430,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2406,
											"end": 2431,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2431,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 599,
											"end": 617,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 599,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 767,
											"end": 787,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2898,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2877,
											"end": 2921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2877,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2931,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2981,
											"end": 2987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2981,
											"end": 2987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2981,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2981,
											"end": 2991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2981,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 2967,
											"end": 2992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2967,
											"end": 2992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2967,
											"end": 2992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2967,
											"end": 2992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2959,
											"end": 2992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2992,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5B873FC01D45058FE77F3883A91020F46D5A7385BAAC6CEAB19748D1D0AE464A"
										},
										{
											"begin": 3021,
											"end": 3030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3032,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3007,
											"end": 3038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3038,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 632,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 515,
											"end": 632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 626,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 761,
											"end": 838,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 761,
											"end": 838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 798,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 816,
											"end": 832,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 761,
											"end": 838,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 761,
											"end": 838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 761,
											"end": 838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 761,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 844,
											"end": 966,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 844,
											"end": 966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 917,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 917,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 910,
											"end": 915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 907,
											"end": 942,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 897,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 897,
											"end": 960,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 958,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 897,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 897,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 844,
											"end": 966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 844,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1072,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1228,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1231,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1376,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1668,
											"end": 1673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1650,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1773,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1954,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3344,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3173,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3336,
											"name": "PUSH",
											"source": 3,
											"value": "4E65772076616C7565206D757374206265203E20300000000000000000000000"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3513,
											"end": 3580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3580,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3589,
											"end": 3682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 3973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3959,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 3986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4003,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 4141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4327,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4147,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4296,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4316,
											"end": 4320,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4313,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4321,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4527,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4333,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4373,
											"end": 4377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4393,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4413,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4393,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4413,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4445,
											"end": 4446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4427,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4427,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4422,
											"end": 4447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4422,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4456,
											"end": 4473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4456,
											"end": 4473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4486,
											"end": 4497,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4483,
											"end": 4520,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4483,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4483,
											"end": 4520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4500,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4483,
											"end": 4520,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4483,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4527,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4527,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4943,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4533,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4596,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4630,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4630,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4650,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4687,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4725,
											"end": 4736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4707,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4737,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4707,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 4737,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 4737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 4884,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4889,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4903,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4797,
											"end": 4936,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4916,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4936,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4797,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4943,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4943,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5140,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4949,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 4992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5008,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5028,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5008,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5042,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5042,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5062,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5106,
											"end": 5109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5100,
											"end": 5110,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5133,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5097,
											"end": 5133,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5113,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5133,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5097,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5140,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5146,
											"end": 5326,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5146,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5194,
											"end": 5271,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5315,
											"end": 5319,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5320,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5332,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5389,
											"end": 5409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5441,
											"end": 5442,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5423,
											"end": 5443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5462,
											"end": 5463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5452,
											"end": 5487,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5467,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5487,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5452,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5511,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5667,
											"end": 5685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5695,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5695,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5695,
											"end": 5766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5695,
											"end": 5766,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5695,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5776,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5844,
											"end": 5846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5776,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5776,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5776,
											"end": 5848,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5776,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 6029,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5861,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "506572696F64206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 5997,
											"end": 5998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5985,
											"end": 5999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6022,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 6029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 6029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6401,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6035,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6262,
											"end": 6264,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6257,
											"end": 6260,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6198,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6265,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6198,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6363,
											"end": 6366,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6274,
											"end": 6367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6367,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6274,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6395,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6395,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6826,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6407,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6573,
											"end": 6577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6600,
											"end": 6609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6588,
											"end": 6614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6588,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6660,
											"end": 6669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6654,
											"end": 6658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6670,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6646,
											"end": 6647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6644,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6631,
											"end": 6648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6688,
											"end": 6819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6819,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6688,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"E/email spoofing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"alpha()": "db1d0fd5",
							"ema()": "d7247ec8",
							"getEMA()": "c05d873c",
							"initialized()": "158ef93e",
							"owner()": "8da5cb5b",
							"period()": "ef78d4fd",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateEMA(uint256)": "36127d7e",
							"updatePeriod(uint256)": "e270d1df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEMA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"EMAUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAlpha\",\"type\":\"uint256\"}],\"name\":\"PeriodUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"alpha\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ema\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEMA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateEMA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"updatePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"EMAUpdated(uint256,uint256)\":{\"params\":{\"newEMA\":\"The new EMA value (scaled by 1e18).\",\"newValue\":\"The new data point provided (scaled by 1e18).\"}},\"PeriodUpdated(uint256,uint256)\":{\"params\":{\"newAlpha\":\"The new alpha value (scaled by 1e18).\",\"newPeriod\":\"The new period value.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_period\":\"The initial period for the EMA calculation.\"}},\"getEMA()\":{\"returns\":{\"_0\":\"The current EMA value (scaled by 1e18).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateEMA(uint256)\":{\"params\":{\"newValue\":\"The new data point to incorporate (scaled by 1e18).\"}},\"updatePeriod(uint256)\":{\"params\":{\"newPeriod\":\"The new period value (must be > 0).\"}}},\"title\":\"ExponentialMovingAverage\",\"version\":1},\"userdoc\":{\"events\":{\"EMAUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the EMA is updated.\"},\"PeriodUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the period is updated.\"}},\"kind\":\"user\",\"methods\":{\"alpha()\":{\"notice\":\"The smoothing factor alpha, scaled by 1e18.\"},\"constructor\":{\"notice\":\"Constructor sets the initial period and calculates the initial alpha.\"},\"ema()\":{\"notice\":\"The current EMA value, scaled by 1e18.\"},\"getEMA()\":{\"notice\":\"Returns the current EMA value.\"},\"initialized()\":{\"notice\":\"A flag indicating whether the EMA has been initialized.\"},\"period()\":{\"notice\":\"The period used for the EMA calculation.\"},\"updateEMA(uint256)\":{\"notice\":\"Updates the EMA with a new data point. If the EMA has not been initialized, it is set to the new value. Otherwise, it updates according to the formula:   EMA = (alpha * newValue + (1e18 - alpha) * previousEMA) / 1e18.\"},\"updatePeriod(uint256)\":{\"notice\":\"Updates the period used for the EMA calculation and recalculates alpha.\"}},\"notice\":\"This contract calculates an exponential moving average (EMA) using fixed\\u2011point arithmetic. The EMA is updated using the formula:   EMA = (alpha * newValue) + ((1e18 - alpha) * previousEMA) / 1e18, where alpha = 2e18 / (period + 1). The owner can update the EMA with new data and adjust the period (and thus alpha).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/email spoofing.sol\":\"ExponentialMovingAverage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"E/email spoofing.sol\":{\"keccak256\":\"0x15cc4cdeb917207743878cb2416013830a2953e33bf6f20df5c31c6939634757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd5e6b1737d24cefdedca0b507bafd8477c42496ec380c4a19a9a07c2f552b4a\",\"dweb:/ipfs/Qmaqn4gkrJYdUfBkbJ4GKtEVFrVHN9TxcArR7bs2JRmG3Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "E/email spoofing.sol:ExponentialMovingAverage",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "E/email spoofing.sol:ExponentialMovingAverage",
								"label": "ema",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 189,
								"contract": "E/email spoofing.sol:ExponentialMovingAverage",
								"label": "period",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "E/email spoofing.sol:ExponentialMovingAverage",
								"label": "alpha",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 195,
								"contract": "E/email spoofing.sol:ExponentialMovingAverage",
								"label": "initialized",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EMAUpdated(uint256,uint256)": {
								"notice": "Emitted when the EMA is updated."
							},
							"PeriodUpdated(uint256,uint256)": {
								"notice": "Emitted when the period is updated."
							}
						},
						"kind": "user",
						"methods": {
							"alpha()": {
								"notice": "The smoothing factor alpha, scaled by 1e18."
							},
							"constructor": {
								"notice": "Constructor sets the initial period and calculates the initial alpha."
							},
							"ema()": {
								"notice": "The current EMA value, scaled by 1e18."
							},
							"getEMA()": {
								"notice": "Returns the current EMA value."
							},
							"initialized()": {
								"notice": "A flag indicating whether the EMA has been initialized."
							},
							"period()": {
								"notice": "The period used for the EMA calculation."
							},
							"updateEMA(uint256)": {
								"notice": "Updates the EMA with a new data point. If the EMA has not been initialized, it is set to the new value. Otherwise, it updates according to the formula:   EMA = (alpha * newValue + (1e18 - alpha) * previousEMA) / 1e18."
							},
							"updatePeriod(uint256)": {
								"notice": "Updates the period used for the EMA calculation and recalculates alpha."
							}
						},
						"notice": "This contract calculates an exponential moving average (EMA) using fixedâ€‘point arithmetic. The EMA is updated using the formula:   EMA = (alpha * newValue) + ((1e18 - alpha) * previousEMA) / 1e18, where alpha = 2e18 / (period + 1). The owner can update the EMA with new data and adjust the period (and thus alpha).",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"E/email spoofing.sol": {
				"ast": {
					"absolutePath": "E/email spoofing.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"ExponentialMovingAverage": [
							340
						],
						"Ownable": [
							147
						]
					},
					"id": 341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 341,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "Ownable",
										"nameLocations": [
											"530:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "530:7:2"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "530:7:2"
								}
							],
							"canonicalName": "ExponentialMovingAverage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "112:381:2",
								"text": "@title ExponentialMovingAverage\n @notice This contract calculates an exponential moving average (EMA) using fixedâ€‘point arithmetic.\n The EMA is updated using the formula:\n   EMA = (alpha * newValue) + ((1e18 - alpha) * previousEMA) / 1e18,\n where alpha = 2e18 / (period + 1).\n The owner can update the EMA with new data and adjust the period (and thus alpha)."
							},
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340,
								147,
								177
							],
							"name": "ExponentialMovingAverage",
							"nameLocation": "502:24:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "544:50:2",
										"text": "@notice The current EMA value, scaled by 1e18."
									},
									"functionSelector": "d7247ec8",
									"id": 186,
									"mutability": "mutable",
									"name": "ema",
									"nameLocation": "614:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "599:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "623:52:2",
										"text": "@notice The period used for the EMA calculation."
									},
									"functionSelector": "ef78d4fd",
									"id": 189,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "695:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "680:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "707:55:2",
										"text": "@notice The smoothing factor alpha, scaled by 1e18."
									},
									"functionSelector": "db1d0fd5",
									"id": 192,
									"mutability": "mutable",
									"name": "alpha",
									"nameLocation": "782:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "767:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "793:67:2",
										"text": "@notice A flag indicating whether the EMA has been initialized."
									},
									"functionSelector": "158ef93e",
									"id": 195,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "877:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "865:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 194,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "865:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "895:172:2",
										"text": "@notice Emitted when the EMA is updated.\n @param newEMA The new EMA value (scaled by 1e18).\n @param newValue The new data point provided (scaled by 1e18)."
									},
									"eventSelector": "79dc5b08a47915f93013626e984f7a2c63c5d5e9f0d2a6529deb3d6ddf8ce193",
									"id": 202,
									"name": "EMAUpdated",
									"nameLocation": "1078:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "newEMA",
												"nameLocation": "1097:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1089:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "1113:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1105:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:34:2"
									},
									"src": "1072:51:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1129:156:2",
										"text": "@notice Emitted when the period is updated.\n @param newPeriod The new period value.\n @param newAlpha The new alpha value (scaled by 1e18)."
									},
									"eventSelector": "5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a",
									"id": 209,
									"name": "PeriodUpdated",
									"nameLocation": "1296:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPeriod",
												"nameLocation": "1318:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1310:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAlpha",
												"nameLocation": "1337:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1329:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:37:2"
									},
									"src": "1290:57:2"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1569:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 220,
																"name": "_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "1587:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1597:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1587:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506572696f64206d757374206265203e2030",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1600:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
																"typeString": "literal_string \"Period must be > 0\""
															},
															"value": "Period must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
																"typeString": "literal_string \"Period must be > 0\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1579:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1579:42:2"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "1631:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1640:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1631:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1631:16:2"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 230,
														"name": "alpha",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1705:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_2000000000000000000_by_1",
																		"typeString": "int_const 2000000000000000000"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1714:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "1714:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000000000000000000_by_1",
																		"typeString": "int_const 2000000000000000000"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1713:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 235,
																		"name": "period",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "1727:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1727:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 238,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1726:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1713:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1705:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1705:33:2"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1353:162:2",
										"text": " @notice Constructor sets the initial period and calculates the initial alpha.\n @param _period The initial period for the EMA calculation."
									},
									"id": 243,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 215,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1557:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1561:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1557:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 217,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 214,
												"name": "Ownable",
												"nameLocations": [
													"1549:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1549:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1549:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "1540:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1532:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:17:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1569:0:2"
									},
									"scope": 340,
									"src": "1520:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2152:286:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "newValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2170:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2181:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772076616c7565206d757374206265203e2030",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2184:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984",
																"typeString": "literal_string \"New value must be > 0\""
															},
															"value": "New value must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be2665259b5b1afa3c8643b3e5362b7c568b91cb6c645d46fb2fe5d922a62984",
																"typeString": "literal_string \"New value must be > 0\""
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2162:46:2"
											},
											{
												"condition": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2222:12:2",
													"subExpression": {
														"id": 258,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2223:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "2313:79:2",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 269,
																	"name": "ema",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "2327:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 272,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 270,
																						"name": "alpha",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 192,
																						"src": "2334:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 271,
																						"name": "newValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 246,
																						"src": "2342:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2334:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 278,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 275,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31653138",
																									"id": 273,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2354:4:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000000000000000000_by_1",
																										"typeString": "int_const 1000000000000000000"
																									},
																									"value": "1e18"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 274,
																									"name": "alpha",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 192,
																									"src": "2361:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2354:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 276,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2353:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 277,
																						"name": "ema",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "2370:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2353:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2334:39:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 280,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2333:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2333:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2327:54:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "2327:54:2"
														}
													]
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "2218:174:2",
												"trueBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "2236:71:2",
													"statements": [
														{
															"expression": {
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 260,
																	"name": "ema",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "2250:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 261,
																	"name": "newValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "2256:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2250:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 263,
															"nodeType": "ExpressionStatement",
															"src": "2250:14:2"
														},
														{
															"expression": {
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 264,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2278:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2292:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2278:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 267,
															"nodeType": "ExpressionStatement",
															"src": "2278:18:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 288,
															"name": "ema",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2417:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 289,
															"name": "newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "2422:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 287,
														"name": "EMAUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2406:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2406:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "EmitStatement",
												"src": "2401:30:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1751:340:2",
										"text": " @notice Updates the EMA with a new data point.\n If the EMA has not been initialized, it is set to the new value.\n Otherwise, it updates according to the formula:\n   EMA = (alpha * newValue + (1e18 - alpha) * previousEMA) / 1e18.\n @param newValue The new data point to incorporate (scaled by 1e18)."
									},
									"functionSelector": "36127d7e",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 248,
												"name": "onlyOwner",
												"nameLocations": [
													"2142:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2142:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2142:9:2"
										}
									],
									"name": "updateEMA",
									"nameLocation": "2105:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "2123:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2115:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:18:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2152:0:2"
									},
									"scope": 340,
									"src": "2096:342:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2611:27:2",
										"statements": [
											{
												"expression": {
													"id": 299,
													"name": "ema",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2628:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 298,
												"id": 300,
												"nodeType": "Return",
												"src": "2621:10:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2444:112:2",
										"text": " @notice Returns the current EMA value.\n @return The current EMA value (scaled by 1e18)."
									},
									"functionSelector": "c05d873c",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEMA",
									"nameLocation": "2570:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:2:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2602:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:9:2"
									},
									"scope": 340,
									"src": "2561:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "2867:178:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 311,
																"name": "newPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "2885:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2897:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2885:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506572696f64206d757374206265203e2030",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2900:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
																"typeString": "literal_string \"Period must be > 0\""
															},
															"value": "Period must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e199995da8ef200815e3d08793f8708ea2cd9e9cee74be570b4ad4ffd1f5582",
																"typeString": "literal_string \"Period must be > 0\""
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2877:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2877:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "2877:44:2"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 317,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2931:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 318,
														"name": "newPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "2940:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2931:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "2931:18:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 321,
														"name": "alpha",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2959:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_2000000000000000000_by_1",
																		"typeString": "int_const 2000000000000000000"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2968:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2972:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2968:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000000000000000000_by_1",
																		"typeString": "int_const 2000000000000000000"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2967:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "period",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "2981:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2990:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2981:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 329,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2980:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2967:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2959:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2959:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "newPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3021:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 335,
															"name": "alpha",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3032:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "PeriodUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3007:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "EmitStatement",
												"src": "3002:36:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2644:158:2",
										"text": " @notice Updates the period used for the EMA calculation and recalculates alpha.\n @param newPeriod The new period value (must be > 0)."
									},
									"functionSelector": "e270d1df",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 307,
												"name": "onlyOwner",
												"nameLocations": [
													"2857:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2857:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2857:9:2"
										}
									],
									"name": "updatePeriod",
									"nameLocation": "2816:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "newPeriod",
												"nameLocation": "2837:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2829:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:19:2"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:0:2"
									},
									"scope": 340,
									"src": "2807:238:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 341,
							"src": "493:2554:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								202,
								209
							]
						}
					],
					"src": "32:3016:2"
				},
				"id": 2
			}
		}
	}
}