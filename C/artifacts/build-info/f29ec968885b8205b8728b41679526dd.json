{
	"id": "f29ec968885b8205b8728b41679526dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/Consumer Price Index.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title ConsumerPriceIndex\n/// @notice This contract maintains a historical record of the Consumer Price Index (CPI).\n/// The owner can update the CPI value, and each update is recorded along with a timestamp.\n/// This design is dynamic (supports multiple updates), optimized (stores only necessary records),\n/// and secure (using Ownable and ReentrancyGuard).\ncontract ConsumerPriceIndex is Ownable, ReentrancyGuard {\n    // CPI values are stored with fixed decimals (e.g. scaled by 1e18)\n    uint256 public constant DECIMALS = 1e18;\n\n    struct CPIRecord {\n        uint256 timestamp; // time of update\n        uint256 cpi;       // CPI value (scaled by DECIMALS)\n    }\n\n    CPIRecord[] private records;\n\n    event CPIUpdated(uint256 timestamp, uint256 cpi);\n\n    /// @notice Constructor sets the initial CPI value.\n    /// @param initialCPI The initial CPI value (scaled by DECIMALS).\n    constructor(uint256 initialCPI) Ownable(msg.sender) {\n        require(initialCPI > 0, \"Initial CPI must be positive\");\n        records.push(CPIRecord({\n            timestamp: block.timestamp,\n            cpi: initialCPI\n        }));\n        emit CPIUpdated(block.timestamp, initialCPI);\n    }\n\n    /// @notice Allows the owner to update the CPI value.\n    /// @param newCPI The new CPI value (scaled by DECIMALS).\n    function updateCPI(uint256 newCPI) external onlyOwner nonReentrant {\n        require(newCPI > 0, \"CPI must be positive\");\n        CPIRecord storage lastRecord = records[records.length - 1];\n        require(newCPI != lastRecord.cpi, \"New CPI is identical to current CPI\");\n        records.push(CPIRecord({\n            timestamp: block.timestamp,\n            cpi: newCPI\n        }));\n        emit CPIUpdated(block.timestamp, newCPI);\n    }\n\n    /// @notice Returns the current CPI value.\n    /// @return The most recent CPI value (scaled by DECIMALS).\n    function getCurrentCPI() external view returns (uint256) {\n        return records[records.length - 1].cpi;\n    }\n\n    /// @notice Returns the CPI record at a given index.\n    /// @param index The index of the record (0-based).\n    /// @return timestamp The timestamp of the record.\n    /// @return cpi The CPI value at that time (scaled by DECIMALS).\n    function getCPIRecord(uint256 index) external view returns (uint256 timestamp, uint256 cpi) {\n        require(index < records.length, \"Index out of bounds\");\n        CPIRecord storage record = records[index];\n        return (record.timestamp, record.cpi);\n    }\n\n    /// @notice Returns the total number of CPI records stored.\n    /// @return The count of CPI updates.\n    function getRecordCount() external view returns (uint256) {\n        return records.length;\n    }\n\n    /// @notice Computes the inflation rate between two CPI records.\n    /// @param index1 The index of the earlier record.\n    /// @param index2 The index of the later record (must be greater than index1).\n    /// @return inflationRate The inflation rate as a percentage (scaled by DECIMALS).\n    /// For example, a result of 0.05 * DECIMALS represents 5% inflation.\n    function computeInflation(uint256 index1, uint256 index2) external view returns (uint256 inflationRate) {\n        require(index1 < records.length && index2 < records.length, \"Index out of bounds\");\n        require(index2 > index1, \"Second index must be later than first\");\n        CPIRecord storage record1 = records[index1];\n        CPIRecord storage record2 = records[index2];\n        // Calculate the rate: ((new / old) - 1) * DECIMALS\n        // Here, we compute: (record2.cpi * DECIMALS / record1.cpi) - DECIMALS\n        inflationRate = (record2.cpi * DECIMALS / record1.cpi) - DECIMALS;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/Consumer Price Index.sol": {
				"ConsumerPriceIndex": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialCPI",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cpi",
									"type": "uint256"
								}
							],
							"name": "CPIUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index2",
									"type": "uint256"
								}
							],
							"name": "computeInflation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "inflationRate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getCPIRecord",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cpi",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentCPI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRecordCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCPI",
									"type": "uint256"
								}
							],
							"name": "updateCPI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"computeInflation(uint256,uint256)": {
								"params": {
									"index1": "The index of the earlier record.",
									"index2": "The index of the later record (must be greater than index1)."
								},
								"returns": {
									"inflationRate": "The inflation rate as a percentage (scaled by DECIMALS). For example, a result of 0.05 * DECIMALS represents 5% inflation."
								}
							},
							"constructor": {
								"params": {
									"initialCPI": "The initial CPI value (scaled by DECIMALS)."
								}
							},
							"getCPIRecord(uint256)": {
								"params": {
									"index": "The index of the record (0-based)."
								},
								"returns": {
									"cpi": "The CPI value at that time (scaled by DECIMALS).",
									"timestamp": "The timestamp of the record."
								}
							},
							"getCurrentCPI()": {
								"returns": {
									"_0": "The most recent CPI value (scaled by DECIMALS)."
								}
							},
							"getRecordCount()": {
								"returns": {
									"_0": "The count of CPI updates."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateCPI(uint256)": {
								"params": {
									"newCPI": "The new CPI value (scaled by DECIMALS)."
								}
							}
						},
						"title": "ConsumerPriceIndex",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/Consumer Price Index.sol\":538:3838  contract ConsumerPriceIndex is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"C/Consumer Price Index.sol\":1068:1360  constructor(uint256 initialCPI) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/Consumer Price Index.sol\":1108:1118  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/Consumer Price Index.sol\":1151:1152  0 */\n  0x00\n    /* \"C/Consumer Price Index.sol\":1138:1148  initialCPI */\n  dup2\n    /* \"C/Consumer Price Index.sol\":1138:1152  initialCPI > 0 */\n  gt\n    /* \"C/Consumer Price Index.sol\":1130:1185  require(initialCPI > 0, \"Initial CPI must be positive\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"C/Consumer Price Index.sol\":1195:1202  records */\n  0x02\n    /* \"C/Consumer Price Index.sol\":1208:1298  CPIRecord({... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"C/Consumer Price Index.sol\":1243:1258  block.timestamp */\n  timestamp\n    /* \"C/Consumer Price Index.sol\":1208:1298  CPIRecord({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"C/Consumer Price Index.sol\":1277:1287  initialCPI */\n  dup4\n    /* \"C/Consumer Price Index.sol\":1208:1298  CPIRecord({... */\n  dup2\n  mstore\n  pop\n    /* \"C/Consumer Price Index.sol\":1195:1299  records.push(CPIRecord({... */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n    /* \"C/Consumer Price Index.sol\":1314:1353  CPIUpdated(block.timestamp, initialCPI) */\n  0xfaae7e9ebff587ddfd1fc7584c25926410fd174a75c5781a0ce1dfe041c0edab\n    /* \"C/Consumer Price Index.sol\":1325:1340  block.timestamp */\n  timestamp\n    /* \"C/Consumer Price Index.sol\":1342:1352  initialCPI */\n  dup3\n    /* \"C/Consumer Price Index.sol\":1314:1353  CPIUpdated(block.timestamp, initialCPI) */\n  mload(0x40)\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"C/Consumer Price Index.sol\":1068:1360  constructor(uint256 initialCPI) Ownable(msg.sender) {... */\n  pop\n    /* \"C/Consumer Price Index.sol\":538:3838  contract ConsumerPriceIndex is Ownable, ReentrancyGuard {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_27:\n    /* \"#utility.yul\":490:514   */\n  tag_42\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_43:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_28:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_45\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_27\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_48\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":781:900   */\ntag_47:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_49\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_28\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1177   */\ntag_29:\n    /* \"#utility.yul\":1088:1095   */\n  0x00\n    /* \"#utility.yul\":1128:1170   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1121:1126   */\n  dup3\n    /* \"#utility.yul\":1117:1171   */\n  and\n    /* \"#utility.yul\":1106:1171   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1183:1279   */\ntag_30:\n    /* \"#utility.yul\":1220:1227   */\n  0x00\n    /* \"#utility.yul\":1249:1273   */\n  tag_52\n    /* \"#utility.yul\":1267:1272   */\n  dup3\n    /* \"#utility.yul\":1249:1273   */\n  tag_29\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1238:1273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1183:1279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1285:1403   */\ntag_31:\n    /* \"#utility.yul\":1372:1396   */\n  tag_54\n    /* \"#utility.yul\":1390:1395   */\n  dup2\n    /* \"#utility.yul\":1372:1396   */\n  tag_30\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1367:1370   */\n  dup3\n    /* \"#utility.yul\":1360:1397   */\n  mstore\n    /* \"#utility.yul\":1285:1403   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1631   */\ntag_10:\n    /* \"#utility.yul\":1502:1506   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x20\n    /* \"#utility.yul\":1529:1538   */\n  dup3\n    /* \"#utility.yul\":1525:1543   */\n  add\n    /* \"#utility.yul\":1517:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1553:1624   */\n  tag_56\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1610:1619   */\n  dup4\n    /* \"#utility.yul\":1606:1623   */\n  add\n    /* \"#utility.yul\":1597:1603   */\n  dup5\n    /* \"#utility.yul\":1553:1624   */\n  tag_31\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1409:1631   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1637:1806   */\ntag_32:\n    /* \"#utility.yul\":1721:1732   */\n  0x00\n    /* \"#utility.yul\":1755:1761   */\n  dup3\n    /* \"#utility.yul\":1750:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1762   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x20\n    /* \"#utility.yul\":1790:1793   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  add\n    /* \"#utility.yul\":1771:1800   */\n  swap1\n  pop\n    /* \"#utility.yul\":1637:1806   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1812:1990   */\ntag_33:\n    /* \"#utility.yul\":1952:1982   */\n  0x496e697469616c20435049206d75737420626520706f73697469766500000000\n    /* \"#utility.yul\":1948:1949   */\n  0x00\n    /* \"#utility.yul\":1940:1946   */\n  dup3\n    /* \"#utility.yul\":1936:1950   */\n  add\n    /* \"#utility.yul\":1929:1983   */\n  mstore\n    /* \"#utility.yul\":1812:1990   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1996:2362   */\ntag_34:\n    /* \"#utility.yul\":2138:2141   */\n  0x00\n    /* \"#utility.yul\":2159:2226   */\n  tag_60\n    /* \"#utility.yul\":2223:2225   */\n  0x1c\n    /* \"#utility.yul\":2218:2221   */\n  dup4\n    /* \"#utility.yul\":2159:2226   */\n  tag_32\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2152:2226   */\n  swap2\n  pop\n    /* \"#utility.yul\":2235:2328   */\n  tag_61\n    /* \"#utility.yul\":2324:2327   */\n  dup3\n    /* \"#utility.yul\":2235:2328   */\n  tag_33\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2353:2355   */\n  0x20\n    /* \"#utility.yul\":2348:2351   */\n  dup3\n    /* \"#utility.yul\":2344:2356   */\n  add\n    /* \"#utility.yul\":2337:2356   */\n  swap1\n  pop\n    /* \"#utility.yul\":1996:2362   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2368:2787   */\ntag_17:\n    /* \"#utility.yul\":2534:2538   */\n  0x00\n    /* \"#utility.yul\":2572:2574   */\n  0x20\n    /* \"#utility.yul\":2561:2570   */\n  dup3\n    /* \"#utility.yul\":2557:2575   */\n  add\n    /* \"#utility.yul\":2549:2575   */\n  swap1\n  pop\n    /* \"#utility.yul\":2621:2630   */\n  dup2\n    /* \"#utility.yul\":2615:2619   */\n  dup2\n    /* \"#utility.yul\":2611:2631   */\n  sub\n    /* \"#utility.yul\":2607:2608   */\n  0x00\n    /* \"#utility.yul\":2596:2605   */\n  dup4\n    /* \"#utility.yul\":2592:2609   */\n  add\n    /* \"#utility.yul\":2585:2632   */\n  mstore\n    /* \"#utility.yul\":2649:2780   */\n  tag_63\n    /* \"#utility.yul\":2775:2779   */\n  dup2\n    /* \"#utility.yul\":2649:2780   */\n  tag_34\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2641:2780   */\n  swap1\n  pop\n    /* \"#utility.yul\":2368:2787   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2793:2911   */\ntag_35:\n    /* \"#utility.yul\":2880:2904   */\n  tag_65\n    /* \"#utility.yul\":2898:2903   */\n  dup2\n    /* \"#utility.yul\":2880:2904   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2875:2878   */\n  dup3\n    /* \"#utility.yul\":2868:2905   */\n  mstore\n    /* \"#utility.yul\":2793:2911   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2917:3249   */\ntag_20:\n    /* \"#utility.yul\":3038:3042   */\n  0x00\n    /* \"#utility.yul\":3076:3078   */\n  0x40\n    /* \"#utility.yul\":3065:3074   */\n  dup3\n    /* \"#utility.yul\":3061:3079   */\n  add\n    /* \"#utility.yul\":3053:3079   */\n  swap1\n  pop\n    /* \"#utility.yul\":3089:3160   */\n  tag_67\n    /* \"#utility.yul\":3157:3158   */\n  0x00\n    /* \"#utility.yul\":3146:3155   */\n  dup4\n    /* \"#utility.yul\":3142:3159   */\n  add\n    /* \"#utility.yul\":3133:3139   */\n  dup6\n    /* \"#utility.yul\":3089:3160   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3170:3242   */\n  tag_68\n    /* \"#utility.yul\":3238:3240   */\n  0x20\n    /* \"#utility.yul\":3227:3236   */\n  dup4\n    /* \"#utility.yul\":3223:3241   */\n  add\n    /* \"#utility.yul\":3214:3220   */\n  dup5\n    /* \"#utility.yul\":3170:3242   */\n  tag_35\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2917:3249   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"C/Consumer Price Index.sol\":538:3838  contract ConsumerPriceIndex is Ownable, ReentrancyGuard {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/Consumer Price Index.sol\":538:3838  contract ConsumerPriceIndex is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e44884c\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x9e44884c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc9f087ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xca267f28\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xeef778d5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x2e0f2625\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x97a2ab02\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/Consumer Price Index.sol\":671:710  uint256 public constant DECIMALS = 1e18 */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Consumer Price Index.sol\":2395:2656  function getCPIRecord(uint256 index) external view returns (uint256 timestamp, uint256 cpi) {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Consumer Price Index.sol\":2040:2152  function getCurrentCPI() external view returns (uint256) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Consumer Price Index.sol\":3238:3836  function computeInflation(uint256 index1, uint256 index2) external view returns (uint256 inflationRate) {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Consumer Price Index.sol\":2768:2864  function getRecordCount() external view returns (uint256) {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Consumer Price Index.sol\":1486:1923  function updateCPI(uint256 newCPI) external onlyOwner nonReentrant {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"C/Consumer Price Index.sol\":671:710  uint256 public constant DECIMALS = 1e18 */\n    tag_14:\n        /* \"C/Consumer Price Index.sol\":706:710  1e18 */\n      0x0de0b6b3a7640000\n        /* \"C/Consumer Price Index.sol\":671:710  uint256 public constant DECIMALS = 1e18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/Consumer Price Index.sol\":2395:2656  function getCPIRecord(uint256 index) external view returns (uint256 timestamp, uint256 cpi) {... */\n    tag_26:\n        /* \"C/Consumer Price Index.sol\":2455:2472  uint256 timestamp */\n      0x00\n        /* \"C/Consumer Price Index.sol\":2474:2485  uint256 cpi */\n      dup1\n        /* \"C/Consumer Price Index.sol\":2513:2520  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":2513:2527  records.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":2505:2510  index */\n      dup4\n        /* \"C/Consumer Price Index.sol\":2505:2527  index < records.length */\n      lt\n        /* \"C/Consumer Price Index.sol\":2497:2551  require(index < records.length, \"Index out of bounds\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"C/Consumer Price Index.sol\":2561:2585  CPIRecord storage record */\n      0x00\n        /* \"C/Consumer Price Index.sol\":2588:2595  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":2596:2601  index */\n      dup5\n        /* \"C/Consumer Price Index.sol\":2588:2602  records[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n    tag_58:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"C/Consumer Price Index.sol\":2561:2602  CPIRecord storage record = records[index] */\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":2620:2626  record */\n      dup1\n        /* \"C/Consumer Price Index.sol\":2620:2636  record.timestamp */\n      0x00\n      add\n      sload\n        /* \"C/Consumer Price Index.sol\":2638:2644  record */\n      dup2\n        /* \"C/Consumer Price Index.sol\":2638:2648  record.cpi */\n      0x01\n      add\n      sload\n        /* \"C/Consumer Price Index.sol\":2612:2649  return (record.timestamp, record.cpi) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"C/Consumer Price Index.sol\":2395:2656  function getCPIRecord(uint256 index) external view returns (uint256 timestamp, uint256 cpi) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"C/Consumer Price Index.sol\":2040:2152  function getCurrentCPI() external view returns (uint256) {... */\n    tag_30:\n        /* \"C/Consumer Price Index.sol\":2088:2095  uint256 */\n      0x00\n        /* \"C/Consumer Price Index.sol\":2114:2121  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":2139:2140  1 */\n      0x01\n        /* \"C/Consumer Price Index.sol\":2122:2129  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":2122:2136  records.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":2122:2140  records.length - 1 */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"C/Consumer Price Index.sol\":2114:2141  records[records.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_65\n      jumpi\n      tag_66\n      tag_60\n      jump\t// in\n    tag_66:\n    tag_65:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"C/Consumer Price Index.sol\":2114:2145  records[records.length - 1].cpi */\n      0x01\n      add\n      sload\n        /* \"C/Consumer Price Index.sol\":2107:2145  return records[records.length - 1].cpi */\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":2040:2152  function getCurrentCPI() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"C/Consumer Price Index.sol\":3238:3836  function computeInflation(uint256 index1, uint256 index2) external view returns (uint256 inflationRate) {... */\n    tag_35:\n        /* \"C/Consumer Price Index.sol\":3319:3340  uint256 inflationRate */\n      0x00\n        /* \"C/Consumer Price Index.sol\":3369:3376  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":3369:3383  records.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":3360:3366  index1 */\n      dup4\n        /* \"C/Consumer Price Index.sol\":3360:3383  index1 < records.length */\n      lt\n        /* \"C/Consumer Price Index.sol\":3360:3410  index1 < records.length && index2 < records.length */\n      dup1\n      iszero\n      tag_69\n      jumpi\n      pop\n        /* \"C/Consumer Price Index.sol\":3396:3403  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":3396:3410  records.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":3387:3393  index2 */\n      dup3\n        /* \"C/Consumer Price Index.sol\":3387:3410  index2 < records.length */\n      lt\n        /* \"C/Consumer Price Index.sol\":3360:3410  index1 < records.length && index2 < records.length */\n    tag_69:\n        /* \"C/Consumer Price Index.sol\":3352:3434  require(index1 < records.length && index2 < records.length, \"Index out of bounds\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_57\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"C/Consumer Price Index.sol\":3461:3467  index1 */\n      dup3\n        /* \"C/Consumer Price Index.sol\":3452:3458  index2 */\n      dup3\n        /* \"C/Consumer Price Index.sol\":3452:3467  index2 > index1 */\n      gt\n        /* \"C/Consumer Price Index.sol\":3444:3509  require(index2 > index1, \"Second index must be later than first\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"C/Consumer Price Index.sol\":3519:3544  CPIRecord storage record1 */\n      0x00\n        /* \"C/Consumer Price Index.sol\":3547:3554  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":3555:3561  index1 */\n      dup5\n        /* \"C/Consumer Price Index.sol\":3547:3562  records[index1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      tag_76\n      tag_60\n      jump\t// in\n    tag_76:\n    tag_75:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"C/Consumer Price Index.sol\":3519:3562  CPIRecord storage record1 = records[index1] */\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":3572:3597  CPIRecord storage record2 */\n      0x00\n        /* \"C/Consumer Price Index.sol\":3600:3607  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":3608:3614  index2 */\n      dup5\n        /* \"C/Consumer Price Index.sol\":3600:3615  records[index2] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      tag_79\n      tag_60\n      jump\t// in\n    tag_79:\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"C/Consumer Price Index.sol\":3572:3615  CPIRecord storage record2 = records[index2] */\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":706:710  1e18 */\n      0x0de0b6b3a7640000\n        /* \"C/Consumer Price Index.sol\":3806:3813  record1 */\n      dup3\n        /* \"C/Consumer Price Index.sol\":3806:3817  record1.cpi */\n      0x01\n      add\n      sload\n        /* \"C/Consumer Price Index.sol\":706:710  1e18 */\n      0x0de0b6b3a7640000\n        /* \"C/Consumer Price Index.sol\":3781:3788  record2 */\n      dup4\n        /* \"C/Consumer Price Index.sol\":3781:3792  record2.cpi */\n      0x01\n      add\n      sload\n        /* \"C/Consumer Price Index.sol\":3781:3803  record2.cpi * DECIMALS */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"C/Consumer Price Index.sol\":3781:3817  record2.cpi * DECIMALS / record1.cpi */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"C/Consumer Price Index.sol\":3780:3829  (record2.cpi * DECIMALS / record1.cpi) - DECIMALS */\n      tag_85\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_85:\n        /* \"C/Consumer Price Index.sol\":3764:3829  inflationRate = (record2.cpi * DECIMALS / record1.cpi) - DECIMALS */\n      swap3\n      pop\n        /* \"C/Consumer Price Index.sol\":3342:3836  {... */\n      pop\n      pop\n        /* \"C/Consumer Price Index.sol\":3238:3836  function computeInflation(uint256 index1, uint256 index2) external view returns (uint256 inflationRate) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/Consumer Price Index.sol\":2768:2864  function getRecordCount() external view returns (uint256) {... */\n    tag_38:\n        /* \"C/Consumer Price Index.sol\":2817:2824  uint256 */\n      0x00\n        /* \"C/Consumer Price Index.sol\":2843:2850  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":2843:2857  records.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":2836:2857  return records.length */\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":2768:2864  function getRecordCount() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"C/Consumer Price Index.sol\":1486:1923  function updateCPI(uint256 newCPI) external onlyOwner nonReentrant {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_91\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_90:\n        /* \"C/Consumer Price Index.sol\":1580:1581  0 */\n      0x00\n        /* \"C/Consumer Price Index.sol\":1571:1577  newCPI */\n      dup2\n        /* \"C/Consumer Price Index.sol\":1571:1581  newCPI > 0 */\n      gt\n        /* \"C/Consumer Price Index.sol\":1563:1606  require(newCPI > 0, \"CPI must be positive\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"C/Consumer Price Index.sol\":1616:1644  CPIRecord storage lastRecord */\n      0x00\n        /* \"C/Consumer Price Index.sol\":1647:1654  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":1672:1673  1 */\n      0x01\n        /* \"C/Consumer Price Index.sol\":1655:1662  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":1655:1669  records.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":1655:1673  records.length - 1 */\n      tag_96\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_96:\n        /* \"C/Consumer Price Index.sol\":1647:1674  records[records.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_60\n      jump\t// in\n    tag_98:\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"C/Consumer Price Index.sol\":1616:1674  CPIRecord storage lastRecord = records[records.length - 1] */\n      swap1\n      pop\n        /* \"C/Consumer Price Index.sol\":1702:1712  lastRecord */\n      dup1\n        /* \"C/Consumer Price Index.sol\":1702:1716  lastRecord.cpi */\n      0x01\n      add\n      sload\n        /* \"C/Consumer Price Index.sol\":1692:1698  newCPI */\n      dup3\n        /* \"C/Consumer Price Index.sol\":1692:1716  newCPI != lastRecord.cpi */\n      sub\n        /* \"C/Consumer Price Index.sol\":1684:1756  require(newCPI != lastRecord.cpi, \"New CPI is identical to current CPI\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"C/Consumer Price Index.sol\":1766:1773  records */\n      0x02\n        /* \"C/Consumer Price Index.sol\":1779:1865  CPIRecord({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"C/Consumer Price Index.sol\":1814:1829  block.timestamp */\n      timestamp\n        /* \"C/Consumer Price Index.sol\":1779:1865  CPIRecord({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/Consumer Price Index.sol\":1848:1854  newCPI */\n      dup5\n        /* \"C/Consumer Price Index.sol\":1779:1865  CPIRecord({... */\n      dup2\n      mstore\n      pop\n        /* \"C/Consumer Price Index.sol\":1766:1866  records.push(CPIRecord({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"C/Consumer Price Index.sol\":1881:1916  CPIUpdated(block.timestamp, newCPI) */\n      0xfaae7e9ebff587ddfd1fc7584c25926410fd174a75c5781a0ce1dfe041c0edab\n        /* \"C/Consumer Price Index.sol\":1892:1907  block.timestamp */\n      timestamp\n        /* \"C/Consumer Price Index.sol\":1909:1915  newCPI */\n      dup4\n        /* \"C/Consumer Price Index.sol\":1881:1916  CPIUpdated(block.timestamp, newCPI) */\n      mload(0x40)\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"C/Consumer Price Index.sol\":1553:1923  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_106\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_105:\n        /* \"C/Consumer Price Index.sol\":1486:1923  function updateCPI(uint256 newCPI) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_127:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_128:\n        /* \"#utility.yul\":177:201   */\n      tag_155\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_127\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_157\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_128\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_129:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_130:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_160\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_129\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_131:\n        /* \"#utility.yul\":763:787   */\n      tag_162\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_130\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_22:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_164\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_131\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_133:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_135:\n        /* \"#utility.yul\":1428:1452   */\n      tag_169\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_127\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_170:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_136:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_172\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_135\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_25:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_175\n      tag_133\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1704:1823   */\n    tag_174:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_176\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_136\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2295   */\n    tag_28:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x40\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_178\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup6\n        /* \"#utility.yul\":2135:2206   */\n      tag_128\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2216:2288   */\n      tag_179\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup4\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2260:2266   */\n      dup5\n        /* \"#utility.yul\":2216:2288   */\n      tag_128\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1963:2295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2775   */\n    tag_34:\n        /* \"#utility.yul\":2369:2375   */\n      0x00\n        /* \"#utility.yul\":2377:2383   */\n      dup1\n        /* \"#utility.yul\":2426:2428   */\n      0x40\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2405:2412   */\n      dup6\n        /* \"#utility.yul\":2401:2424   */\n      sub\n        /* \"#utility.yul\":2397:2429   */\n      slt\n        /* \"#utility.yul\":2394:2513   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2432:2511   */\n      tag_182\n      tag_133\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2394:2513   */\n    tag_181:\n        /* \"#utility.yul\":2552:2553   */\n      0x00\n        /* \"#utility.yul\":2577:2630   */\n      tag_183\n        /* \"#utility.yul\":2622:2629   */\n      dup6\n        /* \"#utility.yul\":2613:2619   */\n      dup3\n        /* \"#utility.yul\":2602:2611   */\n      dup7\n        /* \"#utility.yul\":2598:2620   */\n      add\n        /* \"#utility.yul\":2577:2630   */\n      tag_136\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2567:2630   */\n      swap3\n      pop\n        /* \"#utility.yul\":2523:2640   */\n      pop\n        /* \"#utility.yul\":2679:2681   */\n      0x20\n        /* \"#utility.yul\":2705:2758   */\n      tag_184\n        /* \"#utility.yul\":2750:2757   */\n      dup6\n        /* \"#utility.yul\":2741:2747   */\n      dup3\n        /* \"#utility.yul\":2730:2739   */\n      dup7\n        /* \"#utility.yul\":2726:2748   */\n      add\n        /* \"#utility.yul\":2705:2758   */\n      tag_136\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2695:2758   */\n      swap2\n      pop\n        /* \"#utility.yul\":2650:2768   */\n      pop\n        /* \"#utility.yul\":2301:2775   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2781:2903   */\n    tag_137:\n        /* \"#utility.yul\":2854:2878   */\n      tag_186\n        /* \"#utility.yul\":2872:2877   */\n      dup2\n        /* \"#utility.yul\":2854:2878   */\n      tag_130\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2847:2852   */\n      dup2\n        /* \"#utility.yul\":2844:2879   */\n      eq\n        /* \"#utility.yul\":2834:2897   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":2893:2894   */\n      0x00\n        /* \"#utility.yul\":2890:2891   */\n      dup1\n        /* \"#utility.yul\":2883:2895   */\n      revert\n        /* \"#utility.yul\":2834:2897   */\n    tag_187:\n        /* \"#utility.yul\":2781:2903   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3048   */\n    tag_138:\n        /* \"#utility.yul\":2955:2960   */\n      0x00\n        /* \"#utility.yul\":2993:2999   */\n      dup2\n        /* \"#utility.yul\":2980:3000   */\n      calldataload\n        /* \"#utility.yul\":2971:3000   */\n      swap1\n      pop\n        /* \"#utility.yul\":3009:3042   */\n      tag_189\n        /* \"#utility.yul\":3036:3041   */\n      dup2\n        /* \"#utility.yul\":3009:3042   */\n      tag_137\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2909:3048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3054:3383   */\n    tag_45:\n        /* \"#utility.yul\":3113:3119   */\n      0x00\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3150:3159   */\n      dup3\n        /* \"#utility.yul\":3141:3148   */\n      dup5\n        /* \"#utility.yul\":3137:3160   */\n      sub\n        /* \"#utility.yul\":3133:3165   */\n      slt\n        /* \"#utility.yul\":3130:3249   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3168:3247   */\n      tag_192\n      tag_133\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3130:3249   */\n    tag_191:\n        /* \"#utility.yul\":3288:3289   */\n      0x00\n        /* \"#utility.yul\":3313:3366   */\n      tag_193\n        /* \"#utility.yul\":3358:3365   */\n      dup5\n        /* \"#utility.yul\":3349:3355   */\n      dup3\n        /* \"#utility.yul\":3338:3347   */\n      dup6\n        /* \"#utility.yul\":3334:3356   */\n      add\n        /* \"#utility.yul\":3313:3366   */\n      tag_138\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3303:3366   */\n      swap2\n      pop\n        /* \"#utility.yul\":3259:3376   */\n      pop\n        /* \"#utility.yul\":3054:3383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3389:3558   */\n    tag_139:\n        /* \"#utility.yul\":3473:3484   */\n      0x00\n        /* \"#utility.yul\":3507:3513   */\n      dup3\n        /* \"#utility.yul\":3502:3505   */\n      dup3\n        /* \"#utility.yul\":3495:3514   */\n      mstore\n        /* \"#utility.yul\":3547:3551   */\n      0x20\n        /* \"#utility.yul\":3542:3545   */\n      dup3\n        /* \"#utility.yul\":3538:3552   */\n      add\n        /* \"#utility.yul\":3523:3552   */\n      swap1\n      pop\n        /* \"#utility.yul\":3389:3558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3564:3733   */\n    tag_140:\n        /* \"#utility.yul\":3704:3725   */\n      0x496e646578206f7574206f6620626f756e647300000000000000000000000000\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup3\n        /* \"#utility.yul\":3688:3702   */\n      add\n        /* \"#utility.yul\":3681:3726   */\n      mstore\n        /* \"#utility.yul\":3564:3733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3739:4105   */\n    tag_141:\n        /* \"#utility.yul\":3881:3884   */\n      0x00\n        /* \"#utility.yul\":3902:3969   */\n      tag_197\n        /* \"#utility.yul\":3966:3968   */\n      0x13\n        /* \"#utility.yul\":3961:3964   */\n      dup4\n        /* \"#utility.yul\":3902:3969   */\n      tag_139\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3895:3969   */\n      swap2\n      pop\n        /* \"#utility.yul\":3978:4071   */\n      tag_198\n        /* \"#utility.yul\":4067:4070   */\n      dup3\n        /* \"#utility.yul\":3978:4071   */\n      tag_140\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4096:4098   */\n      0x20\n        /* \"#utility.yul\":4091:4094   */\n      dup3\n        /* \"#utility.yul\":4087:4099   */\n      add\n        /* \"#utility.yul\":4080:4099   */\n      swap1\n      pop\n        /* \"#utility.yul\":3739:4105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4111:4530   */\n    tag_57:\n        /* \"#utility.yul\":4277:4281   */\n      0x00\n        /* \"#utility.yul\":4315:4317   */\n      0x20\n        /* \"#utility.yul\":4304:4313   */\n      dup3\n        /* \"#utility.yul\":4300:4318   */\n      add\n        /* \"#utility.yul\":4292:4318   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4373   */\n      dup2\n        /* \"#utility.yul\":4358:4362   */\n      dup2\n        /* \"#utility.yul\":4354:4374   */\n      sub\n        /* \"#utility.yul\":4350:4351   */\n      0x00\n        /* \"#utility.yul\":4339:4348   */\n      dup4\n        /* \"#utility.yul\":4335:4352   */\n      add\n        /* \"#utility.yul\":4328:4375   */\n      mstore\n        /* \"#utility.yul\":4392:4523   */\n      tag_200\n        /* \"#utility.yul\":4518:4522   */\n      dup2\n        /* \"#utility.yul\":4392:4523   */\n      tag_141\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4384:4523   */\n      swap1\n      pop\n        /* \"#utility.yul\":4111:4530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4536:4716   */\n    tag_60:\n        /* \"#utility.yul\":4584:4661   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4581:4582   */\n      0x00\n        /* \"#utility.yul\":4574:4662   */\n      mstore\n        /* \"#utility.yul\":4681:4685   */\n      0x32\n        /* \"#utility.yul\":4678:4679   */\n      0x04\n        /* \"#utility.yul\":4671:4686   */\n      mstore\n        /* \"#utility.yul\":4705:4709   */\n      0x24\n        /* \"#utility.yul\":4702:4703   */\n      0x00\n        /* \"#utility.yul\":4695:4710   */\n      revert\n        /* \"#utility.yul\":4722:4902   */\n    tag_142:\n        /* \"#utility.yul\":4770:4847   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4767:4768   */\n      0x00\n        /* \"#utility.yul\":4760:4848   */\n      mstore\n        /* \"#utility.yul\":4867:4871   */\n      0x11\n        /* \"#utility.yul\":4864:4865   */\n      0x04\n        /* \"#utility.yul\":4857:4872   */\n      mstore\n        /* \"#utility.yul\":4891:4895   */\n      0x24\n        /* \"#utility.yul\":4888:4889   */\n      0x00\n        /* \"#utility.yul\":4881:4896   */\n      revert\n        /* \"#utility.yul\":4908:5102   */\n    tag_64:\n        /* \"#utility.yul\":4948:4952   */\n      0x00\n        /* \"#utility.yul\":4968:4988   */\n      tag_204\n        /* \"#utility.yul\":4986:4987   */\n      dup3\n        /* \"#utility.yul\":4968:4988   */\n      tag_127\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4963:4988   */\n      swap2\n      pop\n        /* \"#utility.yul\":5002:5022   */\n      tag_205\n        /* \"#utility.yul\":5020:5021   */\n      dup4\n        /* \"#utility.yul\":5002:5022   */\n      tag_127\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4997:5022   */\n      swap3\n      pop\n        /* \"#utility.yul\":5046:5047   */\n      dup3\n        /* \"#utility.yul\":5043:5044   */\n      dup3\n        /* \"#utility.yul\":5039:5048   */\n      sub\n        /* \"#utility.yul\":5031:5048   */\n      swap1\n      pop\n        /* \"#utility.yul\":5070:5071   */\n      dup2\n        /* \"#utility.yul\":5064:5068   */\n      dup2\n        /* \"#utility.yul\":5061:5072   */\n      gt\n        /* \"#utility.yul\":5058:5095   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":5075:5093   */\n      tag_207\n      tag_142\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5058:5095   */\n    tag_206:\n        /* \"#utility.yul\":4908:5102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5108:5332   */\n    tag_143:\n        /* \"#utility.yul\":5248:5282   */\n      0x5365636f6e6420696e646578206d757374206265206c61746572207468616e20\n        /* \"#utility.yul\":5244:5245   */\n      0x00\n        /* \"#utility.yul\":5236:5242   */\n      dup3\n        /* \"#utility.yul\":5232:5246   */\n      add\n        /* \"#utility.yul\":5225:5283   */\n      mstore\n        /* \"#utility.yul\":5317:5324   */\n      0x6669727374000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5312:5314   */\n      0x20\n        /* \"#utility.yul\":5304:5310   */\n      dup3\n        /* \"#utility.yul\":5300:5315   */\n      add\n        /* \"#utility.yul\":5293:5325   */\n      mstore\n        /* \"#utility.yul\":5108:5332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5338:5704   */\n    tag_144:\n        /* \"#utility.yul\":5480:5483   */\n      0x00\n        /* \"#utility.yul\":5501:5568   */\n      tag_210\n        /* \"#utility.yul\":5565:5567   */\n      0x25\n        /* \"#utility.yul\":5560:5563   */\n      dup4\n        /* \"#utility.yul\":5501:5568   */\n      tag_139\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5494:5568   */\n      swap2\n      pop\n        /* \"#utility.yul\":5577:5670   */\n      tag_211\n        /* \"#utility.yul\":5666:5669   */\n      dup3\n        /* \"#utility.yul\":5577:5670   */\n      tag_143\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5695:5697   */\n      0x40\n        /* \"#utility.yul\":5690:5693   */\n      dup3\n        /* \"#utility.yul\":5686:5698   */\n      add\n        /* \"#utility.yul\":5679:5698   */\n      swap1\n      pop\n        /* \"#utility.yul\":5338:5704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5710:6129   */\n    tag_74:\n        /* \"#utility.yul\":5876:5880   */\n      0x00\n        /* \"#utility.yul\":5914:5916   */\n      0x20\n        /* \"#utility.yul\":5903:5912   */\n      dup3\n        /* \"#utility.yul\":5899:5917   */\n      add\n        /* \"#utility.yul\":5891:5917   */\n      swap1\n      pop\n        /* \"#utility.yul\":5963:5972   */\n      dup2\n        /* \"#utility.yul\":5957:5961   */\n      dup2\n        /* \"#utility.yul\":5953:5973   */\n      sub\n        /* \"#utility.yul\":5949:5950   */\n      0x00\n        /* \"#utility.yul\":5938:5947   */\n      dup4\n        /* \"#utility.yul\":5934:5951   */\n      add\n        /* \"#utility.yul\":5927:5974   */\n      mstore\n        /* \"#utility.yul\":5991:6122   */\n      tag_213\n        /* \"#utility.yul\":6117:6121   */\n      dup2\n        /* \"#utility.yul\":5991:6122   */\n      tag_144\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5983:6122   */\n      swap1\n      pop\n        /* \"#utility.yul\":5710:6129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6135:6545   */\n    tag_82:\n        /* \"#utility.yul\":6175:6182   */\n      0x00\n        /* \"#utility.yul\":6198:6218   */\n      tag_215\n        /* \"#utility.yul\":6216:6217   */\n      dup3\n        /* \"#utility.yul\":6198:6218   */\n      tag_127\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6193:6218   */\n      swap2\n      pop\n        /* \"#utility.yul\":6232:6252   */\n      tag_216\n        /* \"#utility.yul\":6250:6251   */\n      dup4\n        /* \"#utility.yul\":6232:6252   */\n      tag_127\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6227:6252   */\n      swap3\n      pop\n        /* \"#utility.yul\":6287:6288   */\n      dup3\n        /* \"#utility.yul\":6284:6285   */\n      dup3\n        /* \"#utility.yul\":6280:6289   */\n      mul\n        /* \"#utility.yul\":6309:6339   */\n      tag_217\n        /* \"#utility.yul\":6327:6338   */\n      dup2\n        /* \"#utility.yul\":6309:6339   */\n      tag_127\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6298:6339   */\n      swap2\n      pop\n        /* \"#utility.yul\":6488:6489   */\n      dup3\n        /* \"#utility.yul\":6479:6486   */\n      dup3\n        /* \"#utility.yul\":6475:6490   */\n      div\n        /* \"#utility.yul\":6472:6473   */\n      dup5\n        /* \"#utility.yul\":6469:6491   */\n      eq\n        /* \"#utility.yul\":6449:6450   */\n      dup4\n        /* \"#utility.yul\":6442:6451   */\n      iszero\n        /* \"#utility.yul\":6422:6505   */\n      or\n        /* \"#utility.yul\":6399:6538   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":6518:6536   */\n      tag_219\n      tag_142\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6399:6538   */\n    tag_218:\n        /* \"#utility.yul\":6183:6545   */\n      pop\n        /* \"#utility.yul\":6135:6545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6551:6731   */\n    tag_145:\n        /* \"#utility.yul\":6599:6676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6596:6597   */\n      0x00\n        /* \"#utility.yul\":6589:6677   */\n      mstore\n        /* \"#utility.yul\":6696:6700   */\n      0x12\n        /* \"#utility.yul\":6693:6694   */\n      0x04\n        /* \"#utility.yul\":6686:6701   */\n      mstore\n        /* \"#utility.yul\":6720:6724   */\n      0x24\n        /* \"#utility.yul\":6717:6718   */\n      0x00\n        /* \"#utility.yul\":6710:6725   */\n      revert\n        /* \"#utility.yul\":6737:6922   */\n    tag_84:\n        /* \"#utility.yul\":6777:6778   */\n      0x00\n        /* \"#utility.yul\":6794:6814   */\n      tag_222\n        /* \"#utility.yul\":6812:6813   */\n      dup3\n        /* \"#utility.yul\":6794:6814   */\n      tag_127\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6789:6814   */\n      swap2\n      pop\n        /* \"#utility.yul\":6828:6848   */\n      tag_223\n        /* \"#utility.yul\":6846:6847   */\n      dup4\n        /* \"#utility.yul\":6828:6848   */\n      tag_127\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6823:6848   */\n      swap3\n      pop\n        /* \"#utility.yul\":6867:6868   */\n      dup3\n        /* \"#utility.yul\":6857:6892   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6872:6890   */\n      tag_225\n      tag_145\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6857:6892   */\n    tag_224:\n        /* \"#utility.yul\":6914:6915   */\n      dup3\n        /* \"#utility.yul\":6911:6912   */\n      dup3\n        /* \"#utility.yul\":6907:6916   */\n      div\n        /* \"#utility.yul\":6902:6916   */\n      swap1\n      pop\n        /* \"#utility.yul\":6737:6922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6928:7098   */\n    tag_146:\n        /* \"#utility.yul\":7068:7090   */\n      0x435049206d75737420626520706f736974697665000000000000000000000000\n        /* \"#utility.yul\":7064:7065   */\n      0x00\n        /* \"#utility.yul\":7056:7062   */\n      dup3\n        /* \"#utility.yul\":7052:7066   */\n      add\n        /* \"#utility.yul\":7045:7091   */\n      mstore\n        /* \"#utility.yul\":6928:7098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7104:7470   */\n    tag_147:\n        /* \"#utility.yul\":7246:7249   */\n      0x00\n        /* \"#utility.yul\":7267:7334   */\n      tag_228\n        /* \"#utility.yul\":7331:7333   */\n      0x14\n        /* \"#utility.yul\":7326:7329   */\n      dup4\n        /* \"#utility.yul\":7267:7334   */\n      tag_139\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7260:7334   */\n      swap2\n      pop\n        /* \"#utility.yul\":7343:7436   */\n      tag_229\n        /* \"#utility.yul\":7432:7435   */\n      dup3\n        /* \"#utility.yul\":7343:7436   */\n      tag_146\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7461:7463   */\n      0x20\n        /* \"#utility.yul\":7456:7459   */\n      dup3\n        /* \"#utility.yul\":7452:7464   */\n      add\n        /* \"#utility.yul\":7445:7464   */\n      swap1\n      pop\n        /* \"#utility.yul\":7104:7470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7476:7895   */\n    tag_95:\n        /* \"#utility.yul\":7642:7646   */\n      0x00\n        /* \"#utility.yul\":7680:7682   */\n      0x20\n        /* \"#utility.yul\":7669:7678   */\n      dup3\n        /* \"#utility.yul\":7665:7683   */\n      add\n        /* \"#utility.yul\":7657:7683   */\n      swap1\n      pop\n        /* \"#utility.yul\":7729:7738   */\n      dup2\n        /* \"#utility.yul\":7723:7727   */\n      dup2\n        /* \"#utility.yul\":7719:7739   */\n      sub\n        /* \"#utility.yul\":7715:7716   */\n      0x00\n        /* \"#utility.yul\":7704:7713   */\n      dup4\n        /* \"#utility.yul\":7700:7717   */\n      add\n        /* \"#utility.yul\":7693:7740   */\n      mstore\n        /* \"#utility.yul\":7757:7888   */\n      tag_231\n        /* \"#utility.yul\":7883:7887   */\n      dup2\n        /* \"#utility.yul\":7757:7888   */\n      tag_147\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7749:7888   */\n      swap1\n      pop\n        /* \"#utility.yul\":7476:7895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7901:8123   */\n    tag_148:\n        /* \"#utility.yul\":8041:8075   */\n      0x4e657720435049206973206964656e746963616c20746f2063757272656e7420\n        /* \"#utility.yul\":8037:8038   */\n      0x00\n        /* \"#utility.yul\":8029:8035   */\n      dup3\n        /* \"#utility.yul\":8025:8039   */\n      add\n        /* \"#utility.yul\":8018:8076   */\n      mstore\n        /* \"#utility.yul\":8110:8115   */\n      0x4350490000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8105:8107   */\n      0x20\n        /* \"#utility.yul\":8097:8103   */\n      dup3\n        /* \"#utility.yul\":8093:8108   */\n      add\n        /* \"#utility.yul\":8086:8116   */\n      mstore\n        /* \"#utility.yul\":7901:8123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8129:8495   */\n    tag_149:\n        /* \"#utility.yul\":8271:8274   */\n      0x00\n        /* \"#utility.yul\":8292:8359   */\n      tag_234\n        /* \"#utility.yul\":8356:8358   */\n      0x23\n        /* \"#utility.yul\":8351:8354   */\n      dup4\n        /* \"#utility.yul\":8292:8359   */\n      tag_139\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8285:8359   */\n      swap2\n      pop\n        /* \"#utility.yul\":8368:8461   */\n      tag_235\n        /* \"#utility.yul\":8457:8460   */\n      dup3\n        /* \"#utility.yul\":8368:8461   */\n      tag_148\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8486:8488   */\n      0x40\n        /* \"#utility.yul\":8481:8484   */\n      dup3\n        /* \"#utility.yul\":8477:8489   */\n      add\n        /* \"#utility.yul\":8470:8489   */\n      swap1\n      pop\n        /* \"#utility.yul\":8129:8495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8501:8920   */\n    tag_102:\n        /* \"#utility.yul\":8667:8671   */\n      0x00\n        /* \"#utility.yul\":8705:8707   */\n      0x20\n        /* \"#utility.yul\":8694:8703   */\n      dup3\n        /* \"#utility.yul\":8690:8708   */\n      add\n        /* \"#utility.yul\":8682:8708   */\n      swap1\n      pop\n        /* \"#utility.yul\":8754:8763   */\n      dup2\n        /* \"#utility.yul\":8748:8752   */\n      dup2\n        /* \"#utility.yul\":8744:8764   */\n      sub\n        /* \"#utility.yul\":8740:8741   */\n      0x00\n        /* \"#utility.yul\":8729:8738   */\n      dup4\n        /* \"#utility.yul\":8725:8742   */\n      add\n        /* \"#utility.yul\":8718:8765   */\n      mstore\n        /* \"#utility.yul\":8782:8913   */\n      tag_237\n        /* \"#utility.yul\":8908:8912   */\n      dup2\n        /* \"#utility.yul\":8782:8913   */\n      tag_149\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8774:8913   */\n      swap1\n      pop\n        /* \"#utility.yul\":8501:8920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8926:9107   */\n    tag_150:\n        /* \"#utility.yul\":9066:9099   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9062:9063   */\n      0x00\n        /* \"#utility.yul\":9054:9060   */\n      dup3\n        /* \"#utility.yul\":9050:9064   */\n      add\n        /* \"#utility.yul\":9043:9100   */\n      mstore\n        /* \"#utility.yul\":8926:9107   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9113:9479   */\n    tag_151:\n        /* \"#utility.yul\":9255:9258   */\n      0x00\n        /* \"#utility.yul\":9276:9343   */\n      tag_240\n        /* \"#utility.yul\":9340:9342   */\n      0x1f\n        /* \"#utility.yul\":9335:9338   */\n      dup4\n        /* \"#utility.yul\":9276:9343   */\n      tag_139\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9269:9343   */\n      swap2\n      pop\n        /* \"#utility.yul\":9352:9445   */\n      tag_241\n        /* \"#utility.yul\":9441:9444   */\n      dup3\n        /* \"#utility.yul\":9352:9445   */\n      tag_150\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9470:9472   */\n      0x20\n        /* \"#utility.yul\":9465:9468   */\n      dup3\n        /* \"#utility.yul\":9461:9473   */\n      add\n        /* \"#utility.yul\":9454:9473   */\n      swap1\n      pop\n        /* \"#utility.yul\":9113:9479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9485:9904   */\n    tag_124:\n        /* \"#utility.yul\":9651:9655   */\n      0x00\n        /* \"#utility.yul\":9689:9691   */\n      0x20\n        /* \"#utility.yul\":9678:9687   */\n      dup3\n        /* \"#utility.yul\":9674:9692   */\n      add\n        /* \"#utility.yul\":9666:9692   */\n      swap1\n      pop\n        /* \"#utility.yul\":9738:9747   */\n      dup2\n        /* \"#utility.yul\":9732:9736   */\n      dup2\n        /* \"#utility.yul\":9728:9748   */\n      sub\n        /* \"#utility.yul\":9724:9725   */\n      0x00\n        /* \"#utility.yul\":9713:9722   */\n      dup4\n        /* \"#utility.yul\":9709:9726   */\n      add\n        /* \"#utility.yul\":9702:9749   */\n      mstore\n        /* \"#utility.yul\":9766:9897   */\n      tag_243\n        /* \"#utility.yul\":9892:9896   */\n      dup2\n        /* \"#utility.yul\":9766:9897   */\n      tag_151\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9758:9897   */\n      swap1\n      pop\n        /* \"#utility.yul\":9485:9904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220988c629f10537e83e058cd8da24537a086d8f03c19333027d01dffe54bca4ebe64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 411,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3252:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:4",
														"type": ""
													}
												],
												"src": "545:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:4"
															},
															"nodeType": "YulIf",
															"src": "781:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:4",
														"type": ""
													}
												],
												"src": "694:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1106:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1121:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1106:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1088:7:4",
														"type": ""
													}
												],
												"src": "1051:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1228:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1238:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1267:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1249:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1238:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1210:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1220:7:4",
														"type": ""
													}
												],
												"src": "1183:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1390:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1372:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1360:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1338:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1345:3:4",
														"type": ""
													}
												],
												"src": "1285:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1507:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1517:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1529:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1517:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1621:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1553:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1479:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1491:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1502:4:4",
														"type": ""
													}
												],
												"src": "1409:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1733:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1755:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1743:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1771:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1790:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1795:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1771:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1705:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1710:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1721:11:4",
														"type": ""
													}
												],
												"src": "1637:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1948:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:14:4"
																	},
																	{
																		"hexValue": "496e697469616c20435049206d75737420626520706f736974697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1952:30:4",
																		"type": "",
																		"value": "Initial CPI must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1929:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1910:6:4",
														"type": ""
													}
												],
												"src": "1812:178:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2142:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2152:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2218:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2159:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2324:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb",
																	"nodeType": "YulIdentifier",
																	"src": "2235:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2235:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2337:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2348:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2353:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2337:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2130:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:4",
														"type": ""
													}
												],
												"src": "1996:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2561:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2549:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2596:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2607:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2615:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2621:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2641:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2775:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2649:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2649:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2641:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2519:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2534:4:4",
														"type": ""
													}
												],
												"src": "2368:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2858:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2875:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2898:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2880:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2868:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2846:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2853:3:4",
														"type": ""
													}
												],
												"src": "2793:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3043:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3053:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3065:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3076:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3061:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3061:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3053:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3133:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3157:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3142:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3089:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3089:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3214:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3227:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3238:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3223:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3170:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3007:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3019:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3027:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3038:4:4",
														"type": ""
													}
												],
												"src": "2917:332:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial CPI must be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620010bc380380620010bc833981810160405281019062000036919062000298565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a191906200030b565b60405180910390fd5b620000bb816200019b60201b60201c565b50600180819055505f811162000108576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ff9062000384565b60405180910390fd5b6002604051806040016040528042815260200183815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001015550507ffaae7e9ebff587ddfd1fc7584c25926410fd174a75c5781a0ce1dfe041c0edab42826040516200018c929190620003b5565b60405180910390a150620003e0565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f819050919050565b620002748162000260565b81146200027f575f80fd5b50565b5f81519050620002928162000269565b92915050565b5f60208284031215620002b057620002af6200025c565b5b5f620002bf8482850162000282565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002f382620002c8565b9050919050565b6200030581620002e7565b82525050565b5f602082019050620003205f830184620002fa565b92915050565b5f82825260208201905092915050565b7f496e697469616c20435049206d75737420626520706f736974697665000000005f82015250565b5f6200036c601c8362000326565b9150620003798262000336565b602082019050919050565b5f6020820190508181035f8301526200039d816200035e565b9050919050565b620003af8162000260565b82525050565b5f604082019050620003ca5f830185620003a4565b620003d96020830184620003a4565b9392505050565b610cce80620003ee5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80639e44884c116100645780639e44884c1461010c578063c9f087ab1461012a578063ca267f281461015a578063eef778d514610178578063f2fde38b1461019457610091565b80632e0f262514610095578063715018a6146100b35780638da5cb5b146100bd57806397a2ab02146100db575b5f80fd5b61009d6101b0565b6040516100aa9190610785565b60405180910390f35b6100bb6101bc565b005b6100c56101cf565b6040516100d291906107dd565b60405180910390f35b6100f560048036038101906100f09190610824565b6101f6565b60405161010392919061084f565b60405180910390f35b610114610275565b6040516101219190610785565b60405180910390f35b610144600480360381019061013f9190610876565b6102b0565b6040516101519190610785565b60405180910390f35b6101626103d4565b60405161016f9190610785565b60405180910390f35b610192600480360381019061018d9190610824565b6103e0565b005b6101ae60048036038101906101a991906108de565b610542565b005b670de0b6b3a764000081565b6101c46105c6565b6101cd5f61064d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80600280549050831061023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023690610963565b60405180910390fd5b5f6002848154811061025457610253610981565b5b905f5260205f2090600202019050805f015481600101549250925050915091565b5f6002600160028054905061028a91906109db565b8154811061029b5761029a610981565b5b905f5260205f20906002020160010154905090565b5f600280549050831080156102c9575060028054905082105b610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610963565b60405180910390fd5b82821161034a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190610a7e565b60405180910390fd5b5f6002848154811061035f5761035e610981565b5b905f5260205f20906002020190505f6002848154811061038257610381610981565b5b905f5260205f2090600202019050670de0b6b3a76400008260010154670de0b6b3a764000083600101546103b69190610a9c565b6103c09190610b0a565b6103ca91906109db565b9250505092915050565b5f600280549050905090565b6103e86105c6565b6103f061070e565b5f8111610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610b84565b60405180910390fd5b5f6002600160028054905061044791906109db565b8154811061045857610457610981565b5b905f5260205f2090600202019050806001015482036104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390610c12565b60405180910390fd5b6002604051806040016040528042815260200184815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001015550507ffaae7e9ebff587ddfd1fc7584c25926410fd174a75c5781a0ce1dfe041c0edab428360405161052e92919061084f565b60405180910390a15061053f61075d565b50565b61054a6105c6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105ba575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105b191906107dd565b60405180910390fd5b6105c38161064d565b50565b6105ce610766565b73ffffffffffffffffffffffffffffffffffffffff166105ec6101cf565b73ffffffffffffffffffffffffffffffffffffffff161461064b5761060f610766565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161064291906107dd565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90610c7a565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f819050919050565b61077f8161076d565b82525050565b5f6020820190506107985f830184610776565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107c78261079e565b9050919050565b6107d7816107bd565b82525050565b5f6020820190506107f05f8301846107ce565b92915050565b5f80fd5b6108038161076d565b811461080d575f80fd5b50565b5f8135905061081e816107fa565b92915050565b5f60208284031215610839576108386107f6565b5b5f61084684828501610810565b91505092915050565b5f6040820190506108625f830185610776565b61086f6020830184610776565b9392505050565b5f806040838503121561088c5761088b6107f6565b5b5f61089985828601610810565b92505060206108aa85828601610810565b9150509250929050565b6108bd816107bd565b81146108c7575f80fd5b50565b5f813590506108d8816108b4565b92915050565b5f602082840312156108f3576108f26107f6565b5b5f610900848285016108ca565b91505092915050565b5f82825260208201905092915050565b7f496e646578206f7574206f6620626f756e6473000000000000000000000000005f82015250565b5f61094d601383610909565b915061095882610919565b602082019050919050565b5f6020820190508181035f83015261097a81610941565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109e58261076d565b91506109f08361076d565b9250828203905081811115610a0857610a076109ae565b5b92915050565b7f5365636f6e6420696e646578206d757374206265206c61746572207468616e205f8201527f6669727374000000000000000000000000000000000000000000000000000000602082015250565b5f610a68602583610909565b9150610a7382610a0e565b604082019050919050565b5f6020820190508181035f830152610a9581610a5c565b9050919050565b5f610aa68261076d565b9150610ab18361076d565b9250828202610abf8161076d565b91508282048414831517610ad657610ad56109ae565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b148261076d565b9150610b1f8361076d565b925082610b2f57610b2e610add565b5b828204905092915050565b7f435049206d75737420626520706f7369746976650000000000000000000000005f82015250565b5f610b6e601483610909565b9150610b7982610b3a565b602082019050919050565b5f6020820190508181035f830152610b9b81610b62565b9050919050565b7f4e657720435049206973206964656e746963616c20746f2063757272656e74205f8201527f4350490000000000000000000000000000000000000000000000000000000000602082015250565b5f610bfc602383610909565b9150610c0782610ba2565b604082019050919050565b5f6020820190508181035f830152610c2981610bf0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610c64601f83610909565b9150610c6f82610c30565b602082019050919050565b5f6020820190508181035f830152610c9181610c58565b905091905056fea2646970667358221220988c629f10537e83e058cd8da24537a086d8f03c19333027d01dffe54bca4ebe64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10BC CODESIZE SUB DUP1 PUSH3 0x10BC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x298 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x19B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT PUSH3 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFF SWAP1 PUSH3 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH32 0xFAAE7E9EBFF587DDFD1FC7584C25926410FD174A75C5781A0CE1DFE041C0EDAB TIMESTAMP DUP3 PUSH1 0x40 MLOAD PUSH3 0x18C SWAP3 SWAP2 SWAP1 PUSH3 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH3 0x3E0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x274 DUP2 PUSH3 0x260 JUMP JUMPDEST DUP2 EQ PUSH3 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x292 DUP2 PUSH3 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2B0 JUMPI PUSH3 0x2AF PUSH3 0x25C JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2BF DUP5 DUP3 DUP6 ADD PUSH3 0x282 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2F3 DUP3 PUSH3 0x2C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x305 DUP2 PUSH3 0x2E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x320 PUSH0 DUP4 ADD DUP5 PUSH3 0x2FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20435049206D75737420626520706F73697469766500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x36C PUSH1 0x1C DUP4 PUSH3 0x326 JUMP JUMPDEST SWAP2 POP PUSH3 0x379 DUP3 PUSH3 0x336 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x39D DUP2 PUSH3 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3AF DUP2 PUSH3 0x260 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x3CA PUSH0 DUP4 ADD DUP6 PUSH3 0x3A4 JUMP JUMPDEST PUSH3 0x3D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x3A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCCE DUP1 PUSH3 0x3EE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E44884C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9E44884C EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xC9F087AB EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xCA267F28 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xEEF778D5 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x97A2AB02 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP3 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x1CD PUSH0 PUSH2 0x64D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x23F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29B JUMPI PUSH2 0x29A PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT DUP1 ISZERO PUSH2 0x2C9 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT JUMPDEST PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 GT PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x35F JUMPI PUSH2 0x35E PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x70E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x458 JUMPI PUSH2 0x457 PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP3 SUB PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH32 0xFAAE7E9EBFF587DDFD1FC7584C25926410FD174A75C5781A0CE1DFE041C0EDAB TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x52E SWAP3 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x53F PUSH2 0x75D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x54A PUSH2 0x5C6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C3 DUP2 PUSH2 0x64D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x766 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5EC PUSH2 0x1CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x64B JUMPI PUSH2 0x60F PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77F DUP2 PUSH2 0x76D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x798 PUSH0 DUP4 ADD DUP5 PUSH2 0x776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C7 DUP3 PUSH2 0x79E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0x7BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x7CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x803 DUP2 PUSH2 0x76D JUMP JUMPDEST DUP2 EQ PUSH2 0x80D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x81E DUP2 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x7F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x846 DUP5 DUP3 DUP6 ADD PUSH2 0x810 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x862 PUSH0 DUP4 ADD DUP6 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x86F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x776 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x7F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x899 DUP6 DUP3 DUP7 ADD PUSH2 0x810 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8AA DUP6 DUP3 DUP7 ADD PUSH2 0x810 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x7BD JUMP JUMPDEST DUP2 EQ PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8D8 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x7F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x900 DUP5 DUP3 DUP6 ADD PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x94D PUSH1 0x13 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0x958 DUP3 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x97A DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9E5 DUP3 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP PUSH2 0x9F0 DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x9AE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5365636F6E6420696E646578206D757374206265206C61746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6669727374000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA68 PUSH1 0x25 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 DUP3 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA95 DUP2 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA6 DUP3 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP PUSH2 0xAB1 DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xABF DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAD6 JUMPI PUSH2 0xAD5 PUSH2 0x9AE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB14 DUP3 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP PUSH2 0xB1F DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0xADD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x435049206D75737420626520706F736974697665000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB6E PUSH1 0x14 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xB79 DUP3 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB9B DUP2 PUSH2 0xB62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720435049206973206964656E746963616C20746F2063757272656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x4350490000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBFC PUSH1 0x23 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xC07 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC29 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC64 PUSH1 0x1F DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6F DUP3 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC91 DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP13 PUSH3 0x9F1053 PUSH31 0x83E058CD8DA24537A086D8F03C19333027D01DFFE54BCA4EBE64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "538:3300:3:-:0;;;1068:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1108:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;1151:1:3::1;1138:10;:14;1130:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1195:7;1208:90;;;;;;;;1243:15;1208:90;;;;1277:10;1208:90;;::::0;1195:104:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1314:39;1325:15;1342:10;1314:39;;;;;;;:::i;:::-;;;;;;;;1068:292:::0;538:3300;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:126::-;1088:7;1128:42;1121:5;1117:54;1106:65;;1051:126;;;:::o;1183:96::-;1220:7;1249:24;1267:5;1249:24;:::i;:::-;1238:35;;1183:96;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;1637:169::-;1721:11;1755:6;1750:3;1743:19;1795:4;1790:3;1786:14;1771:29;;1637:169;;;;:::o;1812:178::-;1952:30;1948:1;1940:6;1936:14;1929:54;1812:178;:::o;1996:366::-;2138:3;2159:67;2223:2;2218:3;2159:67;:::i;:::-;2152:74;;2235:93;2324:3;2235:93;:::i;:::-;2353:2;2348:3;2344:12;2337:19;;1996:366;;;:::o;2368:419::-;2534:4;2572:2;2561:9;2557:18;2549:26;;2621:9;2615:4;2611:20;2607:1;2596:9;2592:17;2585:47;2649:131;2775:4;2649:131;:::i;:::-;2641:139;;2368:419;;;:::o;2793:118::-;2880:24;2898:5;2880:24;:::i;:::-;2875:3;2868:37;2793:118;;:::o;2917:332::-;3038:4;3076:2;3065:9;3061:18;3053:26;;3089:71;3157:1;3146:9;3142:17;3133:6;3089:71;:::i;:::-;3170:72;3238:2;3227:9;3223:18;3214:6;3170:72;:::i;:::-;2917:332;;;;;:::o;538:3300:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DECIMALS_254": {
									"entryPoint": 432,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1478,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_224": {
									"entryPoint": 1894,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 1885,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 1806,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1613,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@computeInflation_470": {
									"entryPoint": 688,
									"id": 470,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCPIRecord_402": {
									"entryPoint": 502,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getCurrentCPI_370": {
									"entryPoint": 629,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRecordCount_412": {
									"entryPoint": 980,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 463,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 444,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1346,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCPI_355": {
									"entryPoint": 992,
									"id": 355,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf": {
									"entryPoint": 2874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d": {
									"entryPoint": 2978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9907:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:4",
														"type": ""
													}
												],
												"src": "442:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:4",
														"type": ""
													}
												],
												"src": "574:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:4",
														"type": ""
													}
												],
												"src": "676:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:4",
														"type": ""
													}
												],
												"src": "800:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:4",
														"type": ""
													}
												],
												"src": "1028:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:4"
															},
															"nodeType": "YulIf",
															"src": "1408:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:4",
														"type": ""
													}
												],
												"src": "1355:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:4",
														"type": ""
													}
												],
												"src": "1483:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:4"
															},
															"nodeType": "YulIf",
															"src": "1704:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:4",
														"type": ""
													}
												],
												"src": "1628:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2216:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2216:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2053:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2065:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:4",
														"type": ""
													}
												],
												"src": "1963:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2430:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2432:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2432:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2432:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2405:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2401:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2426:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:32:4"
															},
															"nodeType": "YulIf",
															"src": "2394:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2523:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2538:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2552:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2542:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2567:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2602:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2613:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2598:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2598:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2622:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2577:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2577:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2567:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2650:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2665:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2669:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2695:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2730:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2741:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2726:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2726:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2705:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2695:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2357:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2369:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2377:6:4",
														"type": ""
													}
												],
												"src": "2301:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2881:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2890:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2893:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2883:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2883:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2883:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2847:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2872:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2854:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2854:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2844:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:43:4"
															},
															"nodeType": "YulIf",
															"src": "2834:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2817:5:4",
														"type": ""
													}
												],
												"src": "2781:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2961:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2971:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2993:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2980:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2971:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3036:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3009:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3009:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2939:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2947:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2955:5:4",
														"type": ""
													}
												],
												"src": "2909:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3120:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3166:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3168:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3168:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3168:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3141:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:32:4"
															},
															"nodeType": "YulIf",
															"src": "3130:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3259:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3274:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3278:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3303:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3338:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3349:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3334:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3334:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3358:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3313:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3303:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3090:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3101:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3113:6:4",
														"type": ""
													}
												],
												"src": "3054:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3502:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3507:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3523:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3542:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3547:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3523:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3462:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3473:11:4",
														"type": ""
													}
												],
												"src": "3389:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3670:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3692:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3700:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3688:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3688:14:4"
																	},
																	{
																		"hexValue": "496e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3704:21:4",
																		"type": "",
																		"value": "Index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3681:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3662:6:4",
														"type": ""
													}
												],
												"src": "3564:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3895:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3961:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3966:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3902:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3895:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4067:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																	"nodeType": "YulIdentifier",
																	"src": "3978:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3978:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3978:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4080:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4091:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4096:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4080:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3873:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3881:3:4",
														"type": ""
													}
												],
												"src": "3739:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4282:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4292:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4304:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4292:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4339:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4350:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4335:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4335:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4358:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4354:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4354:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4328:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4384:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4518:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4384:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4262:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4277:4:4",
														"type": ""
													}
												],
												"src": "4111:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4564:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4584:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4574:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4678:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4671:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4671:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4695:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4536:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4750:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4767:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4760:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4760:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4760:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4864:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4867:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4857:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4888:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4891:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4881:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4881:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4881:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4722:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4953:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4963:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4986:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4968:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4963:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4997:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5020:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5002:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4997:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5031:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5043:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5046:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5031:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5073:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5075:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5075:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5075:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5070:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5061:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5061:11:4"
															},
															"nodeType": "YulIf",
															"src": "5058:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4939:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4942:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4948:4:4",
														"type": ""
													}
												],
												"src": "4908:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5214:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5232:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5232:14:4"
																	},
																	{
																		"hexValue": "5365636f6e6420696e646578206d757374206265206c61746572207468616e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5248:34:4",
																		"type": "",
																		"value": "Second index must be later than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5225:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5225:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5304:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5312:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5300:15:4"
																	},
																	{
																		"hexValue": "6669727374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5317:7:4",
																		"type": "",
																		"value": "first"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5293:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5206:6:4",
														"type": ""
													}
												],
												"src": "5108:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5484:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5494:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5560:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5501:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5666:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973",
																	"nodeType": "YulIdentifier",
																	"src": "5577:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5577:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5679:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5690:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5695:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5679:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5472:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5480:3:4",
														"type": ""
													}
												],
												"src": "5338:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5881:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5891:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5903:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5914:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5899:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5891:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5949:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5957:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5983:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6117:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5991:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5983:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5861:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5876:4:4",
														"type": ""
													}
												],
												"src": "5710:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6193:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6216:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6198:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6198:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6193:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6227:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6250:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6232:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6227:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6261:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6284:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6287:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6280:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6280:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6265:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6298:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6327:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6309:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6309:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6298:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6516:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6518:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6518:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6518:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6449:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6442:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6442:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6472:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6479:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6488:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6475:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6475:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6469:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6469:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6422:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6422:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6402:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:113:4"
															},
															"nodeType": "YulIf",
															"src": "6399:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6166:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6169:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6175:7:4",
														"type": ""
													}
												],
												"src": "6135:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6579:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6596:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6599:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6589:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6589:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6589:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6693:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6686:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6717:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6551:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6846:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6828:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6823:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6870:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6872:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6872:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6872:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6867:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:9:4"
															},
															"nodeType": "YulIf",
															"src": "6857:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6768:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6771:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6777:1:4",
														"type": ""
													}
												],
												"src": "6737:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7034:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7056:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7064:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7052:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7052:14:4"
																	},
																	{
																		"hexValue": "435049206d75737420626520706f736974697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7068:22:4",
																		"type": "",
																		"value": "CPI must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7045:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:46:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7045:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7026:6:4",
														"type": ""
													}
												],
												"src": "6928:170:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7250:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7260:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7267:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7267:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7432:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf",
																	"nodeType": "YulIdentifier",
																	"src": "7343:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7343:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7445:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7456:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7461:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7452:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7452:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7445:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7238:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7246:3:4",
														"type": ""
													}
												],
												"src": "7104:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7647:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7657:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7669:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7680:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7665:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7665:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7657:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7704:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7715:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7700:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7700:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7723:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7729:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7719:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7719:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7693:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7693:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7693:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7749:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7883:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7757:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7749:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7627:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7642:4:4",
														"type": ""
													}
												],
												"src": "7476:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8007:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8029:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8037:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8025:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8025:14:4"
																	},
																	{
																		"hexValue": "4e657720435049206973206964656e746963616c20746f2063757272656e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8041:34:4",
																		"type": "",
																		"value": "New CPI is identical to current "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8018:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8097:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8105:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8093:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8093:15:4"
																	},
																	{
																		"hexValue": "435049",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8110:5:4",
																		"type": "",
																		"value": "CPI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8086:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7999:6:4",
														"type": ""
													}
												],
												"src": "7901:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8275:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8285:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8351:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8292:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8292:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8457:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d",
																	"nodeType": "YulIdentifier",
																	"src": "8368:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8368:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8470:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8481:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8486:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8470:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8263:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8271:3:4",
														"type": ""
													}
												],
												"src": "8129:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8672:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8682:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8694:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8705:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8690:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8690:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8682:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8740:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8725:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8748:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8754:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8744:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8744:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8718:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8718:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8774:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8908:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8782:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8774:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8652:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8667:4:4",
														"type": ""
													}
												],
												"src": "8501:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9032:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9054:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9062:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9050:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9066:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9043:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9043:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9043:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9024:6:4",
														"type": ""
													}
												],
												"src": "8926:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9259:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9269:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9335:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9340:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9276:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9276:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9269:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9441:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "9352:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9352:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9352:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9454:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9465:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9470:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9461:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9461:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9454:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9247:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9255:3:4",
														"type": ""
													}
												],
												"src": "9113:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9656:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9666:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9678:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9689:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9674:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9666:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9713:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9724:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9709:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9709:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9732:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9738:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9728:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9728:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9702:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9702:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9702:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9758:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9892:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9766:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9758:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9636:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9651:4:4",
														"type": ""
													}
												],
												"src": "9485:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973(memPtr) {\n\n        mstore(add(memPtr, 0), \"Second index must be later than \")\n\n        mstore(add(memPtr, 32), \"first\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"CPI must be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d(memPtr) {\n\n        mstore(add(memPtr, 0), \"New CPI is identical to current \")\n\n        mstore(add(memPtr, 32), \"CPI\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80639e44884c116100645780639e44884c1461010c578063c9f087ab1461012a578063ca267f281461015a578063eef778d514610178578063f2fde38b1461019457610091565b80632e0f262514610095578063715018a6146100b35780638da5cb5b146100bd57806397a2ab02146100db575b5f80fd5b61009d6101b0565b6040516100aa9190610785565b60405180910390f35b6100bb6101bc565b005b6100c56101cf565b6040516100d291906107dd565b60405180910390f35b6100f560048036038101906100f09190610824565b6101f6565b60405161010392919061084f565b60405180910390f35b610114610275565b6040516101219190610785565b60405180910390f35b610144600480360381019061013f9190610876565b6102b0565b6040516101519190610785565b60405180910390f35b6101626103d4565b60405161016f9190610785565b60405180910390f35b610192600480360381019061018d9190610824565b6103e0565b005b6101ae60048036038101906101a991906108de565b610542565b005b670de0b6b3a764000081565b6101c46105c6565b6101cd5f61064d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80600280549050831061023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023690610963565b60405180910390fd5b5f6002848154811061025457610253610981565b5b905f5260205f2090600202019050805f015481600101549250925050915091565b5f6002600160028054905061028a91906109db565b8154811061029b5761029a610981565b5b905f5260205f20906002020160010154905090565b5f600280549050831080156102c9575060028054905082105b610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610963565b60405180910390fd5b82821161034a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190610a7e565b60405180910390fd5b5f6002848154811061035f5761035e610981565b5b905f5260205f20906002020190505f6002848154811061038257610381610981565b5b905f5260205f2090600202019050670de0b6b3a76400008260010154670de0b6b3a764000083600101546103b69190610a9c565b6103c09190610b0a565b6103ca91906109db565b9250505092915050565b5f600280549050905090565b6103e86105c6565b6103f061070e565b5f8111610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610b84565b60405180910390fd5b5f6002600160028054905061044791906109db565b8154811061045857610457610981565b5b905f5260205f2090600202019050806001015482036104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390610c12565b60405180910390fd5b6002604051806040016040528042815260200184815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001015550507ffaae7e9ebff587ddfd1fc7584c25926410fd174a75c5781a0ce1dfe041c0edab428360405161052e92919061084f565b60405180910390a15061053f61075d565b50565b61054a6105c6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105ba575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105b191906107dd565b60405180910390fd5b6105c38161064d565b50565b6105ce610766565b73ffffffffffffffffffffffffffffffffffffffff166105ec6101cf565b73ffffffffffffffffffffffffffffffffffffffff161461064b5761060f610766565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161064291906107dd565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90610c7a565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f819050919050565b61077f8161076d565b82525050565b5f6020820190506107985f830184610776565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107c78261079e565b9050919050565b6107d7816107bd565b82525050565b5f6020820190506107f05f8301846107ce565b92915050565b5f80fd5b6108038161076d565b811461080d575f80fd5b50565b5f8135905061081e816107fa565b92915050565b5f60208284031215610839576108386107f6565b5b5f61084684828501610810565b91505092915050565b5f6040820190506108625f830185610776565b61086f6020830184610776565b9392505050565b5f806040838503121561088c5761088b6107f6565b5b5f61089985828601610810565b92505060206108aa85828601610810565b9150509250929050565b6108bd816107bd565b81146108c7575f80fd5b50565b5f813590506108d8816108b4565b92915050565b5f602082840312156108f3576108f26107f6565b5b5f610900848285016108ca565b91505092915050565b5f82825260208201905092915050565b7f496e646578206f7574206f6620626f756e6473000000000000000000000000005f82015250565b5f61094d601383610909565b915061095882610919565b602082019050919050565b5f6020820190508181035f83015261097a81610941565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109e58261076d565b91506109f08361076d565b9250828203905081811115610a0857610a076109ae565b5b92915050565b7f5365636f6e6420696e646578206d757374206265206c61746572207468616e205f8201527f6669727374000000000000000000000000000000000000000000000000000000602082015250565b5f610a68602583610909565b9150610a7382610a0e565b604082019050919050565b5f6020820190508181035f830152610a9581610a5c565b9050919050565b5f610aa68261076d565b9150610ab18361076d565b9250828202610abf8161076d565b91508282048414831517610ad657610ad56109ae565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b148261076d565b9150610b1f8361076d565b925082610b2f57610b2e610add565b5b828204905092915050565b7f435049206d75737420626520706f7369746976650000000000000000000000005f82015250565b5f610b6e601483610909565b9150610b7982610b3a565b602082019050919050565b5f6020820190508181035f830152610b9b81610b62565b9050919050565b7f4e657720435049206973206964656e746963616c20746f2063757272656e74205f8201527f4350490000000000000000000000000000000000000000000000000000000000602082015250565b5f610bfc602383610909565b9150610c0782610ba2565b604082019050919050565b5f6020820190508181035f830152610c2981610bf0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610c64601f83610909565b9150610c6f82610c30565b602082019050919050565b5f6020820190508181035f830152610c9181610c58565b905091905056fea2646970667358221220988c629f10537e83e058cd8da24537a086d8f03c19333027d01dffe54bca4ebe64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E44884C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9E44884C EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xC9F087AB EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xCA267F28 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xEEF778D5 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x97A2AB02 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP3 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x1CD PUSH0 PUSH2 0x64D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x23F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29B JUMPI PUSH2 0x29A PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT DUP1 ISZERO PUSH2 0x2C9 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT JUMPDEST PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FF SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 GT PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x35F JUMPI PUSH2 0x35E PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x70E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x9DB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x458 JUMPI PUSH2 0x457 PUSH2 0x981 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP3 SUB PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH32 0xFAAE7E9EBFF587DDFD1FC7584C25926410FD174A75C5781A0CE1DFE041C0EDAB TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x52E SWAP3 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x53F PUSH2 0x75D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x54A PUSH2 0x5C6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C3 DUP2 PUSH2 0x64D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x766 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5EC PUSH2 0x1CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x64B JUMPI PUSH2 0x60F PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77F DUP2 PUSH2 0x76D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x798 PUSH0 DUP4 ADD DUP5 PUSH2 0x776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C7 DUP3 PUSH2 0x79E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0x7BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x7CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x803 DUP2 PUSH2 0x76D JUMP JUMPDEST DUP2 EQ PUSH2 0x80D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x81E DUP2 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x7F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x846 DUP5 DUP3 DUP6 ADD PUSH2 0x810 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x862 PUSH0 DUP4 ADD DUP6 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x86F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x776 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x88C JUMPI PUSH2 0x88B PUSH2 0x7F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x899 DUP6 DUP3 DUP7 ADD PUSH2 0x810 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8AA DUP6 DUP3 DUP7 ADD PUSH2 0x810 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x7BD JUMP JUMPDEST DUP2 EQ PUSH2 0x8C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8D8 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x7F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x900 DUP5 DUP3 DUP6 ADD PUSH2 0x8CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E647300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x94D PUSH1 0x13 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0x958 DUP3 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x97A DUP2 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9E5 DUP3 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP PUSH2 0x9F0 DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x9AE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5365636F6E6420696E646578206D757374206265206C61746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6669727374000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA68 PUSH1 0x25 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 DUP3 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA95 DUP2 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA6 DUP3 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP PUSH2 0xAB1 DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xABF DUP2 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAD6 JUMPI PUSH2 0xAD5 PUSH2 0x9AE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB14 DUP3 PUSH2 0x76D JUMP JUMPDEST SWAP2 POP PUSH2 0xB1F DUP4 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0xADD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x435049206D75737420626520706F736974697665000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB6E PUSH1 0x14 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xB79 DUP3 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB9B DUP2 PUSH2 0xB62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720435049206973206964656E746963616C20746F2063757272656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x4350490000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBFC PUSH1 0x23 DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xC07 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC29 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC64 PUSH1 0x1F DUP4 PUSH2 0x909 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6F DUP3 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC91 DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP13 PUSH3 0x9F1053 PUSH31 0x83E058CD8DA24537A086D8F03C19333027D01DFFE54BCA4EBE64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "538:3300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2395:261:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2040:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3238:598;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2768:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1486:437;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;671:39:3;706:4;671:39;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2395:261:3:-;2455:17;2474:11;2513:7;:14;;;;2505:5;:22;2497:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2561:24;2588:7;2596:5;2588:14;;;;;;;;:::i;:::-;;;;;;;;;;;;2561:41;;2620:6;:16;;;2638:6;:10;;;2612:37;;;;;2395:261;;;:::o;2040:112::-;2088:7;2114;2139:1;2122:7;:14;;;;:18;;;;:::i;:::-;2114:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;;;2107:38;;2040:112;:::o;3238:598::-;3319:21;3369:7;:14;;;;3360:6;:23;:50;;;;;3396:7;:14;;;;3387:6;:23;3360:50;3352:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3461:6;3452;:15;3444:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3519:25;3547:7;3555:6;3547:15;;;;;;;;:::i;:::-;;;;;;;;;;;;3519:43;;3572:25;3600:7;3608:6;3600:15;;;;;;;;:::i;:::-;;;;;;;;;;;;3572:43;;706:4;3806:7;:11;;;706:4;3781:7;:11;;;:22;;;;:::i;:::-;:36;;;;:::i;:::-;3780:49;;;;:::i;:::-;3764:65;;3342:494;;3238:598;;;;:::o;2768:96::-;2817:7;2843;:14;;;;2836:21;;2768:96;:::o;1486:437::-;1531:13:0;:11;:13::i;:::-;2261:21:1::1;:19;:21::i;:::-;1580:1:3::2;1571:6;:10;1563:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1616:28;1647:7;1672:1;1655:7;:14;;;;:18;;;;:::i;:::-;1647:27;;;;;;;;:::i;:::-;;;;;;;;;;;;1616:58;;1702:10;:14;;;1692:6;:24:::0;1684:72:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1766:7;1779:86;;;;;;;;1814:15;1779:86;;;;1848:6;1779:86;;::::0;1766:100:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:35;1892:15;1909:6;1881:35;;;;;;;:::i;:::-;;;;;;;;1553:370;2303:20:1::1;:18;:20::i;:::-;1486:437:3::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:332::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;2216:72;2284:2;2273:9;2269:18;2260:6;2216:72;:::i;:::-;1963:332;;;;;:::o;2301:474::-;2369:6;2377;2426:2;2414:9;2405:7;2401:23;2397:32;2394:119;;;2432:79;;:::i;:::-;2394:119;2552:1;2577:53;2622:7;2613:6;2602:9;2598:22;2577:53;:::i;:::-;2567:63;;2523:117;2679:2;2705:53;2750:7;2741:6;2730:9;2726:22;2705:53;:::i;:::-;2695:63;;2650:118;2301:474;;;;;:::o;2781:122::-;2854:24;2872:5;2854:24;:::i;:::-;2847:5;2844:35;2834:63;;2893:1;2890;2883:12;2834:63;2781:122;:::o;2909:139::-;2955:5;2993:6;2980:20;2971:29;;3009:33;3036:5;3009:33;:::i;:::-;2909:139;;;;:::o;3054:329::-;3113:6;3162:2;3150:9;3141:7;3137:23;3133:32;3130:119;;;3168:79;;:::i;:::-;3130:119;3288:1;3313:53;3358:7;3349:6;3338:9;3334:22;3313:53;:::i;:::-;3303:63;;3259:117;3054:329;;;;:::o;3389:169::-;3473:11;3507:6;3502:3;3495:19;3547:4;3542:3;3538:14;3523:29;;3389:169;;;;:::o;3564:::-;3704:21;3700:1;3692:6;3688:14;3681:45;3564:169;:::o;3739:366::-;3881:3;3902:67;3966:2;3961:3;3902:67;:::i;:::-;3895:74;;3978:93;4067:3;3978:93;:::i;:::-;4096:2;4091:3;4087:12;4080:19;;3739:366;;;:::o;4111:419::-;4277:4;4315:2;4304:9;4300:18;4292:26;;4364:9;4358:4;4354:20;4350:1;4339:9;4335:17;4328:47;4392:131;4518:4;4392:131;:::i;:::-;4384:139;;4111:419;;;:::o;4536:180::-;4584:77;4581:1;4574:88;4681:4;4678:1;4671:15;4705:4;4702:1;4695:15;4722:180;4770:77;4767:1;4760:88;4867:4;4864:1;4857:15;4891:4;4888:1;4881:15;4908:194;4948:4;4968:20;4986:1;4968:20;:::i;:::-;4963:25;;5002:20;5020:1;5002:20;:::i;:::-;4997:25;;5046:1;5043;5039:9;5031:17;;5070:1;5064:4;5061:11;5058:37;;;5075:18;;:::i;:::-;5058:37;4908:194;;;;:::o;5108:224::-;5248:34;5244:1;5236:6;5232:14;5225:58;5317:7;5312:2;5304:6;5300:15;5293:32;5108:224;:::o;5338:366::-;5480:3;5501:67;5565:2;5560:3;5501:67;:::i;:::-;5494:74;;5577:93;5666:3;5577:93;:::i;:::-;5695:2;5690:3;5686:12;5679:19;;5338:366;;;:::o;5710:419::-;5876:4;5914:2;5903:9;5899:18;5891:26;;5963:9;5957:4;5953:20;5949:1;5938:9;5934:17;5927:47;5991:131;6117:4;5991:131;:::i;:::-;5983:139;;5710:419;;;:::o;6135:410::-;6175:7;6198:20;6216:1;6198:20;:::i;:::-;6193:25;;6232:20;6250:1;6232:20;:::i;:::-;6227:25;;6287:1;6284;6280:9;6309:30;6327:11;6309:30;:::i;:::-;6298:41;;6488:1;6479:7;6475:15;6472:1;6469:22;6449:1;6442:9;6422:83;6399:139;;6518:18;;:::i;:::-;6399:139;6183:362;6135:410;;;;:::o;6551:180::-;6599:77;6596:1;6589:88;6696:4;6693:1;6686:15;6720:4;6717:1;6710:15;6737:185;6777:1;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6828:20;6846:1;6828:20;:::i;:::-;6823:25;;6867:1;6857:35;;6872:18;;:::i;:::-;6857:35;6914:1;6911;6907:9;6902:14;;6737:185;;;;:::o;6928:170::-;7068:22;7064:1;7056:6;7052:14;7045:46;6928:170;:::o;7104:366::-;7246:3;7267:67;7331:2;7326:3;7267:67;:::i;:::-;7260:74;;7343:93;7432:3;7343:93;:::i;:::-;7461:2;7456:3;7452:12;7445:19;;7104:366;;;:::o;7476:419::-;7642:4;7680:2;7669:9;7665:18;7657:26;;7729:9;7723:4;7719:20;7715:1;7704:9;7700:17;7693:47;7757:131;7883:4;7757:131;:::i;:::-;7749:139;;7476:419;;;:::o;7901:222::-;8041:34;8037:1;8029:6;8025:14;8018:58;8110:5;8105:2;8097:6;8093:15;8086:30;7901:222;:::o;8129:366::-;8271:3;8292:67;8356:2;8351:3;8292:67;:::i;:::-;8285:74;;8368:93;8457:3;8368:93;:::i;:::-;8486:2;8481:3;8477:12;8470:19;;8129:366;;;:::o;8501:419::-;8667:4;8705:2;8694:9;8690:18;8682:26;;8754:9;8748:4;8744:20;8740:1;8729:9;8725:17;8718:47;8782:131;8908:4;8782:131;:::i;:::-;8774:139;;8501:419;;;:::o;8926:181::-;9066:33;9062:1;9054:6;9050:14;9043:57;8926:181;:::o;9113:366::-;9255:3;9276:67;9340:2;9335:3;9276:67;:::i;:::-;9269:74;;9352:93;9441:3;9352:93;:::i;:::-;9470:2;9465:3;9461:12;9454:19;;9113:366;;;:::o;9485:419::-;9651:4;9689:2;9678:9;9674:18;9666:26;;9738:9;9732:4;9728:20;9724:1;9713:9;9709:17;9702:47;9766:131;9892:4;9766:131;:::i;:::-;9758:139;;9485:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "655600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "326",
								"computeInflation(uint256,uint256)": "infinite",
								"getCPIRecord(uint256)": "infinite",
								"getCurrentCPI()": "infinite",
								"getRecordCount()": "2484",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateCPI(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1068,
									"end": 1360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1118,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1152,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1148,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1152,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1130,
									"end": 1185,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1130,
									"end": 1185,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1243,
									"end": 1258,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1277,
									"end": 1287,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1208,
									"end": 1298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1299,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FAAE7E9EBFF587DDFD1FC7584C25926410FD174A75C5781A0CE1DFE041C0EDAB"
								},
								{
									"begin": 1325,
									"end": 1340,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1352,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1314,
									"end": 1353,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1314,
									"end": 1353,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 1068,
									"end": 1360,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1088,
									"end": 1095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1171,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1227,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1267,
									"end": 1272,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1249,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1390,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1372,
									"end": 1396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1367,
									"end": 1370,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1397,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1619,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1606,
									"end": 1623,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1553,
									"end": 1624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1721,
									"end": 1732,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1762,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1793,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1800,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1800,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1990,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1812,
									"end": 1990,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1952,
									"end": 1982,
									"name": "PUSH",
									"source": 4,
									"value": "496E697469616C20435049206D75737420626520706F73697469766500000000"
								},
								{
									"begin": 1948,
									"end": 1949,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1936,
									"end": 1950,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1929,
									"end": 1983,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1990,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2362,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1996,
									"end": 2362,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2141,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2159,
									"end": 2226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2223,
									"end": 2225,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 2218,
									"end": 2221,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2159,
									"end": 2226,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2226,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2159,
									"end": 2226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2226,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2226,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2235,
									"end": 2328,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2324,
									"end": 2327,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2235,
									"end": 2328,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2235,
									"end": 2328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2235,
									"end": 2328,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2235,
									"end": 2328,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2353,
									"end": 2355,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2348,
									"end": 2351,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2344,
									"end": 2356,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2337,
									"end": 2356,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2337,
									"end": 2356,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2362,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2362,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2362,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2787,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2368,
									"end": 2787,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2538,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2572,
									"end": 2574,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2561,
									"end": 2570,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2557,
									"end": 2575,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2549,
									"end": 2575,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2621,
									"end": 2630,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2615,
									"end": 2619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2611,
									"end": 2631,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2607,
									"end": 2608,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2596,
									"end": 2605,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2592,
									"end": 2609,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2585,
									"end": 2632,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2649,
									"end": 2780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2775,
									"end": 2779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2649,
									"end": 2780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 2649,
									"end": 2780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2649,
									"end": 2780,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2649,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2641,
									"end": 2780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2641,
									"end": 2780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2787,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2787,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2787,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2787,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2793,
									"end": 2911,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 2793,
									"end": 2911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2880,
									"end": 2904,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2898,
									"end": 2903,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2880,
									"end": 2904,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2880,
									"end": 2904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2880,
									"end": 2904,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2880,
									"end": 2904,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2875,
									"end": 2878,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2868,
									"end": 2905,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2793,
									"end": 2911,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2793,
									"end": 2911,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2793,
									"end": 2911,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3076,
									"end": 3078,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3065,
									"end": 3074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3053,
									"end": 3079,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3053,
									"end": 3079,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3089,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3146,
									"end": 3155,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3142,
									"end": 3159,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3139,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3089,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3089,
									"end": 3160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3089,
									"end": 3160,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 3089,
									"end": 3160,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3170,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3238,
									"end": 3240,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3227,
									"end": 3236,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3223,
									"end": 3241,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3214,
									"end": 3220,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3170,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3170,
									"end": 3242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3170,
									"end": 3242,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3170,
									"end": 3242,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2917,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 538,
									"end": 3838,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220988c629f10537e83e058cd8da24537a086d8f03c19333027d01dffe54bca4ebe64736f6c63430008140033",
									".code": [
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "9E44884C"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "9E44884C"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "C9F087AB"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "CA267F28"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "EEF778D5"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "2E0F2625"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "97A2AB02"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 538,
											"end": 3838,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 671,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 671,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2395,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2395,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2395,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2040,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2040,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3238,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3238,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3238,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2768,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2768,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1486,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1486,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 706,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 671,
											"end": 710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 671,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2527,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2497,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2497,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2595,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2596,
											"end": 2601,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2588,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2602,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2636,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2636,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2648,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2638,
											"end": 2648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2648,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2649,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2649,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 2649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2139,
											"end": 2140,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2122,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2122,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2114,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2141,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2145,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3376,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3369,
											"end": 3383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3369,
											"end": 3383,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3369,
											"end": 3383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3369,
											"end": 3383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3383,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3403,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3360,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3352,
											"end": 3434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3352,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3444,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3444,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3519,
											"end": 3544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3547,
											"end": 3562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3519,
											"end": 3562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3519,
											"end": 3562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3572,
											"end": 3597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3607,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3600,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3615,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3572,
											"end": 3615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3572,
											"end": 3615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3806,
											"end": 3817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3806,
											"end": 3817,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3781,
											"end": 3792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3792,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3781,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3781,
											"end": 3817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3781,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3781,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3780,
											"end": 3829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3780,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3829,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3780,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3829,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2850,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2843,
											"end": 2857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2857,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1577,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1581,
											"modifierDepth": 2,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1563,
											"end": 1606,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1563,
											"end": 1606,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1672,
											"end": 1673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1655,
											"end": 1662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1655,
											"end": 1669,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1669,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1669,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1655,
											"end": 1673,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1647,
											"end": 1674,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1674,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1674,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1674,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1712,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1702,
											"end": 1716,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1716,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1698,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1716,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1684,
											"end": 1756,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1684,
											"end": 1756,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1773,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1829,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1854,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FAAE7E9EBFF587DDFD1FC7584C25926410FD174A75C5781A0CE1DFE041C0EDAB"
										},
										{
											"begin": 1892,
											"end": 1907,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1915,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1881,
											"end": 1916,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1916,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1923,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2216,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2412,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2424,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2429,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2432,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2620,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2577,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2630,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2705,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2903,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2781,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2854,
											"end": 2878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2878,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2854,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2879,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2883,
											"end": 2895,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2834,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3048,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2909,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 3000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2971,
											"end": 3000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3009,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3042,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3009,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3048,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3383,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3054,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3168,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3358,
											"end": 3365,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3347,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3313,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3366,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3383,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3558,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3389,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3551,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3558,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3564,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3725,
											"name": "PUSH",
											"source": 4,
											"value": "496E646578206F7574206F6620626F756E647300000000000000000000000000"
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3681,
											"end": 3726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4105,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3739,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3961,
											"end": 3964,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3902,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3969,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3902,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4067,
											"end": 4070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3978,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4071,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3978,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4096,
											"end": 4098,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4530,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4111,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4317,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4304,
											"end": 4313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4358,
											"end": 4362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4354,
											"end": 4374,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4335,
											"end": 4352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4375,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4518,
											"end": 4522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4392,
											"end": 4523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4523,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4392,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4716,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4536,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4661,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4662,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4685,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4678,
											"end": 4679,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4709,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4710,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4902,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4722,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4847,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4767,
											"end": 4768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4857,
											"end": 4872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4895,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5102,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4908,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4986,
											"end": 4987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4968,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4988,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4968,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5002,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5002,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 5022,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 5022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5064,
											"end": 5068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5061,
											"end": 5072,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5075,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5075,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5093,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5075,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5102,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 5102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5332,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5108,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "PUSH",
											"source": 4,
											"value": "5365636F6E6420696E646578206D757374206265206C61746572207468616E20"
										},
										{
											"begin": 5244,
											"end": 5245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5232,
											"end": 5246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5317,
											"end": 5324,
											"name": "PUSH",
											"source": 4,
											"value": "6669727374000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5293,
											"end": 5325,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5704,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5338,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5565,
											"end": 5567,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5560,
											"end": 5563,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5501,
											"end": 5568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5568,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5501,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5577,
											"end": 5670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5690,
											"end": 5693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5686,
											"end": 5698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5916,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5903,
											"end": 5912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5891,
											"end": 5917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5891,
											"end": 5917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 5961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5953,
											"end": 5973,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 6117,
											"end": 6121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5991,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5710,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6545,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6135,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6216,
											"end": 6217,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6198,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6250,
											"end": 6251,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6232,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6232,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6285,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6280,
											"end": 6289,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6327,
											"end": 6338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6309,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6339,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6309,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6298,
											"end": 6339,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6298,
											"end": 6339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6488,
											"end": 6489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6473,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6469,
											"end": 6491,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6449,
											"end": 6450,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6422,
											"end": 6505,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6399,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6399,
											"end": 6538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6518,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6399,
											"end": 6538,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6399,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6545,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6731,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6551,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6676,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6686,
											"end": 6701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6922,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6737,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6828,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6867,
											"end": 6868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6857,
											"end": 6892,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6872,
											"end": 6890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6892,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6857,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6911,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6907,
											"end": 6916,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6902,
											"end": 6916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6902,
											"end": 6916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6922,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 7098,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6928,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7090,
											"name": "PUSH",
											"source": 4,
											"value": "435049206D75737420626520706F736974697665000000000000000000000000"
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7052,
											"end": 7066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 7098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 7098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7470,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7104,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7246,
											"end": 7249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7326,
											"end": 7329,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7267,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7267,
											"end": 7334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7267,
											"end": 7334,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7267,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7260,
											"end": 7334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7260,
											"end": 7334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7432,
											"end": 7435,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7343,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7436,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7343,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7461,
											"end": 7463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7452,
											"end": 7464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7895,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7476,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7642,
											"end": 7646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7680,
											"end": 7682,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7657,
											"end": 7683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7657,
											"end": 7683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7700,
											"end": 7717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7740,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7883,
											"end": 7887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7757,
											"end": 7888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7757,
											"end": 7888,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7757,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7749,
											"end": 7888,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7749,
											"end": 7888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7895,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8123,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 7901,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8041,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "4E657720435049206973206964656E746963616C20746F2063757272656E7420"
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8018,
											"end": 8076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8115,
											"name": "PUSH",
											"source": 4,
											"value": "4350490000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8105,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8086,
											"end": 8116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 8123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8271,
											"end": 8274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 8351,
											"end": 8354,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 8292,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8457,
											"end": 8460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 8368,
											"end": 8461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8477,
											"end": 8489,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8694,
											"end": 8703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8764,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8725,
											"end": 8742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8718,
											"end": 8765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 8782,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8926,
											"end": 9107,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 8926,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9099,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9062,
											"end": 9063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9043,
											"end": 9100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8926,
											"end": 9107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8926,
											"end": 9107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9113,
											"end": 9479,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 9113,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9340,
											"end": 9342,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9335,
											"end": 9338,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 9276,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9269,
											"end": 9343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9269,
											"end": 9343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9352,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9441,
											"end": 9444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9352,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 9352,
											"end": 9445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9352,
											"end": 9445,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9352,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9461,
											"end": 9473,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9454,
											"end": 9473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9454,
											"end": 9473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9113,
											"end": 9479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9113,
											"end": 9479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9113,
											"end": 9479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9113,
											"end": 9479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9485,
											"end": 9904,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9485,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9691,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9678,
											"end": 9687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9666,
											"end": 9692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9666,
											"end": 9692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9738,
											"end": 9747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9732,
											"end": 9736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9724,
											"end": 9725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9702,
											"end": 9749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9766,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9892,
											"end": 9896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9766,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 9766,
											"end": 9897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9766,
											"end": 9897,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9766,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9758,
											"end": 9897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9758,
											"end": 9897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9485,
											"end": 9904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9485,
											"end": 9904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9485,
											"end": 9904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9485,
											"end": 9904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"C/Consumer Price Index.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"computeInflation(uint256,uint256)": "c9f087ab",
							"getCPIRecord(uint256)": "97a2ab02",
							"getCurrentCPI()": "9e44884c",
							"getRecordCount()": "ca267f28",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateCPI(uint256)": "eef778d5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialCPI\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cpi\",\"type\":\"uint256\"}],\"name\":\"CPIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index2\",\"type\":\"uint256\"}],\"name\":\"computeInflation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inflationRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getCPIRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cpi\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentCPI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCPI\",\"type\":\"uint256\"}],\"name\":\"updateCPI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"computeInflation(uint256,uint256)\":{\"params\":{\"index1\":\"The index of the earlier record.\",\"index2\":\"The index of the later record (must be greater than index1).\"},\"returns\":{\"inflationRate\":\"The inflation rate as a percentage (scaled by DECIMALS). For example, a result of 0.05 * DECIMALS represents 5% inflation.\"}},\"constructor\":{\"params\":{\"initialCPI\":\"The initial CPI value (scaled by DECIMALS).\"}},\"getCPIRecord(uint256)\":{\"params\":{\"index\":\"The index of the record (0-based).\"},\"returns\":{\"cpi\":\"The CPI value at that time (scaled by DECIMALS).\",\"timestamp\":\"The timestamp of the record.\"}},\"getCurrentCPI()\":{\"returns\":{\"_0\":\"The most recent CPI value (scaled by DECIMALS).\"}},\"getRecordCount()\":{\"returns\":{\"_0\":\"The count of CPI updates.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCPI(uint256)\":{\"params\":{\"newCPI\":\"The new CPI value (scaled by DECIMALS).\"}}},\"title\":\"ConsumerPriceIndex\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeInflation(uint256,uint256)\":{\"notice\":\"Computes the inflation rate between two CPI records.\"},\"constructor\":{\"notice\":\"Constructor sets the initial CPI value.\"},\"getCPIRecord(uint256)\":{\"notice\":\"Returns the CPI record at a given index.\"},\"getCurrentCPI()\":{\"notice\":\"Returns the current CPI value.\"},\"getRecordCount()\":{\"notice\":\"Returns the total number of CPI records stored.\"},\"updateCPI(uint256)\":{\"notice\":\"Allows the owner to update the CPI value.\"}},\"notice\":\"This contract maintains a historical record of the Consumer Price Index (CPI). The owner can update the CPI value, and each update is recorded along with a timestamp. This design is dynamic (supports multiple updates), optimized (stores only necessary records), and secure (using Ownable and ReentrancyGuard).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/Consumer Price Index.sol\":\"ConsumerPriceIndex\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"C/Consumer Price Index.sol\":{\"keccak256\":\"0xb0f852cc292a9fbe17fb02af703a75411a68bd718014e74c383481be58e89afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a33967f62ec19974237e2f4a918f0685e932e1c2b71c48afab846d0612e7bc2\",\"dweb:/ipfs/QmQaSRGDbkHWvvoM1P1e8WdgoDDZa6NXTfaEq69zecPU4L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/Consumer Price Index.sol:ConsumerPriceIndex",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "C/Consumer Price Index.sol:ConsumerPriceIndex",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "C/Consumer Price Index.sol:ConsumerPriceIndex",
								"label": "records",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(CPIRecord)259_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(CPIRecord)259_storage)dyn_storage": {
								"base": "t_struct(CPIRecord)259_storage",
								"encoding": "dynamic_array",
								"label": "struct ConsumerPriceIndex.CPIRecord[]",
								"numberOfBytes": "32"
							},
							"t_struct(CPIRecord)259_storage": {
								"encoding": "inplace",
								"label": "struct ConsumerPriceIndex.CPIRecord",
								"members": [
									{
										"astId": 256,
										"contract": "C/Consumer Price Index.sol:ConsumerPriceIndex",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 258,
										"contract": "C/Consumer Price Index.sol:ConsumerPriceIndex",
										"label": "cpi",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"computeInflation(uint256,uint256)": {
								"notice": "Computes the inflation rate between two CPI records."
							},
							"constructor": {
								"notice": "Constructor sets the initial CPI value."
							},
							"getCPIRecord(uint256)": {
								"notice": "Returns the CPI record at a given index."
							},
							"getCurrentCPI()": {
								"notice": "Returns the current CPI value."
							},
							"getRecordCount()": {
								"notice": "Returns the total number of CPI records stored."
							},
							"updateCPI(uint256)": {
								"notice": "Allows the owner to update the CPI value."
							}
						},
						"notice": "This contract maintains a historical record of the Consumer Price Index (CPI). The owner can update the CPI value, and each update is recorded along with a timestamp. This design is dynamic (supports multiple updates), optimized (stores only necessary records), and secure (using Ownable and ReentrancyGuard).",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 243,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								242
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 220,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 219,
												"id": 222,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 242,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 229,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 228,
												"id": 231,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 242,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 242,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"C/Consumer Price Index.sol": {
				"ast": {
					"absolutePath": "C/Consumer Price Index.sol",
					"exportedSymbols": {
						"ConsumerPriceIndex": [
							471
						],
						"Context": [
							242
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 472,
							"sourceUnit": 148,
							"src": "57:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 472,
							"sourceUnit": 213,
							"src": "110:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 248,
										"name": "Ownable",
										"nameLocations": [
											"569:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "569:7:3"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "569:7:3"
								},
								{
									"baseName": {
										"id": 250,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"578:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "578:15:3"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "578:15:3"
								}
							],
							"canonicalName": "ConsumerPriceIndex",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "174:364:3",
								"text": "@title ConsumerPriceIndex\n @notice This contract maintains a historical record of the Consumer Price Index (CPI).\n The owner can update the CPI value, and each update is recorded along with a timestamp.\n This design is dynamic (supports multiple updates), optimized (stores only necessary records),\n and secure (using Ownable and ReentrancyGuard)."
							},
							"fullyImplemented": true,
							"id": 471,
							"linearizedBaseContracts": [
								471,
								212,
								147,
								242
							],
							"name": "ConsumerPriceIndex",
							"nameLocation": "547:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2e0f2625",
									"id": 254,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "695:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 471,
									"src": "671:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 252,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "706:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ConsumerPriceIndex.CPIRecord",
									"id": 259,
									"members": [
										{
											"constant": false,
											"id": 256,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "752:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "744:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 255,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "744:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "cpi",
											"nameLocation": "797:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "789:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 257,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "789:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CPIRecord",
									"nameLocation": "724:9:3",
									"nodeType": "StructDefinition",
									"scope": 471,
									"src": "717:130:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 263,
									"mutability": "mutable",
									"name": "records",
									"nameLocation": "873:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 471,
									"src": "853:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
										"typeString": "struct ConsumerPriceIndex.CPIRecord[]"
									},
									"typeName": {
										"baseType": {
											"id": 261,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 260,
												"name": "CPIRecord",
												"nameLocations": [
													"853:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 259,
												"src": "853:9:3"
											},
											"referencedDeclaration": 259,
											"src": "853:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
												"typeString": "struct ConsumerPriceIndex.CPIRecord"
											}
										},
										"id": 262,
										"nodeType": "ArrayTypeName",
										"src": "853:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage_ptr",
											"typeString": "struct ConsumerPriceIndex.CPIRecord[]"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "faae7e9ebff587ddfd1fc7584c25926410fd174a75c5781a0ce1dfe041c0edab",
									"id": 269,
									"name": "CPIUpdated",
									"nameLocation": "893:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "912:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "904:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "cpi",
												"nameLocation": "931:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "923:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:32:3"
									},
									"src": "887:49:3"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1120:240:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "initialCPI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "1138:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1151:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1138:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c20435049206d75737420626520706f736974697665",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1154:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb",
																"typeString": "literal_string \"Initial CPI must be positive\""
															},
															"value": "Initial CPI must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f5bb0eab60351c2b4c8c2a9481f40a0aaef5e900a7e6322602bdc55b5afe3bb",
																"typeString": "literal_string \"Initial CPI must be positive\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1130:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1130:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 290,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1243:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1249:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1243:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 292,
																	"name": "initialCPI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "1277:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 289,
																"name": "CPIRecord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "1208:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_CPIRecord_$259_storage_ptr_$",
																	"typeString": "type(struct ConsumerPriceIndex.CPIRecord storage pointer)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1232:9:3",
																"1272:3:3"
															],
															"names": [
																"timestamp",
																"cpi"
															],
															"nodeType": "FunctionCall",
															"src": "1208:90:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CPIRecord_$259_memory_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_CPIRecord_$259_memory_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord memory"
															}
														],
														"expression": {
															"id": 286,
															"name": "records",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1195:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1203:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1195:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage_ptr_$_t_struct$_CPIRecord_$259_storage_$returns$__$attached_to$_t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct ConsumerPriceIndex.CPIRecord storage ref[] storage pointer,struct ConsumerPriceIndex.CPIRecord storage ref)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "1195:104:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1325:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1331:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1325:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 299,
															"name": "initialCPI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "1342:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "CPIUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1314:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "EmitStatement",
												"src": "1309:44:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "942:121:3",
										"text": "@notice Constructor sets the initial CPI value.\n @param initialCPI The initial CPI value (scaled by DECIMALS)."
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 275,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1108:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1112:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1108:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 277,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 274,
												"name": "Ownable",
												"nameLocations": [
													"1100:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1100:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1100:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "initialCPI",
												"nameLocation": "1088:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "1080:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:20:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:3"
									},
									"scope": 471,
									"src": "1068:292:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1553:370:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "newCPI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1571:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1580:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1571:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "435049206d75737420626520706f736974697665",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1583:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf",
																"typeString": "literal_string \"CPI must be positive\""
															},
															"value": "CPI must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e61b0092a811b293c567b45c2fbd949f7be3f481a37d546ff2b5d5b8ac6f4cf",
																"typeString": "literal_string \"CPI must be positive\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1563:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1563:43:3"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "lastRecord",
														"nameLocation": "1634:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "1616:28:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
															"typeString": "struct ConsumerPriceIndex.CPIRecord"
														},
														"typeName": {
															"id": 321,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 320,
																"name": "CPIRecord",
																"nameLocations": [
																	"1616:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 259,
																"src": "1616:9:3"
															},
															"referencedDeclaration": 259,
															"src": "1616:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"baseExpression": {
														"id": 323,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "1647:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
															"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
														}
													},
													"id": 328,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 324,
																"name": "records",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "1655:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																	"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1663:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1655:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1672:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1655:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1647:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CPIRecord_$259_storage",
														"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1616:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 331,
																"name": "newCPI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1692:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 332,
																	"name": "lastRecord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "1702:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																		"typeString": "struct ConsumerPriceIndex.CPIRecord storage pointer"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1713:3:3",
																"memberName": "cpi",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "1702:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1692:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720435049206973206964656e746963616c20746f2063757272656e7420435049",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d",
																"typeString": "literal_string \"New CPI is identical to current CPI\""
															},
															"value": "New CPI is identical to current CPI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c7a3c164d557cc85bdad499338d987f2141866be8ded72e4a8b688fbdeb788d",
																"typeString": "literal_string \"New CPI is identical to current CPI\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1684:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1684:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "1684:72:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 342,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1814:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1820:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1814:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 344,
																	"name": "newCPI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1848:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 341,
																"name": "CPIRecord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "1779:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_CPIRecord_$259_storage_ptr_$",
																	"typeString": "type(struct ConsumerPriceIndex.CPIRecord storage pointer)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1803:9:3",
																"1843:3:3"
															],
															"names": [
																"timestamp",
																"cpi"
															],
															"nodeType": "FunctionCall",
															"src": "1779:86:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CPIRecord_$259_memory_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_CPIRecord_$259_memory_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord memory"
															}
														],
														"expression": {
															"id": 338,
															"name": "records",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1766:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1774:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1766:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage_ptr_$_t_struct$_CPIRecord_$259_storage_$returns$__$attached_to$_t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct ConsumerPriceIndex.CPIRecord storage ref[] storage pointer,struct ConsumerPriceIndex.CPIRecord storage ref)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:100:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1766:100:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 349,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1892:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1898:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1892:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 351,
															"name": "newCPI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "1909:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "CPIUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1881:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "EmitStatement",
												"src": "1876:40:3"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1366:115:3",
										"text": "@notice Allows the owner to update the CPI value.\n @param newCPI The new CPI value (scaled by DECIMALS)."
									},
									"functionSelector": "eef778d5",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 309,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 308,
												"name": "onlyOwner",
												"nameLocations": [
													"1530:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1530:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1530:9:3"
										},
										{
											"id": 311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 310,
												"name": "nonReentrant",
												"nameLocations": [
													"1540:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1540:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1540:12:3"
										}
									],
									"name": "updateCPI",
									"nameLocation": "1495:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "newCPI",
												"nameLocation": "1513:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1505:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:16:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:3"
									},
									"scope": 471,
									"src": "1486:437:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2097:55:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 361,
															"name": "records",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2114:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
															}
														},
														"id": 366,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 362,
																	"name": "records",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "2122:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																		"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2130:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2122:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2139:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2122:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2114:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CPIRecord_$259_storage",
															"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2142:3:3",
													"memberName": "cpi",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 258,
													"src": "2114:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 368,
												"nodeType": "Return",
												"src": "2107:38:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1929:106:3",
										"text": "@notice Returns the current CPI value.\n @return The most recent CPI value (scaled by DECIMALS)."
									},
									"functionSelector": "9e44884c",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentCPI",
									"nameLocation": "2049:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:2:3"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2088:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:9:3"
									},
									"scope": 471,
									"src": "2040:112:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "2487:169:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "2505:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 382,
																	"name": "records",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "2513:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																		"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2521:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2513:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2505:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2529:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2497:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "2497:54:3"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "2579:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "2561:24:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
															"typeString": "struct ConsumerPriceIndex.CPIRecord"
														},
														"typeName": {
															"id": 389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 388,
																"name": "CPIRecord",
																"nameLocations": [
																	"2561:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 259,
																"src": "2561:9:3"
															},
															"referencedDeclaration": 259,
															"src": "2561:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"baseExpression": {
														"id": 391,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2588:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
															"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
														}
													},
													"id": 393,
													"indexExpression": {
														"id": 392,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2596:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2588:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CPIRecord_$259_storage",
														"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2561:41:3"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 395,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2620:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																	"typeString": "struct ConsumerPriceIndex.CPIRecord storage pointer"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2627:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "2620:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 397,
																"name": "record",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2638:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																	"typeString": "struct ConsumerPriceIndex.CPIRecord storage pointer"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2645:3:3",
															"memberName": "cpi",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 258,
															"src": "2638:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 399,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2619:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 379,
												"id": 400,
												"nodeType": "Return",
												"src": "2612:37:3"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2158:232:3",
										"text": "@notice Returns the CPI record at a given index.\n @param index The index of the record (0-based).\n @return timestamp The timestamp of the record.\n @return cpi The CPI value at that time (scaled by DECIMALS)."
									},
									"functionSelector": "97a2ab02",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCPIRecord",
									"nameLocation": "2404:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2425:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2417:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:15:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2463:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2455:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "cpi",
												"nameLocation": "2482:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2474:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:32:3"
									},
									"scope": 471,
									"src": "2395:261:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2826:38:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 408,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2843:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
															"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2851:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2843:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 407,
												"id": 410,
												"nodeType": "Return",
												"src": "2836:21:3"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "2662:101:3",
										"text": "@notice Returns the total number of CPI records stored.\n @return The count of CPI updates."
									},
									"functionSelector": "ca267f28",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecordCount",
									"nameLocation": "2777:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2791:2:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2817:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:9:3"
									},
									"scope": 471,
									"src": "2768:96:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "3342:494:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 423,
																	"name": "index1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "3360:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 424,
																		"name": "records",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "3369:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																			"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3377:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3369:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3360:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 427,
																	"name": "index2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "3387:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 428,
																		"name": "records",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "3396:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
																			"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3404:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3396:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3387:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3360:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3412:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3352:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:82:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "3352:82:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "index2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3452:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 437,
																"name": "index1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "3461:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3452:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5365636f6e6420696e646578206d757374206265206c61746572207468616e206669727374",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3469:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973",
																"typeString": "literal_string \"Second index must be later than first\""
															},
															"value": "Second index must be later than first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b12697874c911deb3d3ea1c8dcf0a0707d246d700cb267837769e587c208973",
																"typeString": "literal_string \"Second index must be later than first\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3444:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3444:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "3444:65:3"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "record1",
														"nameLocation": "3537:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "3519:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
															"typeString": "struct ConsumerPriceIndex.CPIRecord"
														},
														"typeName": {
															"id": 443,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 442,
																"name": "CPIRecord",
																"nameLocations": [
																	"3519:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 259,
																"src": "3519:9:3"
															},
															"referencedDeclaration": 259,
															"src": "3519:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"baseExpression": {
														"id": 445,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "3547:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
															"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "index1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3555:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3547:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CPIRecord_$259_storage",
														"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:43:3"
											},
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "record2",
														"nameLocation": "3590:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "3572:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
															"typeString": "struct ConsumerPriceIndex.CPIRecord"
														},
														"typeName": {
															"id": 450,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 449,
																"name": "CPIRecord",
																"nameLocations": [
																	"3572:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 259,
																"src": "3572:9:3"
															},
															"referencedDeclaration": 259,
															"src": "3572:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																"typeString": "struct ConsumerPriceIndex.CPIRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"baseExpression": {
														"id": 452,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "3600:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_CPIRecord_$259_storage_$dyn_storage",
															"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref[] storage ref"
														}
													},
													"id": 454,
													"indexExpression": {
														"id": 453,
														"name": "index2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "3608:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3600:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CPIRecord_$259_storage",
														"typeString": "struct ConsumerPriceIndex.CPIRecord storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3572:43:3"
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "inflationRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "3764:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 457,
																				"name": "record2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "3781:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																					"typeString": "struct ConsumerPriceIndex.CPIRecord storage pointer"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3789:3:3",
																			"memberName": "cpi",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 258,
																			"src": "3781:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 459,
																			"name": "DECIMALS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 254,
																			"src": "3795:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3781:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 461,
																			"name": "record1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "3806:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CPIRecord_$259_storage_ptr",
																				"typeString": "struct ConsumerPriceIndex.CPIRecord storage pointer"
																			}
																		},
																		"id": 462,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3814:3:3",
																		"memberName": "cpi",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 258,
																		"src": "3806:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3781:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 464,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3780:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 465,
															"name": "DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "3821:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3780:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3764:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "3764:65:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2870:363:3",
										"text": "@notice Computes the inflation rate between two CPI records.\n @param index1 The index of the earlier record.\n @param index2 The index of the later record (must be greater than index1).\n @return inflationRate The inflation rate as a percentage (scaled by DECIMALS).\n For example, a result of 0.05 * DECIMALS represents 5% inflation."
									},
									"functionSelector": "c9f087ab",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeInflation",
									"nameLocation": "3247:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "index1",
												"nameLocation": "3272:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "3264:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3264:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "index2",
												"nameLocation": "3288:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "3280:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:32:3"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "inflationRate",
												"nameLocation": "3327:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "3319:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3318:23:3"
									},
									"scope": 471,
									"src": "3238:598:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 472,
							"src": "538:3300:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								269
							]
						}
					],
					"src": "32:3807:3"
				},
				"id": 3
			}
		}
	}
}